package it.eng.myportal.entity;

// Generated Mar 1, 2012 12:28:41 PM by Hibernate Tools 3.4.0.CR1
import it.eng.myportal.entity.decodifiche.DeGradoLin;
import it.eng.myportal.entity.decodifiche.DeLingua;
import it.eng.myportal.entity.decodifiche.sil.DeGradoLinSil;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

import org.hibernate.annotations.Type;

/**
 * VaLingua generated by hbm2java
 */

@Entity
@Table(name = "va_lingua", schema = "myportal")
@NamedQueries({ @NamedQuery(name = "findByIdVacancy", query = "select l from VaLingua l where l.vaDatiVacancy.idVaDatiVacancy = :id order by l.deLingua.denominazione") })
public class VaLingua extends AbstractEntity implements java.io.Serializable {
	private static final long serialVersionUID = 531052L;
	private Integer idVaLingua;
	private DeLingua deLingua;
	private VaDatiVacancy vaDatiVacancy;
	private DeGradoLin deGradoLinByCodGradoScritto;
	private DeGradoLin deGradoLinByCodGradoLetto;
	private DeGradoLin deGradoLinByCodGradoParlato;
	private DeGradoLinSil deGradoSilScritto;
	private DeGradoLinSil deGradoSilLetto;
	private DeGradoLinSil deGradoSilParlato;
	private Boolean flagMadrelingua;
	private String opzIndispensabile;

	public VaLingua() {
	}

	@Id
	@SequenceGenerator(name = "va_lingua_id_va_lingua_seq", sequenceName = "va_lingua_id_va_lingua_seq", allocationSize = 1)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "va_lingua_id_va_lingua_seq")
	@Column(name = "id_va_lingua", unique = true, nullable = false)
	public Integer getIdVaLingua() {
		return this.idVaLingua;
	}

	public void setIdVaLingua(Integer idVaLingua) {
		this.idVaLingua = idVaLingua;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "cod_grado_scritto")
	public DeGradoLin getDeGradoLinByCodGradoScritto() {
		return this.deGradoLinByCodGradoScritto;
	}

	public void setDeGradoLinByCodGradoScritto(DeGradoLin deGradoLinByCodGradoScritto) {
		this.deGradoLinByCodGradoScritto = deGradoLinByCodGradoScritto;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "cod_lingua", nullable = false)
	public DeLingua getDeLingua() {
		return this.deLingua;
	}

	public void setDeLingua(DeLingua deLingua) {
		this.deLingua = deLingua;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "id_va_dati_vacancy", nullable = false)
	public VaDatiVacancy getVaDatiVacancy() {
		return this.vaDatiVacancy;
	}

	public void setVaDatiVacancy(VaDatiVacancy vaDatiVacancy) {
		this.vaDatiVacancy = vaDatiVacancy;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "cod_grado_letto")
	public DeGradoLin getDeGradoLinByCodGradoLetto() {
		return this.deGradoLinByCodGradoLetto;
	}

	public void setDeGradoLinByCodGradoLetto(DeGradoLin deGradoLinByCodGradoLetto) {
		this.deGradoLinByCodGradoLetto = deGradoLinByCodGradoLetto;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "cod_grado_parlato")
	public DeGradoLin getDeGradoLinByCodGradoParlato() {
		return this.deGradoLinByCodGradoParlato;
	}

	public void setDeGradoLinByCodGradoParlato(DeGradoLin deGradoLinByCodGradoParlato) {
		this.deGradoLinByCodGradoParlato = deGradoLinByCodGradoParlato;
	}

	@Type(type = "yes_no")
	@Column(name = "flag_madrelingua", nullable = false, length = 1)
	public Boolean getFlagMadrelingua() {
		return this.flagMadrelingua;
	}

	public void setFlagMadrelingua(Boolean flagMadrelingua) {
		this.flagMadrelingua = flagMadrelingua;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "cod_grado_sil_scritto")
	public DeGradoLinSil getDeGradoSilScritto() {
		return deGradoSilScritto;
	}

	public void setDeGradoSilScritto(DeGradoLinSil deGradoSilScritto) {
		this.deGradoSilScritto = deGradoSilScritto;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "cod_grado_sil_letto")
	public DeGradoLinSil getDeGradoSilLetto() {
		return deGradoSilLetto;
	}

	public void setDeGradoSilLetto(DeGradoLinSil deGradoSilLetto) {
		this.deGradoSilLetto = deGradoSilLetto;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "cod_grado_sil_parlato")
	public DeGradoLinSil getDeGradoSilParlato() {
		return deGradoSilParlato;
	}

	public void setDeGradoSilParlato(DeGradoLinSil deGradoSilParlato) {
		this.deGradoSilParlato = deGradoSilParlato;
	}

	@Column(name = "opz_indispensabile", length = 1)
	public String getOpzIndispensabile() {
		return opzIndispensabile;
	}

	public void setOpzIndispensabile(String opzIndispensabile) {
		this.opzIndispensabile = opzIndispensabile;
	}


	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((idVaLingua == null) ? 0 : idVaLingua.hashCode());
		return result;
	}
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		VaLingua other = (VaLingua) obj;
		if (idVaLingua == null) {
			if (other.idVaLingua != null)
				return false;
		} else if (!idVaLingua.equals(other.idVaLingua))
			return false;
		return true;
	}

}
