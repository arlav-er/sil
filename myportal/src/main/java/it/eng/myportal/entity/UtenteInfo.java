package it.eng.myportal.entity;

// Generated Mar 1, 2012 12:28:41 PM by Hibernate Tools 3.4.0.CR1
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.hibernate.annotations.Type;

import it.eng.myportal.entity.decodifiche.DeCittadinanza;
import it.eng.myportal.entity.decodifiche.DeComune;
import it.eng.myportal.entity.decodifiche.DeGenere;
import it.eng.myportal.entity.decodifiche.DeMotivoPermesso;
import it.eng.myportal.entity.decodifiche.DeProvincia;
import it.eng.myportal.entity.decodifiche.DeTitoloSoggiorno;

/**
 * UtenteInfo generated by hbm2java
 */
@Entity
@Table(name = "utente_info", schema = "mycas")
public class UtenteInfo extends AbstractEntity implements java.io.Serializable {
	private static final long serialVersionUID = 978984L;

	private PfPrincipal pfPrincipal;
	private Integer idPfPrincipal;

	private DeProvincia deProvincia;
	private DeComune deComuneNascita;
	private Poi poi;
	private DeComune deComuneDomicilio;
	private String telUfficio;
	private String telCasa;
	private String fax;
	private String cellulare;
	private String cellulareOTP;
	private String codiceFiscale;
	private String indirizzoDomicilio;
	private Date dtNascita;
	private DeCittadinanza deCittadinanza;
	private String emailPEC;
	private String documentoIdentita;
	private DeTitoloSoggiorno documentoSoggiorno;
	private String numeroDocumento;
	private Date dataScadenzaDocumento;
	private String numeroAssicurata;
	private Date dataAssicurata;
	private byte[] foto;

	private Boolean flagAcceptedInformativaDid;
	private Boolean flagAcceptedInformativaStatoOcc;
	private Boolean flagAcceptedInformativaPercLav;
	private Boolean flagAcceptedInformativaConfermaPeriodica;
	private Boolean flagAcceptedInformativaRinnovoPatto;
	private String codStatoAtipico;

	// youth garantee
	private String capDomicilio;
	private DeGenere deGenere;
	private DeMotivoPermesso deMotivoPermesso;
	private DeComune deComuneResidenza;
	private String indirizzoResidenza;
	private String capResidenza;
	private Boolean flgConsensoSms;
	// OTP
	private String codServiziAmministrativi;

	public UtenteInfo() {
	}

	@Id
	@Column(name = "id_pf_principal", unique = true, nullable = false)
	public Integer getIdPfPrincipal() {
		return this.idPfPrincipal;
	}

	public void setIdPfPrincipal(Integer idPfPrincipal) {
		this.idPfPrincipal = idPfPrincipal;
	}

	@PrimaryKeyJoinColumn
	@OneToOne(fetch = FetchType.LAZY)
	public PfPrincipal getPfPrincipal() {
		return this.pfPrincipal;
	}

	public void setPfPrincipal(PfPrincipal pfPrincipal) {
		this.pfPrincipal = pfPrincipal;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cod_provincia")
	public DeProvincia getDeProvincia() {
		return this.deProvincia;
	}

	public void setDeProvincia(DeProvincia deProvincia) {
		this.deProvincia = deProvincia;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cod_com_nascita")
	public DeComune getDeComuneNascita() {
		return this.deComuneNascita;
	}

	public void setDeComuneNascita(DeComune deComuneByCodComNascita) {
		this.deComuneNascita = deComuneByCodComNascita;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_poi_domicilio")
	public Poi getPoi() {
		return this.poi;
	}

	public void setPoi(Poi poi) {
		this.poi = poi;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cod_com_domicilio")
	public DeComune getDeComuneDomicilio() {
		return this.deComuneDomicilio;
	}

	public void setDeComuneDomicilio(DeComune deComuneByCodComDomicilio) {
		this.deComuneDomicilio = deComuneByCodComDomicilio;
	}

	@Column(name = "tel_ufficio", length = 20)
	public String getTelUfficio() {
		return this.telUfficio;
	}

	public void setTelUfficio(String telUfficio) {
		this.telUfficio = telUfficio;
	}

	@Column(name = "tel_casa", length = 20)
	public String getTelCasa() {
		return this.telCasa;
	}

	public void setTelCasa(String telCasa) {
		this.telCasa = telCasa;
	}

	@Column(name = "fax", length = 20)
	public String getFax() {
		return this.fax;
	}

	public void setFax(String fax) {
		this.fax = fax;
	}

	@Column(name = "cellulare", length = 20)
	public String getCellulare() {
		return this.cellulare;
	}

	public void setCellulare(String cellulare) {
		this.cellulare = cellulare;
	}

	@Column(length = 50, name = "cellulare_otp")
	public String getCellulareOTP() {
		return cellulareOTP;
	}

	public void setCellulareOTP(String cellulareOTP) {
		this.cellulareOTP = cellulareOTP;
	}

	@Column(name = "indirizzo_domicilio", length = 512)
	public String getIndirizzoDomicilio() {
		return this.indirizzoDomicilio;
	}

	public void setIndirizzoDomicilio(String indirizzoDomicilio) {
		this.indirizzoDomicilio = indirizzoDomicilio;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "dt_nascita", length = 13)
	public Date getDtNascita() {
		return this.dtNascita;
	}

	public void setDtNascita(Date dtNascita) {
		this.dtNascita = dtNascita;
	}

	@Column(name = "foto")
	public byte[] getFoto() {
		return this.foto;
	}

	public void setFoto(byte[] foto) {
		this.foto = foto;
	}

	@Column(name = "codice_fiscale", length = 16)
	public String getCodiceFiscale() {
		return codiceFiscale;
	}

	public void setCodiceFiscale(String codiceFiscale) {
		this.codiceFiscale = codiceFiscale;
	}

	@Column(name = "email_pec")
	public String getEmailPEC() {
		return emailPEC;
	}

	public void setEmailPEC(String emailPEC) {
		this.emailPEC = emailPEC;
	}

	@Column(name = "documento_identita")
	public String getDocumentoIdentita() {
		return documentoIdentita;
	}

	public void setDocumentoIdentita(String documentoIdentita) {
		this.documentoIdentita = documentoIdentita;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cod_documento_soggiorno")
	public DeTitoloSoggiorno getDocumentoSoggiorno() {
		return documentoSoggiorno;
	}

	public void setDocumentoSoggiorno(DeTitoloSoggiorno documentoSoggiorno) {
		this.documentoSoggiorno = documentoSoggiorno;
	}

	@Column(name = "numero_documento")
	public String getNumeroDocumento() {
		return numeroDocumento;
	}

	public void setNumeroDocumento(String numeroDocumento) {
		this.numeroDocumento = numeroDocumento;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "dt_scadenza_documento")
	public Date getDataScadenzaDocumento() {
		return dataScadenzaDocumento;
	}

	public void setDataScadenzaDocumento(Date dataScadenzaDocumento) {
		this.dataScadenzaDocumento = dataScadenzaDocumento;
	}

	@Column(name = "numero_assicurata")
	public String getNumeroAssicurata() {
		return numeroAssicurata;
	}

	public void setNumeroAssicurata(String numeroAssicurata) {
		this.numeroAssicurata = numeroAssicurata;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "dt_assicurata")
	public Date getDataAssicurata() {
		return dataAssicurata;
	}

	public void setDataAssicurata(Date dataAssicurata) {
		this.dataAssicurata = dataAssicurata;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cod_cittadinanza")
	public DeCittadinanza getDeCittadinanza() {
		return deCittadinanza;
	}

	public void setDeCittadinanza(DeCittadinanza deCittadinanza) {
		this.deCittadinanza = deCittadinanza;
	}

	@Type(type = "yes_no")
	@Column(name = "flag_accepted_informativa_did", nullable = false, length = 1)
	public Boolean getFlgAcceptedInformativaDid() {
		return flagAcceptedInformativaDid;
	}

	public void setFlgAcceptedInformativaDid(Boolean flgAcceptedInformativaDid) {
		this.flagAcceptedInformativaDid = flgAcceptedInformativaDid;
	}

	@Type(type = "yes_no")
	@Column(name = "flag_accepted_informativa_stato_occ", nullable = false, length = 1)
	public Boolean getFlgAcceptedInformativaStatoOcc() {
		return flagAcceptedInformativaStatoOcc;
	}

	public void setFlgAcceptedInformativaStatoOcc(Boolean flgAcceptedInformativaStatoOcc) {
		this.flagAcceptedInformativaStatoOcc = flgAcceptedInformativaStatoOcc;
	}

	@Type(type = "yes_no")
	@Column(name = "flag_accepted_informativa_perc_lav", nullable = false, length = 1)
	public Boolean getFlgAcceptedInformativaPercLav() {
		return flagAcceptedInformativaPercLav;
	}

	public void setFlgAcceptedInformativaPercLav(Boolean flgAcceptedInformativaPercLav) {
		this.flagAcceptedInformativaPercLav = flgAcceptedInformativaPercLav;
	}

	@Type(type = "yes_no")
	@Column(name = "flag_accepted_informativa_conferma_periodica", nullable = false, length = 1)
	public Boolean getFlgAcceptedInformativaConfermaPeriodica() {
		return flagAcceptedInformativaConfermaPeriodica;
	}

	public void setFlgAcceptedInformativaConfermaPeriodica(Boolean flagAcceptedInformativaConfermaPeriodica) {
		this.flagAcceptedInformativaConfermaPeriodica = flagAcceptedInformativaConfermaPeriodica;
	}

	@Type(type = "yes_no")
	@Column(name = "flag_accepted_informativa_rinnovo_patto", nullable = false, length = 1)
	public Boolean getFlgAcceptedInformativaRinnovoPatto() {
		return flagAcceptedInformativaRinnovoPatto;
	}

	public void setFlgAcceptedInformativaRinnovoPatto(Boolean flagAcceptedInformativaRinnovoPatto) {
		this.flagAcceptedInformativaRinnovoPatto = flagAcceptedInformativaRinnovoPatto;
	}

	@Column(name = "cod_stato_atipico", length = 1)
	public String getCodStatoAtipico() {
		return this.codStatoAtipico;
	}

	public void setCodStatoAtipico(String codStatoAtipico) {
		this.codStatoAtipico = codStatoAtipico;
	}

	@Column(name = "cap_domicilio", length = 5)
	public String getCapDomicilio() {
		return capDomicilio;
	}

	public void setCapDomicilio(String capDomicilio) {
		this.capDomicilio = capDomicilio;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cod_genere")
	public DeGenere getDeGenere() {
		return deGenere;
	}

	public void setDeGenere(DeGenere deGenere) {
		this.deGenere = deGenere;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cod_motivo_permesso")
	public DeMotivoPermesso getDeMotivoPermesso() {
		return deMotivoPermesso;
	}

	public void setDeMotivoPermesso(DeMotivoPermesso deMotivoPermesso) {
		this.deMotivoPermesso = deMotivoPermesso;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cod_com_residenza")
	public DeComune getDeComuneResidenza() {
		return deComuneResidenza;
	}

	public void setDeComuneResidenza(DeComune deComuneResidenza) {
		this.deComuneResidenza = deComuneResidenza;
	}

	@Column(name = "indirizzo_residenza", length = 100)
	public String getIndirizzoResidenza() {
		return indirizzoResidenza;
	}

	public void setIndirizzoResidenza(String indirizzoResidenza) {
		this.indirizzoResidenza = indirizzoResidenza;
	}

	@Column(name = "cap_residenza", length = 5)
	public String getCapResidenza() {
		return capResidenza;
	}

	public void setCapResidenza(String capResidenza) {
		this.capResidenza = capResidenza;
	}

	@Type(type = "yes_no")
	@Column(name = "flg_consenso_sms", nullable = false, length = 1)
	public Boolean getFlgConsensoSms() {
		return flgConsensoSms;
	}

	public void setFlgConsensoSms(Boolean flgConsensoSms) {
		this.flgConsensoSms = flgConsensoSms;
	}

	@Transient
	public String getCodServiziAmministrativi() {
		if (getIdPfPrincipal() == null)
			throw new RuntimeException(
					"Impossibile ottenere il codice servizi amministrativi per un utente non ancora persistito");
		return codAmmEncode(getIdPfPrincipal());
	}

	/**
	 * Funzioni della commons, copiate qui tristemente
	 * 
	 */
	private static final int COD_AMMINISTRATIVO_SHIFT = 123456;

	public static String codAmmEncode(Integer idPfPrincipal) {
		return Long.toHexString(COD_AMMINISTRATIVO_SHIFT + 2 * idPfPrincipal).toUpperCase();
	}

	public static Long codAmmDecode(String idPfPrincipal) {
		return (Long.parseLong(idPfPrincipal, 16) - COD_AMMINISTRATIVO_SHIFT) / 2;
	}

}
