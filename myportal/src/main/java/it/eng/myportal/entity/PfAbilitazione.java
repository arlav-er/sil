package it.eng.myportal.entity;

// Generated Mar 1, 2012 12:28:41 PM by Hibernate Tools 3.4.0.CR1
import it.eng.myportal.entity.decodifiche.DeAttivitaPf;
import it.eng.myportal.entity.decodifiche.DeFiltro;
import it.eng.myportal.entity.decodifiche.DeRuoloPortale;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import org.hibernate.annotations.Type;

/**
 * PfAbilitazione generated by hbm2java
 */
@Entity
@Table(name = "pf_abilitazione", schema = "myportal",uniqueConstraints = { @UniqueConstraint(columnNames = { "cod_attivita_pf",
"cod_ruolo_portale" }) })
@NamedQueries({ @NamedQuery(name = "findPfAbilitazioneByCodRuoloPortale", query = "SELECT abi FROM PfAbilitazione abi WHERE abi.deRuoloPortale.codRuoloPortale = :codRuoloPortale") })
public class PfAbilitazione extends AbstractEntity implements java.io.Serializable {
	private static final long serialVersionUID = 494966L;
	private Integer idPfAbilitazione;

	private DeAttivitaPf deAttivitaPf;
	private DeRuoloPortale deRuoloPortale;
	private DeFiltro deFiltro;
	private Boolean flagInserimento;
	private Boolean flagModifica;
	private Boolean flagLettura;
	private Boolean flagCancellazione;
	private Boolean flagAmministrazione;
	private Boolean flagVisibile;

	public PfAbilitazione() {
	}

	public PfAbilitazione(Integer idPfAbilitazione, PfPrincipal pfPrincipalByIdPrincipalMod,
			PfPrincipal pfPrincipalByIdPrincipalIns, DeAttivitaPf deAttivitaPf, DeRuoloPortale deRuoloPortale,
			Boolean flagInserimento, Boolean flagModifica, Boolean flagLettura, Boolean flagCancellazione,
			Boolean flagAmministrazione, Date dtmIns, Date dtmMod, Boolean flagVisibile) {
		super(pfPrincipalByIdPrincipalIns, pfPrincipalByIdPrincipalMod, dtmIns, dtmMod);
		this.idPfAbilitazione = idPfAbilitazione;

		this.deAttivitaPf = deAttivitaPf;
		this.deRuoloPortale = deRuoloPortale;
		this.flagInserimento = flagInserimento;
		this.flagModifica = flagModifica;
		this.flagLettura = flagLettura;
		this.flagCancellazione = flagCancellazione;
		this.flagAmministrazione = flagAmministrazione;
		this.flagVisibile = flagVisibile;
	}

	@Id
	@SequenceGenerator(name = "pf_abilitazione_id_pf_abilitazione_seq", sequenceName = "pf_abilitazione_id_pf_abilitazione_seq", allocationSize = 1)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "pf_abilitazione_id_pf_abilitazione_seq")
	@Column(name = "id_pf_abilitazione", unique = true, nullable = false)
	public Integer getIdPfAbilitazione() {
		return this.idPfAbilitazione;
	}

	public void setIdPfAbilitazione(Integer idPfAbilitazione) {
		this.idPfAbilitazione = idPfAbilitazione;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cod_attivita_pf", nullable = false)
	public DeAttivitaPf getDeAttivitaPf() {
		return this.deAttivitaPf;
	}

	public void setDeAttivitaPf(DeAttivitaPf deAttivitaPf) {
		this.deAttivitaPf = deAttivitaPf;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "cod_ruolo_portale", nullable = false)
	public DeRuoloPortale getDeRuoloPortale() {
		return this.deRuoloPortale;
	}

	public void setDeRuoloPortale(DeRuoloPortale deRuoloPortale) {
		this.deRuoloPortale = deRuoloPortale;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cod_filtro")
	public DeFiltro getDeFiltro() {
		return this.deFiltro;
	}

	public void setDeFiltro(DeFiltro deFiltro) {
		this.deFiltro = deFiltro;
	}

	@Type(type = "yes_no")
	@Column(name = "flag_inserimento", nullable = false, length = 1)
	public Boolean getFlagInserimento() {
		return this.flagInserimento;
	}

	public void setFlagInserimento(Boolean flagInserimento) {
		this.flagInserimento = flagInserimento;
	}

	@Type(type = "yes_no")
	@Column(name = "flag_modifica", nullable = false, length = 1)
	public Boolean getFlagModifica() {
		return this.flagModifica;
	}

	public void setFlagModifica(Boolean flagModifica) {
		this.flagModifica = flagModifica;
	}

	@Type(type = "yes_no")
	@Column(name = "flag_lettura", nullable = false, length = 1)
	public Boolean getFlagLettura() {
		return this.flagLettura;
	}

	public void setFlagLettura(Boolean flagLettura) {
		this.flagLettura = flagLettura;
	}

	@Type(type = "yes_no")
	@Column(name = "flag_cancellazione", nullable = false, length = 1)
	public Boolean getFlagCancellazione() {
		return this.flagCancellazione;
	}

	public void setFlagCancellazione(Boolean flagCancellazione) {
		this.flagCancellazione = flagCancellazione;
	}

	@Type(type = "yes_no")
	@Column(name = "flag_amministrazione", nullable = false, length = 1)
	public Boolean getFlagAmministrazione() {
		return this.flagAmministrazione;
	}

	public void setFlagAmministrazione(Boolean flagAmministrazione) {
		this.flagAmministrazione = flagAmministrazione;
	}

	@Type(type = "yes_no")
	@Column(name = "flag_visibile", nullable = false, length = 1)
	public Boolean getFlagVisibile() {
		return this.flagVisibile;
	}

	public void setFlagVisibile(Boolean flagVisibile) {
		this.flagVisibile = flagVisibile;
	}
}
