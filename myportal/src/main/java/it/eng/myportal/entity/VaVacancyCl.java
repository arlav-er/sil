package it.eng.myportal.entity;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

import it.eng.myportal.entity.decodifiche.DeStatoInvioCl;
import it.eng.myportal.entity.decodifiche.DeTipoComunicazioneCl;

/**
 * VaVacancyCl generated by hbm2java
 */
@Entity
@Table(name = "va_vacancy_cl", schema = "myportal")
@NamedQueries({
	@NamedQuery(
	name = "findVacancyByCodComunicazione",
	query = "select l from VaVacancyCl l where l.codComunicazione = :codComunicazione"
	),
	@NamedQuery(
	name = "findVacancyByCodComunicazionePrec",
	query = "select l from VaVacancyCl l where l.codComunicazionePrec = :codComunicazione"
	),
	@NamedQuery(
	name = "findVacancyDaInviare",
	query = "select l from VaVacancyCl l where l.deStatoInvioCl.codStatoInvioCl in ('PA','CA','VA','MA')"
	)
})
public class VaVacancyCl extends AbstractEntity {

	/**
	 * 
	 */
	private static final long serialVersionUID = 5353865150532485505L;
	private Integer idVaDatiVacancy;
	private VaDatiVacancy vaDatiVacancy;
	private DeStatoInvioCl deStatoInvioCl;
	private DeTipoComunicazioneCl deTipoComunicazioneCl;
	private String codComunicazione;
	private String codComunicazionePrec;
	private Date dtInvio;

	public VaVacancyCl() {
		vaDatiVacancy = new VaDatiVacancy();
		deStatoInvioCl = new DeStatoInvioCl();
		deTipoComunicazioneCl = new DeTipoComunicazioneCl();
	}

	public VaVacancyCl(VaDatiVacancy vaDatiVacancy, DeTipoComunicazioneCl deTipoComunicazioneCl, Date dtmIns,
	        Date dtmMod, Integer idPrincipalIns, Integer idPrincipalMod) {
		this.vaDatiVacancy = vaDatiVacancy;
		this.deTipoComunicazioneCl = deTipoComunicazioneCl;

	}

	@GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "vaDatiVacancy"))
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "id_va_dati_vacancy", unique = true, nullable = false)
	public Integer getIdVaDatiVacancy() {
		return this.idVaDatiVacancy;
	}

	public void setIdVaDatiVacancy(Integer idVaDatiVacancy) {
		this.idVaDatiVacancy = idVaDatiVacancy;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public VaDatiVacancy getVaDatiVacancy() {
		return this.vaDatiVacancy;
	}

	public void setVaDatiVacancy(VaDatiVacancy vaDatiVacancy) {
		this.vaDatiVacancy = vaDatiVacancy;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cod_stato_invio_cl")
	public DeStatoInvioCl getDeStatoInvioCl() {
		return this.deStatoInvioCl;
	}

	public void setDeStatoInvioCl(DeStatoInvioCl deStatoInvioCl) {
		this.deStatoInvioCl = deStatoInvioCl;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cod_tipo_comunicazione_cl", nullable = false)
	public DeTipoComunicazioneCl getDeTipoComunicazioneCl() {
		return this.deTipoComunicazioneCl;
	}

	public void setDeTipoComunicazioneCl(DeTipoComunicazioneCl deTipoComunicazioneCl) {
		this.deTipoComunicazioneCl = deTipoComunicazioneCl;
	}

	@Column(name = "cod_comunicazione", length = 25)
	public String getCodComunicazione() {
		return this.codComunicazione;
	}

	public void setCodComunicazione(String codComunicazione) {
		this.codComunicazione = codComunicazione;
	}

	@Column(name = "cod_comunicazione_prec", length = 25)
	public String getCodComunicazionePrec() {
		return this.codComunicazionePrec;
	}

	public void setCodComunicazionePrec(String codComunicazionePrec) {
		this.codComunicazionePrec = codComunicazionePrec;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "dt_invio", length = 13)
	public Date getDtInvio() {
		return this.dtInvio;
	}

	public void setDtInvio(Date dtInvio) {
		this.dtInvio = dtInvio;
	}
}
