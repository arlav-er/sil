package it.eng.myportal.entity;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

import org.hibernate.annotations.Type;

import it.eng.myportal.entity.decodifiche.DeStatoInvioCl;

// Generated Oct 1, 2012 12:08:24 PM by Hibernate Tools 3.4.0.CR1

import it.eng.myportal.enums.AzioneServizio;

/**
 * ClInvioComunicazione generated by hbm2java
 */
@Entity
@Table(name = "cl_invio_comunicazione", schema = "myportal")
@NamedQueries({	
	@NamedQuery(
	name = "findComunicazioniDaInserire",
	query = "select l from ClInvioComunicazione l where l.mittente not in ('MYPORTAL') and l.azioneServizio = :azServ and l.flagInviato = 'N' and l.deStatoInvioCl.codStatoInvioCl not in ('PE','CE','VE','ME') order by l.codComunicazione"
	),
	@NamedQuery(
	name = "findComunicazioniDaInserireFromSil",
	query = "select l from ClInvioComunicazione l where l.mittente not in ('MYPORTAL', 'MIN') and l.azioneServizio = :azServ and l.flagInviato = 'N' and l.deStatoInvioCl.codStatoInvioCl not in ('PE','CE','VE','ME') order by l.codComunicazione"
	),
	@NamedQuery(
	name = "findComunicazioniDaReInviare",
	query = "select l from ClInvioComunicazione l where l.deStatoInvioCl.codStatoInvioCl in ('PA','CA','VA','MA', 'PE','CE','VE','ME') and l.mittente = 'MYPORTAL' and l.destinatario = 'MIN' and l.azioneServizio = :azServ and l.flagInviato = 'Y'  order by l.codComunicazione"
	),
	@NamedQuery(
	name = "findComunicazioneDaInviareByCodComunicazione",
	query = "select l from ClInvioComunicazione l where l.deStatoInvioCl.codStatoInvioCl in ('PA','CA','VA','MA') and l.codComunicazione = :codComunicazione"
	),
	@NamedQuery(
	name = "findComunicazioneByCodComunicazione",
	query = "select l from ClInvioComunicazione l where l.codComunicazione = :codComunicazione"
	),
	@NamedQuery(
	name = "findComunicazioneFromLavoroPerTeByCodComunicazione",
	query = "select l from ClInvioComunicazione l where l.codComunicazione = :codComunicazione and l.mittente = 'MYPORTAL'"
	),
	@NamedQuery(
	name = "findComunicazioneFromClicLavoroByCodComunicazione",
	query = "select l from ClInvioComunicazione l where l.codComunicazione = :codComunicazione and l.mittente = 'MIN'"
	),
	@NamedQuery(
	name = "findMessaggiDaInviare",
	query = "select l from ClInvioComunicazione l where l.deStatoInvioCl.codStatoInvioCl in ('PA','CA','VA','MA') and l.flagInviato = 'N' and l.mittente = 'MYPORTAL' and l.destinatario = 'MIN' and l.azioneServizio = 'INVIO_MESSAGGIO'  order by l.idClInvioComunicazione"
	),
	@NamedQuery(
	name = "findComunicazioniErrate",
	query = "select l from ClInvioComunicazione l where l.descrizioneErrore is not null and l.deStatoInvioCl.codStatoInvioCl in ('PE','CE','VE','ME') and dtm_ins >= current_date - 1"
	)
})
public class ClInvioComunicazione extends AbstractEntity implements java.io.Serializable {

	private static final long serialVersionUID = 5574009987799728206L;
	private AzioneServizio azioneServizio;
	private String codComunicazione;
	private String descrizioneErrore;
	private DeStatoInvioCl deStatoInvioCl;
	private String destinatario;
	private String fileComunicazione;
	private Boolean flagInviato;
	private Integer idClInvioComunicazione;	
	private String mittente;
	
	
	public ClInvioComunicazione() {
	}

	
	
	
	@Enumerated(EnumType.STRING)
	@Column(name = "azione_servizio", nullable = false, length = 100)
	public AzioneServizio getAzioneServizio() {
		return this.azioneServizio;
	}

	@Column(name = "cod_comunicazione", nullable = false, length = 25)
	public String getCodComunicazione() {
		return this.codComunicazione;
	}

	@Column(name = "descrizione_errore", length = 9000)
	public String getDescrizioneErrore() {
		return this.descrizioneErrore;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cod_stato_invio_cl",nullable=false)
	public DeStatoInvioCl getDeStatoInvioCl() {
		return this.deStatoInvioCl;
	}

	@Column(name = "destinatario", length = 100)
	public String getDestinatario() {
		return this.destinatario;
	}

	@Column(name = "file_comunicazione", columnDefinition="text")
	public String getFileComunicazione() {
		return this.fileComunicazione;
	}

	@Type(type = "yes_no")
	@Column(name = "flag_inviato", nullable = false, length = 1)
	public Boolean getFlagInviato() {
		return this.flagInviato;
	}

	@Id
	@Column(name = "id_cl_invio_comunicazione", unique = true, nullable = false)
	@SequenceGenerator(name = "cl_invio_comunicazione_id_cl_invio_comunicazione_seq", sequenceName = "cl_invio_comunicazione_id_cl_invio_comunicazione_seq", allocationSize = 1)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "cl_invio_comunicazione_id_cl_invio_comunicazione_seq")
	public Integer getIdClInvioComunicazione() {
		return this.idClInvioComunicazione;
	}

	@Column(name = "mittente", length = 100)
	public String getMittente() {
		return this.mittente;
	}

	public void setAzioneServizio(AzioneServizio azioneServizio) {
		this.azioneServizio = azioneServizio;
	}

	public void setCodComunicazione(String codComunicazione) {
		this.codComunicazione = codComunicazione;
	}

	public void setDescrizioneErrore(String descrizioneErrore) {
		this.descrizioneErrore = descrizioneErrore;
	}

	public void setDeStatoInvioCl(DeStatoInvioCl deStatoInvioCl) {
		this.deStatoInvioCl = deStatoInvioCl;
	}

	public void setDestinatario(String destinatario) {
		this.destinatario = destinatario;
	}
	
	
	public void setFileComunicazione(String fileComunicazione) {
		this.fileComunicazione = fileComunicazione;
	}

	public void setFlagInviato(Boolean flagInviato) {
		this.flagInviato = flagInviato;
	}
	
	public void setIdClInvioComunicazione(Integer idClInvioComunicazione) {
		this.idClInvioComunicazione = idClInvioComunicazione;
	}

	public void setMittente(String mittente) {
		this.mittente = mittente;
	}

}
