package it.eng.myportal.entity;

// Generated Mar 1, 2012 12:28:41 PM by Hibernate Tools 3.4.0.CR1
import it.eng.myportal.entity.decodifiche.DeAlbo;
import it.eng.myportal.entity.decodifiche.sil.DeAlboSil;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

/**
 * VaAlbo generated by hbm2java
 */
@Entity
@Table(name = "va_albo", schema = "myportal")
@NamedQueries({
		@NamedQuery(name = "VaAlboFindByVaId", query = "select d from VaAlbo d where d.vaDatiVacancy.idVaDatiVacancy = :vaId") })
public class VaAlbo extends AbstractEntity implements java.io.Serializable {
	private static final long serialVersionUID = 314224L;
	private Integer idVaAlbo;

	private DeAlbo deAlbo;
	private DeAlboSil deAlboSil;
	private VaDatiVacancy vaDatiVacancy;
	private String opzIndispensabile;

	public VaAlbo() {
	}

	public VaAlbo(Integer idVaAlbo, PfPrincipal pfPrincipalByIdPrincipalMod, PfPrincipal pfPrincipalByIdPrincipalIns,
			DeAlbo deAlbo, VaDatiVacancy vaDatiVacancy, Date dtmIns, Date dtmMod) {
		super(pfPrincipalByIdPrincipalIns, pfPrincipalByIdPrincipalMod, dtmIns, dtmMod);
		this.idVaAlbo = idVaAlbo;

		this.deAlbo = deAlbo;
		this.vaDatiVacancy = vaDatiVacancy;

	}

	@Id
	@SequenceGenerator(name = "va_albo_id_va_albo_seq", sequenceName = "va_albo_id_va_albo_seq", allocationSize = 1)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "va_albo_id_va_albo_seq")
	@Column(name = "id_va_albo", unique = true, nullable = false)
	public Integer getIdVaAlbo() {
		return this.idVaAlbo;
	}

	public void setIdVaAlbo(Integer idVaAlbo) {
		this.idVaAlbo = idVaAlbo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cod_albo")
	public DeAlbo getDeAlbo() {
		return this.deAlbo;
	}

	public void setDeAlbo(DeAlbo deAlbo) {
		this.deAlbo = deAlbo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_va_dati_vacancy", nullable = false)
	public VaDatiVacancy getVaDatiVacancy() {
		return this.vaDatiVacancy;
	}

	public void setVaDatiVacancy(VaDatiVacancy vaDatiVacancy) {
		this.vaDatiVacancy = vaDatiVacancy;
	}

	@Column(name = "opz_indispensabile", length = 1)
	public String getOpzIndispensabile() {
		return opzIndispensabile;
	}

	public void setOpzIndispensabile(String opzIndispensabile) {
		this.opzIndispensabile = opzIndispensabile;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "cod_albo_sil")
	public DeAlboSil getDeAlboSil() {
		return deAlboSil;
	}

	public void setDeAlboSil(DeAlboSil deAlboSil) {
		this.deAlboSil = deAlboSil;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((idVaAlbo == null) ? 0 : idVaAlbo.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		VaAlbo other = (VaAlbo) obj;
		if (idVaAlbo == null) {
			if (other.idVaAlbo != null)
				return false;
		} else if (!idVaAlbo.equals(other.idVaAlbo))
			return false;
		return true;
	}

}
