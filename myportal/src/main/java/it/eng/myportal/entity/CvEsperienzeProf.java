package it.eng.myportal.entity;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

// Generated Mar 1, 2012 12:28:41 PM by Hibernate Tools 3.4.0.CR1
import it.eng.myportal.entity.decodifiche.DeAttivita;
import it.eng.myportal.entity.decodifiche.DeBpMansione;
import it.eng.myportal.entity.decodifiche.DeComune;
import it.eng.myportal.entity.decodifiche.DeContratto;
import it.eng.myportal.entity.decodifiche.DeMansione;
import it.eng.myportal.entity.decodifiche.DeMotivoCessazione;
import it.eng.myportal.entity.decodifiche.min.DeMansioneMin;
import it.eng.myportal.entity.decodifiche.sil.DeAreaSil;
import it.eng.myportal.entity.decodifiche.sil.DeContrattoSil;

/**
 * CvEsperienzeProf generated by hbm2java
 */

@Entity
@Table(name = "cv_esperienze_prof", schema = "myportal")
@NamedQueries({
		@NamedQuery(name = "CvEsperienzeFindByCvId", query = "select d from CvEsperienzeProf d where d.cvDatiPersonali.idCvDatiPersonali = :cvId ORDER BY d.da ASC") })
public class CvEsperienzeProf extends AbstractEntity implements java.io.Serializable {
	private static final long serialVersionUID = 156763L;

	private Integer idCvEsperienzeProf;
	private CvDatiPersonali cvDatiPersonali;
	private Date a;
	private String attivitaResponsabilita;
	private Date da;
	private String datoreLavoro;
	private DeAttivita deAttivita;
	private DeContratto deContratto;
	private DeMansione deMansione;
	private DeMansioneMin deMansioneMin;
	private DeContrattoSil deContrattoSil;
	private DeAreaSil deAreaSil;
	private DeMotivoCessazione deMotivoCessazione;
	private String altroMotivoCessazione;
	private String partitaIva;
	private String codiceFiscale;
	private DeComune deComuneDatore;
	private String indirizzoDatore;

	// 2020
	private DeBpMansione deBpMansione;
	private DeComune deComLavoro;
	private boolean flgInCorso;
	private String professione;
	private String sitoWebAziendale;

	public CvEsperienzeProf() {
	}

	@Id
	@SequenceGenerator(name = "cv_esperienze_prof_id_cv_esperienze_prof_seq", sequenceName = "cv_esperienze_prof_id_cv_esperienze_prof_seq", allocationSize = 1)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "cv_esperienze_prof_id_cv_esperienze_prof_seq")
	@Column(name = "id_cv_esperienze_prof", unique = true, nullable = false)
	public Integer getIdCvEsperienzeProf() {
		return this.idCvEsperienzeProf;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_cv_dati_personali", nullable = false)
	public CvDatiPersonali getCvDatiPersonali() {
		return this.cvDatiPersonali;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "a", length = 13)
	public Date getA() {
		return this.a;
	}

	@Column(name = "attivita_responsabilita", length = 250)
	public String getAttivitaResponsabilita() {
		return this.attivitaResponsabilita;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "da", nullable = false, length = 13)
	public Date getDa() {
		return this.da;
	}

	@Column(name = "datore_lavoro", length = 250)
	public String getDatoreLavoro() {
		return this.datoreLavoro;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "cod_ateco")
	public DeAttivita getDeAttivita() {
		return this.deAttivita;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "cod_contratto")
	public DeContratto getDeContratto() {
		return deContratto;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "cod_mansione", nullable = false)
	public DeMansione getDeMansione() {
		return this.deMansione;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "cod_mansione_min")
	public DeMansioneMin getDeMansioneMin() {
		return this.deMansioneMin;
	}

	@Column(name = "codice_fiscale", length = 16)
	public String getCodiceFiscale() {
		return codiceFiscale;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "cod_motivo_cessazione")
	public DeMotivoCessazione getDeMotivoCessazione() {
		return deMotivoCessazione;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "cod_area_sil")
	public DeAreaSil getDeAreaSil() {
		return deAreaSil;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "cod_contratto_sil")
	public DeContrattoSil getDeContrattoSil() {
		return deContrattoSil;
	}

	@Column(name = "altro_motivo_cessazione", length = 1000)
	public String getAltroMotivoCessazione() {
		return altroMotivoCessazione;
	}

	@Column(name = "partita_iva", length = 11)
	public String getPartitaIva() {
		return partitaIva;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "cod_comune_datore")
	public DeComune getDeComuneDatore() {
		return deComuneDatore;
	}

	@Column(name = "indirizzo_datore", length = 100)
	public String getIndirizzoDatore() {
		return indirizzoDatore;
	}

	public void setA(Date a) {
		this.a = a;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "cod_mansione_istat")
	public DeBpMansione getDeBpMansione() {

		return deBpMansione;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "cod_com_lavoro")
	public DeComune getDeComLavoro() {
		return deComLavoro;
	}

	public void setDeComLavoro(DeComune codComLavoro) {
		this.deComLavoro = codComLavoro;
	}

	@Column(name="flg_in_corso")
	public boolean isFlgInCorso() {
		return flgInCorso;
	}

	public void setFlgInCorso(boolean flgInCorso) {
		this.flgInCorso = flgInCorso;
	}

	public void setDeBpMansione(DeBpMansione deBpMansione) {
		this.deBpMansione = deBpMansione;
	}

	public void setAttivitaResponsabilita(String attivitaResponsabilita) {
		this.attivitaResponsabilita = attivitaResponsabilita;
	}

	public void setCvDatiPersonali(CvDatiPersonali cvDatiPersonali) {
		this.cvDatiPersonali = cvDatiPersonali;
	}

	public void setDa(Date da) {
		this.da = da;
	}

	public void setDatoreLavoro(String datoreLavoro) {
		this.datoreLavoro = datoreLavoro;
	}

	public void setDeAttivita(DeAttivita deAttivita) {
		this.deAttivita = deAttivita;
	}

	public void setDeContratto(DeContratto deContratto) {
		this.deContratto = deContratto;
	}

	public void setDeMansione(DeMansione deMansione) {
		this.deMansione = deMansione;
	}

	public void setDeMansioneMin(DeMansioneMin deMansioneMin) {
		this.deMansioneMin = deMansioneMin;
	}

	public void setIdCvEsperienzeProf(Integer idCvEsperienzeProf) {
		this.idCvEsperienzeProf = idCvEsperienzeProf;
	}

	public void setDeContrattoSil(DeContrattoSil deContrattoSil) {
		this.deContrattoSil = deContrattoSil;
	}

	public void setDeAreaSil(DeAreaSil deAreaSil) {
		this.deAreaSil = deAreaSil;
	}

	public void setDeMotivoCessazione(DeMotivoCessazione deMotivoCessazione) {
		this.deMotivoCessazione = deMotivoCessazione;
	}

	public void setAltroMotivoCessazione(String altroMotivoCessazione) {
		this.altroMotivoCessazione = altroMotivoCessazione;
	}

	public void setPartitaIva(String partitaIva) {
		this.partitaIva = partitaIva;
	}

	public void setCodiceFiscale(String codiceFiscale) {
		this.codiceFiscale = codiceFiscale;
	}

	public void setDeComuneDatore(DeComune deComuneDatore) {
		this.deComuneDatore = deComuneDatore;
	}

	public void setIndirizzoDatore(String indirizzoDatore) {
		this.indirizzoDatore = indirizzoDatore;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((idCvEsperienzeProf == null) ? 0 : idCvEsperienzeProf.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		CvEsperienzeProf other = (CvEsperienzeProf) obj;
		if (idCvEsperienzeProf == null) {
			if (other.idCvEsperienzeProf != null)
				return false;
		} else if (!idCvEsperienzeProf.equals(other.idCvEsperienzeProf))
			return false;
		return true;
	}

	@Column(length = 250)
	public String getProfessione() {
		return professione;
	}

	public void setProfessione(String professione) {
		this.professione = professione;
	}

	@Column(name="sito_web_aziendale")
	public String getSitoWebAziendale() {
		return sitoWebAziendale;
	}

	public void setSitoWebAziendale(String sitoWebAziendale) {
		this.sitoWebAziendale = sitoWebAziendale;
	}

}
