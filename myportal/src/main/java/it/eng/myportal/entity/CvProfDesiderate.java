package it.eng.myportal.entity;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;

import org.hibernate.annotations.Type;

import it.eng.myportal.entity.decodifiche.DeBpMansione;

// default package
// Generated 3-ago-2012 12.46.20 by Hibernate Tools 3.4.0.CR1

import it.eng.myportal.entity.decodifiche.DeComune;
import it.eng.myportal.entity.decodifiche.DeContratto;
import it.eng.myportal.entity.decodifiche.DeOrario;
import it.eng.myportal.entity.decodifiche.DeProvincia;
import it.eng.myportal.entity.decodifiche.DeRegione;
import it.eng.myportal.entity.decodifiche.DeTrasferta;
import it.eng.myportal.entity.decodifiche.min.DeMansioneMin;
import it.eng.myportal.entity.decodifiche.sil.DeContrattoSil;
import it.eng.myportal.entity.decodifiche.sil.DeOrarioSil;
import it.eng.myportal.entity.decodifiche.sil.DeTurnoSil;

/**
 * CvProfDesiderate generated by hbm2java
 */
@Entity
@Table(name = "cv_prof_desiderate", schema = "myportal")
@NamedQueries({
		@NamedQuery(name = "CvProfessioniFindByCvId", query = "select d from CvProfDesiderate d where d.cvDatiPersonali.idCvDatiPersonali = :cvId") })
public class CvProfDesiderate extends AbstractEntity implements java.io.Serializable {
	private static final long serialVersionUID = 1L;

	private Integer idCvProfessioniDesiderate;
	private CvDatiPersonali cvDatiPersonali;
	private DeMansioneMin deMansioneMin;
	private String descrizioneProfessione;
	private Boolean flagEspSettore;
	private String breveDescrProfessione;
	private Boolean flagDispTrasferte;
	private Boolean flagDispMezzoProprio;
	private String noteComuni;
	private Boolean flagDispMezziPubblici;
	private Boolean flagPendolarismo;
	private Boolean flagMobilitaSett;
	private Integer numOrePercorrenza;
	private DeTrasferta deTrasferta;
	private String noteDisponibilita;

	private String dispTerritorialeComuni;
	private String dispTerritorialeProvince;
	private String dispTerritorialeRegioni;
	private DeBpMansione deBpMansione;

	private Set<DeOrario> deOrarios = new HashSet<DeOrario>(0);
	private Set<DeContratto> deContrattos = new HashSet<DeContratto>(0);
	private Set<DeOrarioSil> deOrarioSils = new HashSet<DeOrarioSil>(0);
	private Set<DeContrattoSil> deContrattoSils = new HashSet<DeContrattoSil>(0);
	private Set<DeTurnoSil> deTurnoSils = new HashSet<DeTurnoSil>(0);
	private Set<DeComune> deComuneList = new HashSet<DeComune>(0);
	private Set<DeProvincia> deProvinciaList = new HashSet<DeProvincia>(0);
	private Set<DeRegione> deRegioneList = new HashSet<DeRegione>(0);
	private Set<DeComune> deStatoList = new HashSet<DeComune>(0);

	public CvProfDesiderate() {
		deMansioneMin = new DeMansioneMin();
	}

	public CvProfDesiderate(Integer idCvProfessioniDesiderate, CvDatiPersonali cvDatiPersonali,
			DeMansioneMin deMansioneMin, String descrizioneProfessione, Boolean flagEspSettore,
			String breveDescrProfessione, Boolean flagDispTrasferte, Boolean flagDispMezzoProprio) {
		super();
		this.idCvProfessioniDesiderate = idCvProfessioniDesiderate;
		this.cvDatiPersonali = cvDatiPersonali;
		this.deMansioneMin = deMansioneMin;
		this.descrizioneProfessione = descrizioneProfessione;
		this.flagEspSettore = flagEspSettore;
		this.breveDescrProfessione = breveDescrProfessione;
		this.flagDispTrasferte = flagDispTrasferte;
		this.flagDispMezzoProprio = flagDispMezzoProprio;
	}

	@Id
	@SequenceGenerator(name = "cv_prof_desiderate_id_cv_professioni_desiderate_seq", sequenceName = "cv_prof_desiderate_id_cv_professioni_desiderate_seq", allocationSize = 1)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "cv_prof_desiderate_id_cv_professioni_desiderate_seq")
	@Column(name = "id_cv_professioni_desiderate", unique = true, nullable = false)
	public Integer getIdCvProfessioniDesiderate() {
		return this.idCvProfessioniDesiderate;
	}

	public void setIdCvProfessioniDesiderate(Integer idCvProfessioniDesiderate) {
		this.idCvProfessioniDesiderate = idCvProfessioniDesiderate;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_cv_dati_personali", nullable = false)
	public CvDatiPersonali getCvDatiPersonali() {
		return this.cvDatiPersonali;
	}

	public void setCvDatiPersonali(CvDatiPersonali cvDatiPersonali) {
		this.cvDatiPersonali = cvDatiPersonali;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cod_mansione_min", nullable = false)
	public DeMansioneMin getDeMansioneMin() {
		return this.deMansioneMin;
	}

	public void setDeMansioneMin(DeMansioneMin deMansioneMin) {
		this.deMansioneMin = deMansioneMin;
	}

	@Column(name = "descrizione_professione", length = 300)
	public String getDescrizioneProfessione() {
		return this.descrizioneProfessione;
	}

	public void setDescrizioneProfessione(String descrizioneProfessione) {
		this.descrizioneProfessione = descrizioneProfessione;
	}

	@Type(type = "yes_no")
	@Column(name = "flag_esp_settore", length = 1)
	public Boolean getFlagEspSettore() {
		return this.flagEspSettore;
	}

	public void setFlagEspSettore(Boolean flagEspSettore) {
		this.flagEspSettore = flagEspSettore;
	}

	@Column(name = "breve_descr_professione", length = 300)
	public String getBreveDescrProfessione() {
		return this.breveDescrProfessione;
	}

	public void setBreveDescrProfessione(String breveDescrProfessione) {
		this.breveDescrProfessione = breveDescrProfessione;
	}

	@Type(type = "yes_no")
	@Column(name = "flag_disp_trasferte", length = 1)
	public Boolean getFlagDispTrasferte() {
		return this.flagDispTrasferte;
	}

	public void setFlagDispTrasferte(Boolean flagDispTrasferte) {
		this.flagDispTrasferte = flagDispTrasferte;
	}

	@Type(type = "yes_no")
	@Column(name = "flag_disp_mezzo_proprio", length = 1)
	public Boolean getFlagDispMezzoProprio() {
		return this.flagDispMezzoProprio;
	}

	public void setFlagDispMezzoProprio(Boolean flagDispMezzoProprio) {
		this.flagDispMezzoProprio = flagDispMezzoProprio;
	}

	@Column(name = "note_comuni", columnDefinition="text")
	public String getNoteComuni() {
		return noteComuni;
	}

	public void setNoteComuni(String noteComuni) {
		this.noteComuni = noteComuni;
	}

	@Type(type = "yes_no")
	@Column(name = "flag_disp_mezzi_pubb", length = 1)
	public Boolean getFlagDispMezziPubblici() {
		return flagDispMezziPubblici;
	}

	public void setFlagDispMezziPubblici(Boolean flagDispMezziPubblici) {
		this.flagDispMezziPubblici = flagDispMezziPubblici;
	}

	@Type(type = "yes_no")
	@Column(name = "flag_pendolarismo", length = 1)
	public Boolean getFlagPendolarismo() {
		return flagPendolarismo;
	}

	public void setFlagPendolarismo(Boolean flagPendolarismo) {
		this.flagPendolarismo = flagPendolarismo;
	}

	@Type(type = "yes_no")
	@Column(name = "flag_mobilita_sett", length = 1)
	public Boolean getFlagMobilitaSett() {
		return flagMobilitaSett;
	}

	public void setFlagMobilitaSett(Boolean flagMobilitaSett) {
		this.flagMobilitaSett = flagMobilitaSett;
	}

	@Column(name = "num_ore_percorrenza")
	public Integer getNumOrePercorrenza() {
		return numOrePercorrenza;
	}

	public void setNumOrePercorrenza(Integer numOrePercorrenza) {
		this.numOrePercorrenza = numOrePercorrenza;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "cod_trasferta")
	public DeTrasferta getDeTrasferta() {
		return deTrasferta;
	}

	public void setDeTrasferta(DeTrasferta deTrasferta) {
		this.deTrasferta = deTrasferta;
	}

	@Column(name = "note_disponibilita", length = 1000)
	public String getNoteDisponibilita() {
		return noteDisponibilita;
	}

	public void setNoteDisponibilita(String noteDisponibilita) {
		this.noteDisponibilita = noteDisponibilita;
	}

	@Column(name = "disp_territoriale_comuni", length = 2000)
	public String getDispTerritorialeComuni() {
		return dispTerritorialeComuni;
	}

	public void setDispTerritorialeComuni(String dispTerritorialeComuni) {
		this.dispTerritorialeComuni = dispTerritorialeComuni;
	}

	@Column(name = "disp_territoriale_province", length = 2000)
	public String getDispTerritorialeProvince() {
		return dispTerritorialeProvince;
	}

	public void setDispTerritorialeProvince(String dispTerritorialeProvince) {
		this.dispTerritorialeProvince = dispTerritorialeProvince;
	}

	@Column(name = "disp_territoriale_regioni", length = 2000)
	public String getDispTerritorialeRegioni() {
		return dispTerritorialeRegioni;
	}

	public void setDispTerritorialeRegioni(String dispTerritorialeRegioni) {
		this.dispTerritorialeRegioni = dispTerritorialeRegioni;
	}

	@ManyToMany(fetch = FetchType.EAGER)
	@JoinTable(schema = "myportal", name = "cv_pref_mod_lavoro", uniqueConstraints = {
			@UniqueConstraint(columnNames = { "id_cv_prof_desiderate", "cod_orario" }) }, joinColumns = {
					@JoinColumn(name = "id_cv_prof_desiderate", referencedColumnName = "id_cv_professioni_desiderate") }, inverseJoinColumns = {
							@JoinColumn(name = "cod_orario", referencedColumnName = "cod_orario") })
	public Set<DeOrario> getDeOrarios() {
		return this.deOrarios;
	}

	public void setDeOrarios(Set<DeOrario> deOrarios) {
		this.deOrarios = deOrarios;
	}

	@ManyToMany(fetch = FetchType.EAGER)
	@JoinTable(schema = "myportal", name = "cv_pref_tipo_contratto", uniqueConstraints = {
			@UniqueConstraint(columnNames = { "id_cv_prof_desiderate", "cod_contratto" }) }, joinColumns = {
					@JoinColumn(name = "id_cv_prof_desiderate", referencedColumnName = "id_cv_professioni_desiderate") }, inverseJoinColumns = {
							@JoinColumn(name = "cod_contratto", referencedColumnName = "cod_contratto") })
	public Set<DeContratto> getDeContrattos() {
		return deContrattos;
	}

	public void setDeContrattos(Set<DeContratto> deContrattos) {
		this.deContrattos = deContrattos;
	}

	@ManyToMany(fetch = FetchType.EAGER)
	@JoinTable(schema = "myportal", name = "cv_pref_mod_lavoro_sil", uniqueConstraints = {
			@UniqueConstraint(columnNames = { "id_cv_prof_desiderate", "cod_orario_sil" }) }, joinColumns = {
					@JoinColumn(name = "id_cv_prof_desiderate", referencedColumnName = "id_cv_professioni_desiderate") }, inverseJoinColumns = {
							@JoinColumn(name = "cod_orario_sil", referencedColumnName = "cod_orario_sil") })
	public Set<DeOrarioSil> getDeOrarioSils() {
		return this.deOrarioSils;
	}

	public void setDeOrarioSils(Set<DeOrarioSil> deOrarioSils) {
		this.deOrarioSils = deOrarioSils;
	}

	@ManyToMany(fetch = FetchType.EAGER)
	@JoinTable(schema = "myportal", name = "cv_pref_tipo_contratto_sil", uniqueConstraints = {
			@UniqueConstraint(columnNames = { "id_cv_prof_desiderate", "cod_contratto_sil" }) }, joinColumns = {
					@JoinColumn(name = "id_cv_prof_desiderate", referencedColumnName = "id_cv_professioni_desiderate") }, inverseJoinColumns = {
							@JoinColumn(name = "cod_contratto_sil", referencedColumnName = "cod_contratto_sil") })
	public Set<DeContrattoSil> getDeContrattoSils() {
		return deContrattoSils;
	}

	public void setDeContrattoSils(Set<DeContrattoSil> deContrattoSils) {
		this.deContrattoSils = deContrattoSils;
	}

	@ManyToMany(fetch = FetchType.EAGER)
	@JoinTable(schema = "myportal", name = "cv_pref_turno_sil", uniqueConstraints = {
			@UniqueConstraint(columnNames = { "id_cv_prof_desiderate", "cod_turno_sil" }) }, joinColumns = {
					@JoinColumn(name = "id_cv_prof_desiderate", referencedColumnName = "id_cv_professioni_desiderate") }, inverseJoinColumns = {
							@JoinColumn(name = "cod_turno_sil", referencedColumnName = "cod_turno_sil") })
	public Set<DeTurnoSil> getDeTurnoSils() {
		return deTurnoSils;
	}

	public void setDeTurnoSils(Set<DeTurnoSil> deTurnoSils) {
		this.deTurnoSils = deTurnoSils;
	}

	@ManyToMany(fetch = FetchType.EAGER)
	@JoinTable(schema = "myportal", name = "cv_pref_comune", uniqueConstraints = {
			@UniqueConstraint(columnNames = { "id_cv_prof_desiderate", "cod_comune" }) }, joinColumns = {
					@JoinColumn(name = "id_cv_prof_desiderate", referencedColumnName = "id_cv_professioni_desiderate") }, inverseJoinColumns = {
							@JoinColumn(name = "cod_comune", referencedColumnName = "cod_com") })
	public Set<DeComune> getDeComuneList() {
		return deComuneList;
	}

	public void setDeComuneList(Set<DeComune> deComuneList) {
		this.deComuneList = deComuneList;
	}

	@ManyToMany(fetch = FetchType.EAGER)
	@JoinTable(schema = "myportal", name = "cv_pref_provincia", uniqueConstraints = {
			@UniqueConstraint(columnNames = { "id_cv_prof_desiderate", "cod_provincia" }) }, joinColumns = {
					@JoinColumn(name = "id_cv_prof_desiderate", referencedColumnName = "id_cv_professioni_desiderate") }, inverseJoinColumns = {
							@JoinColumn(name = "cod_provincia", referencedColumnName = "cod_provincia") })
	public Set<DeProvincia> getDeProvinciaList() {
		return deProvinciaList;
	}

	public void setDeProvinciaList(Set<DeProvincia> deProvinciaList) {
		this.deProvinciaList = deProvinciaList;
	}

	@ManyToMany(fetch = FetchType.EAGER)
	@JoinTable(schema = "myportal", name = "cv_pref_regione", uniqueConstraints = {
			@UniqueConstraint(columnNames = { "id_cv_prof_desiderate", "cod_regione" }) }, joinColumns = {
					@JoinColumn(name = "id_cv_prof_desiderate", referencedColumnName = "id_cv_professioni_desiderate") }, inverseJoinColumns = {
							@JoinColumn(name = "cod_regione", referencedColumnName = "cod_regione") })
	public Set<DeRegione> getDeRegioneList() {
		return deRegioneList;
	}

	public void setDeRegioneList(Set<DeRegione> deRegioneList) {
		this.deRegioneList = deRegioneList;
	}

	@ManyToMany(fetch = FetchType.EAGER)
	@JoinTable(schema = "myportal", name = "cv_pref_stato", uniqueConstraints = {
			@UniqueConstraint(columnNames = { "id_cv_prof_desiderate", "cod_comune_stato" }) }, joinColumns = {
					@JoinColumn(name = "id_cv_prof_desiderate", referencedColumnName = "id_cv_professioni_desiderate") }, inverseJoinColumns = {
							@JoinColumn(name = "cod_comune_stato", referencedColumnName = "cod_com") })
	public Set<DeComune> getDeStatoList() {
		return deStatoList;
	}

	public void setDeStatoList(Set<DeComune> deStatoList) {
		this.deStatoList = deStatoList;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "cod_mansione_istat", nullable = true)
	public DeBpMansione getDeBpMansione() {
		return deBpMansione;
	}

	public void setDeBpMansione(DeBpMansione deBpMansione) {
		this.deBpMansione = deBpMansione;
	}

	@Transient
	public String getStrEspSettore() {
		if (this.flagEspSettore) {
			return "Si";
		} else {
			return "No";
		}
	}

}
