package it.eng.myportal.entity;
// Generated Mar 1, 2012 12:28:41 PM by Hibernate Tools 3.4.0.CR1
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

import it.eng.myportal.entity.decodifiche.DeTipoPoi;
/**
 * Poi generated by hbm2java
 */
@Entity
@Table(name="poi"
    ,schema="myportal"
)
@NamedQueries({
	@NamedQuery(name = "findByVacancy", query = "SELECT p FROM Poi p where p.idPoi IN (SELECT v.poi.idPoi FROM VaDatiVacancy v WHERE v.idVaDatiVacancy = :idVaDatiVacancy)"),
})
public class Poi extends AbstractEntity  implements java.io.Serializable {
	private static final long serialVersionUID = 690837L;
     private Integer idPoi;


     private DeTipoPoi deTipoPoi;
     private String descrizione;
     private double lat;
     private double lon;


     private Set<UtenteInfo> utenteInfos = new HashSet<UtenteInfo>(0);
     private Set<CvDatiPersonali> cvDatiPersonalis = new HashSet<CvDatiPersonali>(0);
     private Set<VaDatiVacancy> vaDatiVacancies = new HashSet<VaDatiVacancy>(0);
    public Poi() {
    }
   
     @Id 
	@SequenceGenerator(name = "poi_id_poi_seq", sequenceName="poi_id_poi_seq", allocationSize=1)
	@GeneratedValue(strategy=GenerationType.SEQUENCE, generator = "poi_id_poi_seq")
    @Column(name="id_poi", unique=true, nullable=false)
    public Integer getIdPoi() {
        return this.idPoi;
    }
    public void setIdPoi(Integer idPoi) {
        this.idPoi = idPoi;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="cod_tipo_poi", nullable=false)
    public DeTipoPoi getDeTipoPoi() {
        return this.deTipoPoi;
    }
    public void setDeTipoPoi(DeTipoPoi deTipoPoi) {
        this.deTipoPoi = deTipoPoi;
    }
    @Column(name="descrizione", nullable=false, length=200)
    public String getDescrizione() {
        return this.descrizione;
    }
    public void setDescrizione(String descrizione) {
        this.descrizione = descrizione;
    }
    @Column(name="lat", nullable=false, precision=17, scale=17)
    public double getLat() {
        return this.lat;
    }
    public void setLat(double lat) {
        this.lat = lat;
    }
    @Column(name="lon", nullable=false, precision=17, scale=17)
    public double getLon() {
        return this.lon;
    }
    public void setLon(double lon) {
        this.lon = lon;
    }
    
@OneToMany(fetch=FetchType.LAZY, mappedBy="poi")
    public Set<UtenteInfo> getUtenteInfos() {
        return this.utenteInfos;
    }
    public void setUtenteInfos(Set<UtenteInfo> utenteInfos) {
        this.utenteInfos = utenteInfos;
    }
@OneToMany(fetch=FetchType.LAZY, mappedBy="poi")
    public Set<CvDatiPersonali> getCvDatiPersonalis() {
        return this.cvDatiPersonalis;
    }
    public void setCvDatiPersonalis(Set<CvDatiPersonali> cvDatiPersonalis) {
        this.cvDatiPersonalis = cvDatiPersonalis;
    }
@OneToMany(fetch=FetchType.LAZY, mappedBy="poi")
    public Set<VaDatiVacancy> getVaDatiVacancies() {
        return this.vaDatiVacancies;
    }
    public void setVaDatiVacancies(Set<VaDatiVacancy> vaDatiVacancies) {
        this.vaDatiVacancies = vaDatiVacancies;
    }

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((idPoi == null) ? 0 : idPoi.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Poi other = (Poi) obj;
		if (idPoi == null) {
			if (other.idPoi != null)
				return false;
		} else if (!idPoi.equals(other.idPoi))
			return false;
		return true;
	}
    
}
