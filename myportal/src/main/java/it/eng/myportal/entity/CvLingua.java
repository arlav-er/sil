package it.eng.myportal.entity;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

import org.hibernate.annotations.Type;

// Generated Mar 1, 2012 12:28:41 PM by Hibernate Tools 3.4.0.CR1
import it.eng.myportal.entity.decodifiche.DeGradoLin;
import it.eng.myportal.entity.decodifiche.DeLingua;
import it.eng.myportal.entity.decodifiche.DeModalitaLingua;
import it.eng.myportal.entity.decodifiche.sil.DeGradoLinSil;

/**
 * CvLingua generated by hbm2java
 */
@Entity
@Table(name = "cv_lingua", schema = "myportal")

@NamedQueries({
		@NamedQuery(name = "findLinguaByCvId", query = "select d from CvLingua d where d.cvDatiPersonali.idCvDatiPersonali = :cvId")
})
public class CvLingua extends AbstractEntity implements java.io.Serializable {
	private static final long serialVersionUID = 881322L;
	private Integer idCvLingua;
	private DeLingua deLingua;
	private CvDatiPersonali cvDatiPersonali;
	private DeGradoLin deGradoLinLetto;
	private DeGradoLin deGradoLinScritto;
	private DeGradoLin deGradoLinParlato;
	private Boolean flagMadrelingua;
	private DeGradoLinSil deGradoLinSilLetto;
	private DeGradoLinSil deGradoLinSilScritto;
	private DeGradoLinSil deGradoLinSilParlato;
	private Boolean flgCertificata;
	private String altraModalita;
	private String certificazione;
	private DeModalitaLingua deModalitaLingua;

	public CvLingua() {
	}

	@Id
	@SequenceGenerator(name = "cv_lingua_id_cv_lingua_seq", sequenceName = "cv_lingua_id_cv_lingua_seq", allocationSize = 1)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "cv_lingua_id_cv_lingua_seq")
	@Column(name = "id_cv_lingua", unique = true, nullable = false)
	public Integer getIdCvLingua() {
		return this.idCvLingua;
	}

	public void setIdCvLingua(Integer idCvLingua) {
		this.idCvLingua = idCvLingua;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "cod_grado_scritto")
	public DeGradoLin getDeGradoLinScritto() {
		return this.deGradoLinScritto;
	}

	public void setDeGradoLinScritto(DeGradoLin deGradoLinByCodGradoScritto) {
		this.deGradoLinScritto = deGradoLinByCodGradoScritto;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "cod_lingua", nullable = false)
	public DeLingua getDeLingua() {
		return this.deLingua;
	}

	public void setDeLingua(DeLingua deLingua) {
		this.deLingua = deLingua;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "id_cv_dati_personali", nullable = false)
	public CvDatiPersonali getCvDatiPersonali() {
		return this.cvDatiPersonali;
	}

	public void setCvDatiPersonali(CvDatiPersonali cvDatiPersonali) {
		this.cvDatiPersonali = cvDatiPersonali;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "cod_grado_letto")
	public DeGradoLin getDeGradoLinLetto() {
		return this.deGradoLinLetto;
	}

	public void setDeGradoLinLetto(DeGradoLin deGradoLinByCodGradoLetto) {
		this.deGradoLinLetto = deGradoLinByCodGradoLetto;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "cod_grado_parlato")
	public DeGradoLin getDeGradoLinParlato() {
		return this.deGradoLinParlato;
	}

	public void setDeGradoLinParlato(DeGradoLin deGradoLinByCodGradoParlato) {
		this.deGradoLinParlato = deGradoLinByCodGradoParlato;
	}

	@Type(type = "yes_no")
	@Column(name = "flag_madrelingua", nullable = false, length = 1)
	public Boolean getFlagMadrelingua() {
		return this.flagMadrelingua;
	}

	public void setFlagMadrelingua(Boolean flagMadrelingua) {
		this.flagMadrelingua = flagMadrelingua;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "cod_grado_letto_sil")
	public DeGradoLinSil getDeGradoLinSilLetto() {
		return deGradoLinSilLetto;
	}

	public void setDeGradoLinSilLetto(DeGradoLinSil deGradoLinSilLetto) {
		this.deGradoLinSilLetto = deGradoLinSilLetto;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "cod_grado_scritto_sil")
	public DeGradoLinSil getDeGradoLinSilScritto() {
		return deGradoLinSilScritto;
	}

	public void setDeGradoLinSilScritto(DeGradoLinSil deGradoLinSilScritto) {
		this.deGradoLinSilScritto = deGradoLinSilScritto;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "cod_grado_parlato_sil")
	public DeGradoLinSil getDeGradoLinSilParlato() {
		return deGradoLinSilParlato;
	}

	public void setDeGradoLinSilParlato(DeGradoLinSil deGradoLinSilParlato) {
		this.deGradoLinSilParlato = deGradoLinSilParlato;
	}

	@Type(type = "yes_no")
	@Column(name = "flg_certificata", length = 1)
	public Boolean getFlgCertificata() {
		return flgCertificata;
	}

	public void setFlgCertificata(Boolean flgCertificata) {
		this.flgCertificata = flgCertificata;
	}

	@Column(name = "altra_modalita", length = 255)
	public String getAltraModalita() {
		return altraModalita;
	}

	public void setAltraModalita(String altraModalita) {
		this.altraModalita = altraModalita;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "cod_modalita_lingua")
	public DeModalitaLingua getDeModalitaLingua() {
		return deModalitaLingua;
	}

	public void setDeModalitaLingua(DeModalitaLingua deModalitaLingua) {
		this.deModalitaLingua = deModalitaLingua;
	}
	@Column(name = "str_certificazione", length = 3000)
	public String getCertificazione() {
		return certificazione;
	}

	public void setCertificazione(String certificazione) {
		this.certificazione = certificazione;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((idCvLingua == null) ? 0 : idCvLingua.hashCode());
		return result;
	}
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		CvLingua other = (CvLingua) obj;
		if (idCvLingua == null) {
			if (other.idCvLingua != null)
				return false;
		} else if (!idCvLingua.equals(other.idCvLingua))
			return false;
		return true;
	}



}





