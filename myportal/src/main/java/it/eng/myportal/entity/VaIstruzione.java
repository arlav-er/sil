package it.eng.myportal.entity;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Transient;

// Generated Mar 1, 2012 12:28:41 PM by Hibernate Tools 3.4.0.CR1
import it.eng.myportal.entity.decodifiche.DeTitolo;

/**
 * VaIstruzione generated by hbm2java
 */
@Entity
@Table(name = "va_istruzione", schema = "myportal")

@NamedQueries({
		@NamedQuery(name = "VaIstruzioneFindByVacancyId", query = "select d from VaIstruzione d where d.vaDatiVacancy.idVaDatiVacancy = :vaId") })

public class VaIstruzione extends AbstractEntity implements java.io.Serializable {
	private static final long serialVersionUID = 332906L;
	private Integer idVaIstruzione;

	private DeTitolo deTitolo;
	private VaDatiVacancy vaDatiVacancy;
	private String votazione;
	private String specifica;
	private String opzConseguito;
	private String opzIndispensabile;
	
	private String opzPreferibile;

	private String tipoSceltaTitolo;

	public VaIstruzione() {
	}

	@Id
	@SequenceGenerator(name = "va_istruzione_id_va_istruzione_seq", sequenceName = "va_istruzione_id_va_istruzione_seq", allocationSize = 1)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "va_istruzione_id_va_istruzione_seq")
	@Column(name = "id_va_istruzione", unique = true, nullable = false)
	public Integer getIdVaIstruzione() {
		return this.idVaIstruzione;
	}

	public void setIdVaIstruzione(Integer idVaIstruzione) {
		this.idVaIstruzione = idVaIstruzione;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "cod_titolo", nullable = false)
	public DeTitolo getDeTitolo() {
		return this.deTitolo;
	}

	public void setDeTitolo(DeTitolo deTitolo) {
		this.deTitolo = deTitolo;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "id_va_dati_vacancy", nullable = false)
	public VaDatiVacancy getVaDatiVacancy() {
		return this.vaDatiVacancy;
	}

	public void setVaDatiVacancy(VaDatiVacancy vaDatiVacancy) {
		this.vaDatiVacancy = vaDatiVacancy;
	}

	@Column(name = "votazione", length = 20)
	public String getVotazione() {
		return this.votazione;
	}

	public void setVotazione(String votazione) {
		this.votazione = votazione;
	}

	@Column(name = "specifica", length = 200)
	public String getSpecifica() {
		return specifica;
	}

	public void setSpecifica(String specifica) {
		this.specifica = specifica;
	}

	@Column(name = "opz_conseguito", length = 1)
	public String getOpzConseguito() {
		return opzConseguito;
	}

	public void setOpzConseguito(String opzConseguito) {
		this.opzConseguito = opzConseguito;
	}

	@Column(name = "opz_indispensabile", length = 1)
	public String getOpzIndispensabile() {
		return opzIndispensabile;
	}

	public void setOpzIndispensabile(String opzIndispensabile) {
		this.opzIndispensabile = opzIndispensabile;
	}

	@Column(name = "opz_preferibile", length = 1)
	public String getOpzPreferibile() {
		return opzPreferibile;
	}

	public void setOpzPreferibile(String opzPreferibile) {
		this.opzPreferibile = opzPreferibile;
	}

	@Transient
	public String getTipoSceltaTitolo() {
		if (opzPreferibile != null && this.opzPreferibile.equalsIgnoreCase("Y")) {
    	   tipoSceltaTitolo = "P";
       }else if(opzIndispensabile != null && this.opzIndispensabile.equalsIgnoreCase("Y")){
    	   tipoSceltaTitolo = "I";
       }
       return tipoSceltaTitolo;
	}
	
	public void setTipoSceltaTitolo(String tipoSceltaTitolo) {		
		if(tipoSceltaTitolo != null && tipoSceltaTitolo.equalsIgnoreCase("P")) {
			this.opzPreferibile = "Y";
			this.opzIndispensabile = null;
		}else if (tipoSceltaTitolo != null && tipoSceltaTitolo.equalsIgnoreCase("I")) {
			this.opzIndispensabile = "Y";
			this.opzPreferibile = null;
		}
	}

}
