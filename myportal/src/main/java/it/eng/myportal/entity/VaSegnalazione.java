package it.eng.myportal.entity;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * VaSegnalazione generated by hbm2java
 */
@Entity
@Table(name = "va_segnalazione", schema = "myportal")
@NamedQueries({
		@NamedQuery(name = "findSegnalazioneByMailIdVacMitt", query = "select s from VaSegnalazione s where lower(s.email) = :parEmail and s.idVaDatiVacancy = :parIdDatiVacancy and s.pfPrincipal.idPfPrincipal = :parIdPfPrincipal") })
public class VaSegnalazione extends AbstractEntity implements java.io.Serializable {
	/**
	 * 
	 */
	private static final long serialVersionUID = 1344305833990468093L;

	private Integer idVaSegnalazione;
	private Integer idVaDatiVacancy;
	private PfPrincipal pfPrincipal;
	private Date dataInvio;
	private String nominativo;
	private String email;

	public VaSegnalazione() {
	}

	public VaSegnalazione(Integer idVaDatiVacancy, PfPrincipal pfPrincipal, Date dataInvio, String nominativo,
			String email, PfPrincipal pfPrincipalIns, PfPrincipal pfPrincipalMod, Date dtmIns, Date dtmMod) {

		super(pfPrincipalIns, pfPrincipalMod, dtmIns, dtmMod);

		this.idVaDatiVacancy = idVaDatiVacancy;
		this.pfPrincipal = pfPrincipal;
		this.dataInvio = dataInvio;
		this.nominativo = nominativo;
		this.email = email;
	}

	@Id
	@SequenceGenerator(name = "va_segnalazione_id_va_segnalazione_seq", sequenceName = "va_segnalazione_id_va_segnalazione_seq", allocationSize = 1)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "va_segnalazione_id_va_segnalazione_seq")
	@Column(name = "id_va_segnalazione", unique = true, nullable = false)
	public Integer getIdVaSegnalazione() {
		return this.idVaSegnalazione;
	}

	public void setIdVaSegnalazione(Integer idVaSegnalazione) {
		this.idVaSegnalazione = idVaSegnalazione;
	}

	@Column(name = "id_va_dati_vacancy", nullable = false)
	public Integer getIdVaDatiVacancy() {
		return this.idVaDatiVacancy;
	}

	public void setIdVaDatiVacancy(Integer idVaDatiVacancy) {
		this.idVaDatiVacancy = idVaDatiVacancy;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_pf_principal", nullable = false)
	public PfPrincipal getPfPrincipal() {
		return this.pfPrincipal;
	}

	public void setPfPrincipal(PfPrincipal pfPrincipal) {
		this.pfPrincipal = pfPrincipal;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "data_invio", nullable = false)
	public Date getDataInvio() {
		return this.dataInvio;
	}

	public void setDataInvio(Date dataInvio) {
		this.dataInvio = dataInvio;
	}

	@Column(name = "nominativo", nullable = false, length = 255)
	public String getNominativo() {
		return this.nominativo;
	}

	public void setNominativo(String nominativo) {
		this.nominativo = nominativo;
	}

	@Column(name = "email", nullable = false, length = 255)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

}
