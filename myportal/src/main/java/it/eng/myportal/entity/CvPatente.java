package it.eng.myportal.entity;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

// Generated Mar 1, 2012 12:28:41 PM by Hibernate Tools 3.4.0.CR1
import it.eng.myportal.entity.decodifiche.DePatente;
import it.eng.myportal.entity.decodifiche.sil.DePatenteSil;

/**
 * CvPatente generated by hbm2java
 */
@Entity
@Table(name = "cv_patente", schema = "myportal")

@NamedQueries({
	@NamedQuery(name = "CvPatenteFindByCvId", query = "select d from CvPatente d where d.cvDatiPersonali.idCvDatiPersonali = :cvId")
	})
public class CvPatente extends AbstractEntity implements java.io.Serializable {
	private static final long serialVersionUID = 551417L;
	private Integer idCvPatente;

	private CvDatiPersonali cvDatiPersonali;
	private DePatente dePatente;
	private DePatenteSil dePatenteSil;

	public CvPatente() {
	}

	public CvPatente(Integer idCvPatente, PfPrincipal pfPrincipalByIdPrincipalMod,
			PfPrincipal pfPrincipalByIdPrincipalIns, CvDatiPersonali cvDatiPersonali, Date dtmIns, Date dtmMod) {
		this.idCvPatente = idCvPatente;
		setPfPrincipalMod(pfPrincipalByIdPrincipalMod);
		setPfPrincipalIns(pfPrincipalByIdPrincipalIns);
		this.cvDatiPersonali = cvDatiPersonali;
		setDtmIns(dtmIns);
		setDtmMod(dtmMod);
	}

	@Id
	@SequenceGenerator(name = "cv_patente_id_cv_patente_seq", sequenceName = "cv_patente_id_cv_patente_seq", allocationSize = 1)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "cv_patente_id_cv_patente_seq")
	@Column(name = "id_cv_patente", unique = true, nullable = false)
	public Integer getIdCvPatente() {
		return this.idCvPatente;
	}

	public void setIdCvPatente(Integer idCvPatente) {
		this.idCvPatente = idCvPatente;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_cv_dati_personali", nullable = false)
	public CvDatiPersonali getCvDatiPersonali() {
		return this.cvDatiPersonali;
	}

	public void setCvDatiPersonali(CvDatiPersonali cvDatiPersonali) {
		this.cvDatiPersonali = cvDatiPersonali;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "cod_patente")
	public DePatente getDePatente() {
		return this.dePatente;
	}

	public void setDePatente(DePatente dePatente) {
		this.dePatente = dePatente;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "cod_patente_sil")
	public DePatenteSil getDePatenteSil() {
		return dePatenteSil;
	}

	public void setDePatenteSil(DePatenteSil dePatenteSil) {
		this.dePatenteSil = dePatenteSil;
	}

}
