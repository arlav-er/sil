package it.eng.myportal.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.OrderBy;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;

import org.hibernate.annotations.Type;

import it.eng.myportal.entity.decodifiche.DeAttivita;
import it.eng.myportal.entity.decodifiche.DeBpMansione;
import it.eng.myportal.entity.decodifiche.DeComune;
import it.eng.myportal.entity.decodifiche.DeEvasioneRich;
import it.eng.myportal.entity.decodifiche.DeMansione;
import it.eng.myportal.entity.decodifiche.DeMotivoChiusura;
import it.eng.myportal.entity.decodifiche.DeProvenienza;
import it.eng.myportal.entity.decodifiche.DeTrasferta;
import it.eng.myportal.entity.decodifiche.min.DeAttivitaMin;
import it.eng.myportal.entity.decodifiche.min.DeMansioneMin;
import it.eng.myportal.entity.enums.CodStatoVacancyEnum;
// Generated Mar 1, 2012 12:28:41 PM by Hibernate Tools 3.4.0.CR1
import it.eng.myportal.utils.ConstantsSingleton;

/**
 * VaDatiVacancy generated by hbm2java
 */
@Entity
@Table(name = "va_dati_vacancy", schema = "myportal", uniqueConstraints = @UniqueConstraint(columnNames = { "num_anno",
		"num_richiesta", "cod_provenienza_vacancy" }))
@NamedQueries({
		@NamedQuery(name = "findVacancyByCodComunicazioneSil", query = "select v from VaDatiVacancy v where v.codComunicazioneSil = :codComunicazioneSil"),
		@NamedQuery(name = "findVaDatiVacancyByCodComunicazione", query = "select v from VaDatiVacancy v where v.vaVacancyCl.codComunicazione = :codComunicazione"),
		@NamedQuery(name = "findAllWithoutPOI", query = "select vaDatiVacancy from VaDatiVacancy vaDatiVacancy where vaDatiVacancy.poi.idPoi is null and vaDatiVacancy.opzTipoDecodifiche='S' and vaDatiVacancy.numAnno>=2017 and vaDatiVacancy.dtScadenzaPubblicazione> :dtScadenzaPubblicazione"),
		@NamedQuery(name = "findVaDatiVacancyClDaAgg", query = "select v from VaDatiVacancy v where v.deProvenienzaVacancy.codProvenienza = 'MIN' and v.pfPrincipalPalese.idPfPrincipal is null "),
		@NamedQuery(name = "findVacancyByKey", query = "select v from VaDatiVacancy v where v.numAnno = :numAnno and v.numRichiesta = :numRichiesta and v.deProvenienzaVacancy.codProvenienza = :codProvenienza") })
public class VaDatiVacancy extends AbstractEntity implements java.io.Serializable {
	private static final long serialVersionUID = 891234L;

	private Set<AcCandidatura> acCandidaturas = new HashSet<AcCandidatura>(0);
	private String attivitaDescrizioneEstesa;
	private DeAttivitaMin attivitaMin;
	private String attivitaPrincipale;
	private String codComunicazioneSil;
	/**
	 * PfPrincipal - singoli lavoratori - che possono visualizzare la vacancy
	 */
	private Set<PfPrincipal> contactInfoViewableBy = new HashSet<PfPrincipal>(0);
	private DeAttivita deAttivita;
	private DeMansione deMansione;
	private String denominazioneIntermediario;
	private DeProvenienza deProvenienzaVacancy;
	private DeProvenienza deProvenienzaVacancySIL;
	private DeTrasferta deTrasferta;
	private Date dtPubblicazione;
	private Date dtScadenza;
	private Date dtScadenzaPubblicazione;
	private Boolean flagAnonima;
	private Boolean flagEliminata;
	private Boolean flagInvioCl;
	private String opzNullaOsta;
	private Integer idVaDatiVacancy;
	private String intermediario;
	private DeMansioneMin mansioneMin;
	private DeMotivoChiusura motivoChiusura;
	private String noteAbilitazioni;
	private Integer numAnno;
	private Integer numAnnoSIL;
	private Integer numLavRicercati;
	private Integer numRichiesta;
	private Integer numRichiestaSIL;
	private String opzEsperienze;
	private String opzPubblicabile;
	private Set<VaAgevolazione> vaAgevolaziones = new HashSet<VaAgevolazione>(0);
	private List<VaAlbo> vaAlbos = new ArrayList<VaAlbo>(0);
	private VaAltreInfo vaAltreInfo;
	private VaCompetenzeTrasv vaCompetenzeTrasv;
	private VaContatto vaContattoAlt;
	private VaContatto vaContattoPrinc;
	private List<VaContratto> vaContrattos = new ArrayList<VaContratto>(0);
	private VaInformatica vaInformatica;
	private Set<VaIstruzione> vaIstruziones = new HashSet<VaIstruzione>(0);
	private Set<VaLingua> vaLinguas = new HashSet<VaLingua>(0);
	private Set<VaOrario> vaOrarios = new HashSet<VaOrario>(0);
	private Set<VaPatente> vaPatentes = new HashSet<VaPatente>(0);
	private Set<VaPatentino> vaPatentinos = new HashSet<VaPatentino>(0);
	private VaEsperienze vaEsperienze;
	private VaPubblicazione vaPubblicazione;
	private VaRetribuzione vaRetribuzione;
	private Set<VaTurno> vaTurnos = new HashSet<VaTurno>(0);
	private VaVacancyCl vaVacancyCl;

	private Boolean visibilita;
	private boolean flgPacchettoCresco;
	private boolean flgCandidatura = true; // Default: true, alla creazione di una nuova vacancy.

	private DeComune deComune;
	private Poi poi;
	private PfPrincipal pfPrincipal;
	private PfPrincipal pfPrincipalPalese;
	private String indirizzoLavoro;
	private String opzTipoDecodifiche;
	private String notaOperatore;
	private DeBpMansione deBpMansione;
	private String professione;

	private CodStatoVacancyEnum codStatoVacancyEnum;
	// IDO 2020
	private Boolean flagIdo;
	private DeEvasioneRich deEvasioneRich;
	
	private String codiceFiscale;
	private String ragioneSociale;
	private String nomeOperatore;
	private String cognomeOperatore;
	
	private String motivazione;
	private Date dtArchiviazione;
	private PfPrincipal utenteArchiviazione;

	private DeComune deComuneAzienda;

	private Boolean flagNoDiscriminazione;
	

	public static class OpzTipoDecodifiche {
		public static final String SIL = "S";
		public static final String MINISTERO = "M";
	}

	public VaDatiVacancy() {
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "vaDatiVacancy")
	public Set<AcCandidatura> getAcCandidaturas() {
		return this.acCandidaturas;
	}

	@Column(name = "attivita_descrizione_estesa", length = 18000)
	public String getAttivitaDescrizioneEstesa() {
		return this.attivitaDescrizioneEstesa;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cod_attivita_min", nullable = true)
	public DeAttivitaMin getAttivitaMin() {
		return attivitaMin;
	}

	@Column(name = "attivita_principale", length = 100)
	public String getAttivitaPrincipale() {
		return this.attivitaPrincipale;
	}

	@Column(name = "cod_comunicazione_sil", length = 25)
	public String getCodComunicazioneSil() {
		return this.codComunicazioneSil;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "va_abilita_vis_contatto_az", joinColumns = {
			@JoinColumn(name = "id_va_dati_vacancy", referencedColumnName = "id_va_dati_vacancy") }, inverseJoinColumns = {
					@JoinColumn(name = "id_pf_principal", referencedColumnName = "id_pf_principal") })
	public Set<PfPrincipal> getContactInfoViewableBy() {
		return contactInfoViewableBy;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cod_ateco")
	public DeAttivita getDeAttivita() {
		return this.deAttivita;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cod_mansione", nullable = false)
	public DeMansione getDeMansione() {
		return this.deMansione;
	}

	@Column(name = "denominazione_intermediario", length = 200)
	public String getDenominazioneIntermediario() {
		return denominazioneIntermediario;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "cod_provenienza_vacancy", nullable = false)
	public DeProvenienza getDeProvenienzaVacancy() {
		return this.deProvenienzaVacancy;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cod_provenienza_vacancy_sil", nullable = false)
	public DeProvenienza getDeProvenienzaVacancySIL() {
		return this.deProvenienzaVacancySIL;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cod_trasferta")
	public DeTrasferta getDeTrasferta() {
		return this.deTrasferta;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "dt_pubblicazione", length = 13)
	public Date getDtPubblicazione() {
		return this.dtPubblicazione;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "dt_scadenza", length = 13)
	public Date getDtScadenza() {
		return this.dtScadenza;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "dt_scadenza_pubblicazione", length = 13)
	public Date getDtScadenzaPubblicazione() {
		return this.dtScadenzaPubblicazione;
	}

	@Type(type = "yes_no")
	@Column(name = "flag_anonima", nullable = false, length = 1)
	public Boolean getFlagAnonima() {
		return this.flagAnonima;
	}

	@Type(type = "yes_no")
	@Column(name = "flag_eliminata", nullable = false, length = 1)
	public Boolean getFlagEliminata() {
		return flagEliminata;
	}

	@Type(type = "yes_no")
	@Column(name = "flag_invio_cl", nullable = false, length = 1)
	public Boolean getFlagInvioCl() {
		return flagInvioCl;
	}

	@Column(name = "opz_nulla_osta", nullable = true, length = 1)
	public String getOpzNullaOsta() {
		return opzNullaOsta;
	}

	@Id
	@SequenceGenerator(name = "va_dati_vacancy_id_va_dati_vacancy_seq", sequenceName = "va_dati_vacancy_id_va_dati_vacancy_seq", allocationSize = 1)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "va_dati_vacancy_id_va_dati_vacancy_seq")
	@Column(name = "id_va_dati_vacancy", unique = true, nullable = false)
	public Integer getIdVaDatiVacancy() {
		return this.idVaDatiVacancy;
	}

	@Column(name = "intermediario", length = 11)
	public String getIntermediario() {
		return intermediario;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cod_mansione_min", nullable = true)
	public DeMansioneMin getMansioneMin() {
		return mansioneMin;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cod_motivo_chiusura")
	public DeMotivoChiusura getMotivoChiusura() {
		return motivoChiusura;
	}

	@Column(name = "note_abilitazioni", length = 2000)
	public String getNoteAbilitazioni() {
		return noteAbilitazioni;
	}

	@Column(name = "num_anno", nullable = false)
	public Integer getNumAnno() {
		return this.numAnno;
	}

	@Column(name = "num_anno_sil")
	public Integer getNumAnnoSIL() {
		return this.numAnnoSIL;
	}

	@Column(name = "num_lav_ricercati", nullable = false)
	public Integer getNumLavRicercati() {
		return this.numLavRicercati;
	}

	@Column(name = "num_richiesta", nullable = false)
	public Integer getNumRichiesta() {
		return this.numRichiesta;
	}

	@Column(name = "num_richiesta_sil")
	public Integer getNumRichiestaSIL() {
		return this.numRichiestaSIL;
	}

	@Column(name = "opz_esperienze", length = 1)
	public String getOpzEsperienze() {
		return this.opzEsperienze;
	}

	@Column(name = "opz_pubblicabile", length = 1)
	public String getOpzPubblicabile() {
		return this.opzPubblicabile;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "vaDatiVacancy")
	public Set<VaAgevolazione> getVaAgevolaziones() {
		return this.vaAgevolaziones;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "vaDatiVacancy")
	@OrderBy(value = "dtmIns")
	public List<VaAlbo> getVaAlbos() {
		return this.vaAlbos;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "vaDatiVacancy")
	public VaAltreInfo getVaAltreInfo() {
		return this.vaAltreInfo;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "vaDatiVacancy")
	public VaCompetenzeTrasv getVaCompetenzeTrasv() {
		return this.vaCompetenzeTrasv;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_va_contatto_alt")
	public VaContatto getVaContattoAlt() {
		return this.vaContattoAlt;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_va_contatto_princ")
	public VaContatto getVaContattoPrinc() {
		return this.vaContattoPrinc;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "vaDatiVacancy")
	public VaPubblicazione getVaPubblicazione() {
		return vaPubblicazione;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "vaDatiVacancy")
	@OrderBy(value = "dtmIns")
	public List<VaContratto> getVaContrattos() {
		return this.vaContrattos;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "vaDatiVacancy")
	public VaInformatica getVaInformatica() {
		return this.vaInformatica;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "vaDatiVacancy")
	public Set<VaIstruzione> getVaIstruziones() {
		return this.vaIstruziones;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "vaDatiVacancy")
	public Set<VaLingua> getVaLinguas() {
		return this.vaLinguas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "vaDatiVacancy")
	public Set<VaOrario> getVaOrarios() {
		return this.vaOrarios;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "vaDatiVacancy")
	public Set<VaPatente> getVaPatentes() {
		return this.vaPatentes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "vaDatiVacancy")
	public Set<VaPatentino> getVaPatentinos() {
		return this.vaPatentinos;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "vaDatiVacancy")
	public VaRetribuzione getVaRetribuzione() {
		return this.vaRetribuzione;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "vaDatiVacancy")
	public Set<VaTurno> getVaTurnos() {
		return this.vaTurnos;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "vaDatiVacancy")
	public VaEsperienze getVaEsperienze() {
		return vaEsperienze;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "vaDatiVacancy")
	public VaVacancyCl getVaVacancyCl() {
		return this.vaVacancyCl;
	}

	@Type(type = "yes_no")
	@Column(name = "visibilita", nullable = false, length = 1)
	public Boolean getVisibilita() {
		return visibilita;
	}

	/**
	 * Determina se una vacancy e' proveniente da clicLavoro se va_dati_vacancy.cod_provenienza_vacancy == 'MIN'
	 * 
	 * @param vaDatiVacancy
	 * @return
	 */
	@Transient
	public boolean isFromClicLavoro() {
		String provenienza = this.getDeProvenienzaVacancy().getCodProvenienza();
		return (ConstantsSingleton.DeProvenienza.COD_MINISTERO.equals(provenienza));
	}

	@Transient
	public boolean isNonModificabile() {
		if (getDeProvenienzaVacancy() == null || getDeProvenienzaVacancy().getCodProvenienza() == null) {
			return true;
		}
		// #8432
		if (isScaduta()) {
			return true;
		}
		return getDeProvenienzaVacancy().getCodProvenienza().substring(0, 3).equalsIgnoreCase("SIL");
	}

	@Transient
	public boolean isScaduta() {
		return getDtScadenzaPubblicazione().before(new Date());
	}

	@Transient
	public boolean isArchiviata() {
		return getCodStatoVacancyEnum().equals(CodStatoVacancyEnum.ARC);
	}

	@Transient
	public boolean isPubblicata() {
		return getCodStatoVacancyEnum().equals(CodStatoVacancyEnum.PUB);
	}

	/**
	 * Determina se una vacancy e' proveniente da MyPortal, cioe' se va_dati_vacancy.cod_provenienza_vacancy ==
	 * 'MYPORTAL'
	 * 
	 * @param vaDatiVacancy
	 * @return
	 */
	@Transient
	public boolean isFromMyPortal() {
		String provenienza = this.getDeProvenienzaVacancy().getCodProvenienza();
		return (ConstantsSingleton.DeProvenienza.COD_MYPORTAL.equals(provenienza));
	}

	/**
	 * Determina se una vacancy e' proveniente da SIL, cioe' se va_dati_vacancy.cod_provenienza_vacancy inizia con 'SIL'
	 * 
	 * @param vaDatiVacancy
	 * @return
	 */
	@Transient
	public boolean isFromSIL() {
		String provenienza = this.getDeProvenienzaVacancy().getCodProvenienza();
		return (provenienza.startsWith(ConstantsSingleton.DeProvenienza.COD_SIL_GENERIC));
	}

	@Transient
	public boolean isIntermediata() {
		/*
		 * if (intermediario != null && !intermediario.trim().isEmpty()) { return true; } else { return false; }
		 */

		if (denominazioneIntermediario != null && !denominazioneIntermediario.trim().isEmpty()) {
			return true;
		} else {
			return false;
		}
	}

	@Transient
	public boolean isRagioneSocAziendaPalese() {
		boolean ret = false;
		if (isFromSIL()) {
			if (this.getDeEvasioneRich() != null && (this.getDeEvasioneRich().getCodEvasione()
					.equalsIgnoreCase(ConstantsSingleton.Evasione.PUBB_PALESE)
					|| this.getDeEvasioneRich().getCodEvasione()
							.equalsIgnoreCase(ConstantsSingleton.Evasione.PUBB_PALESE_PRESELEZIONE))) {
				return true;
			}
		}
		return ret;
	}

	/**
	 * Restituisce true se una vacancy e' originaria da SIL. Una vacancy e' originaria da SIL se
	 * va_dati_vacancy.cod_provenienza_vacancy = 'SIL*' oppure se va_dati_vacancy.cod_provenienza_vacancy_sil = 'SIL*'.
	 * 
	 * @param vaDatiVacancy
	 * @return
	 */
	@Transient
	public boolean isOriginariaSIL() {
		String codProvenienza = deProvenienzaVacancy.getCodProvenienza();
		String codProvenienzaSIL = "";
		if (deProvenienzaVacancySIL != null) {
			codProvenienzaSIL = deProvenienzaVacancySIL.getCodProvenienza();
		}
		return (codProvenienza.startsWith(ConstantsSingleton.DeProvenienza.COD_SIL_GENERIC)
				|| codProvenienzaSIL.startsWith(ConstantsSingleton.DeProvenienza.COD_SIL_GENERIC));
	}

	@Transient
	public boolean isSincronizzataCliclavoro() {
		return flagInvioCl;
	}

	@Transient
	public boolean isProprietario(Integer idPfPrincipal) {
		boolean result = false;

		if (pfPrincipalPalese != null) {
			result = pfPrincipalPalese.getIdPfPrincipal().equals(idPfPrincipal);
		} else {
			result = pfPrincipal.getIdPfPrincipal().equals(idPfPrincipal);
		}

		return result;
	}

	public void setAcCandidaturas(Set<AcCandidatura> acCandidaturas) {
		this.acCandidaturas = acCandidaturas;
	}

	public void setAttivitaDescrizioneEstesa(String attivitaDescrizioneEstesa) {
		this.attivitaDescrizioneEstesa = attivitaDescrizioneEstesa;
	}

	public void setAttivitaMin(DeAttivitaMin attivitaMin) {
		this.attivitaMin = attivitaMin;
	}

	public void setAttivitaPrincipale(String attivitaPrincipale) {
		this.attivitaPrincipale = attivitaPrincipale;
	}

	public void setCodComunicazioneSil(String codComunicazioneSil) {
		this.codComunicazioneSil = codComunicazioneSil;
	}

	public void setContactInfoViewableBy(Set<PfPrincipal> contactInfoViewableBy) {
		this.contactInfoViewableBy = contactInfoViewableBy;
	}

	public void setDeAttivita(DeAttivita deAttivita) {
		this.deAttivita = deAttivita;
	}

	public void setDeMansione(DeMansione deMansione) {
		this.deMansione = deMansione;
	}

	public void setDenominazioneIntermediario(String denominazioneIntermediario) {
		this.denominazioneIntermediario = denominazioneIntermediario;
	}

	public void setDeProvenienzaVacancy(DeProvenienza deProvenienzaVacancy) {
		this.deProvenienzaVacancy = deProvenienzaVacancy;
	}

	public void setDeProvenienzaVacancySIL(DeProvenienza deProvenienzaVacancySIL) {
		this.deProvenienzaVacancySIL = deProvenienzaVacancySIL;
	}

	public void setDeTrasferta(DeTrasferta deTrasferta) {
		this.deTrasferta = deTrasferta;
	}

	public void setDtPubblicazione(Date dtPubblicazione) {
		this.dtPubblicazione = dtPubblicazione;
	}

	public void setDtScadenza(Date dtScadenza) {
		this.dtScadenza = dtScadenza;
	}

	public void setDtScadenzaPubblicazione(Date dtScadenzaPubblicazione) {
		this.dtScadenzaPubblicazione = dtScadenzaPubblicazione;
	}

	public void setFlagAnonima(Boolean flagAnonima) {
		this.flagAnonima = flagAnonima;
	}

	public void setFlagEliminata(Boolean flagEliminata) {
		this.flagEliminata = flagEliminata;
	}

	public void setFlagInvioCl(Boolean flagInvioCl) {
		this.flagInvioCl = flagInvioCl;
	}

	public void setOpzNullaOsta(String opzNullaOsta) {
		this.opzNullaOsta = opzNullaOsta;
	}

	public void setIdVaDatiVacancy(Integer idVaDatiVacancy) {
		this.idVaDatiVacancy = idVaDatiVacancy;
	}

	public void setIntermediario(String intermediario) {
		this.intermediario = intermediario;
	}

	public void setMansioneMin(DeMansioneMin mansioneMin) {
		this.mansioneMin = mansioneMin;
	}

	public void setMotivoChiusura(DeMotivoChiusura motivoChiusura) {
		this.motivoChiusura = motivoChiusura;
	}

	public void setNoteAbilitazioni(String noteAbilitazioni) {
		this.noteAbilitazioni = noteAbilitazioni;
	}

	public void setNumAnno(Integer numAnno) {
		this.numAnno = numAnno;
	}

	public void setNumAnnoSIL(Integer numAnnoSIL) {
		this.numAnnoSIL = numAnnoSIL;
	}

	public void setNumLavRicercati(Integer numLavRicercati) {
		this.numLavRicercati = numLavRicercati;
	}

	public void setNumRichiesta(Integer numRichiesta) {
		this.numRichiesta = numRichiesta;
	}

	public void setNumRichiestaSIL(Integer numRichiestaSIL) {
		this.numRichiestaSIL = numRichiestaSIL;
	}

	public void setOpzEsperienze(String opzEsperienze) {
		this.opzEsperienze = opzEsperienze;
	}

	public void setOpzPubblicabile(String opzPubblicabile) {
		this.opzPubblicabile = opzPubblicabile;
	}

	public void setVaAgevolaziones(Set<VaAgevolazione> vaAgevolaziones) {
		this.vaAgevolaziones = vaAgevolaziones;
	}

	public void setVaAlbos(List<VaAlbo> vaAlbos) {
		this.vaAlbos = vaAlbos;
	}

	public void setVaAltreInfo(VaAltreInfo vaAltreInfo) {
		this.vaAltreInfo = vaAltreInfo;
	}

	public void setVaCompetenzeTrasv(VaCompetenzeTrasv vaCompetenzeTrasv) {
		this.vaCompetenzeTrasv = vaCompetenzeTrasv;
	}

	public void setVaContattoAlt(VaContatto vaContattoByIdVaContattoAlt) {
		this.vaContattoAlt = vaContattoByIdVaContattoAlt;
	}

	public void setVaContattoPrinc(VaContatto vaContattoByIdVaContattoPrinc) {
		this.vaContattoPrinc = vaContattoByIdVaContattoPrinc;
	}

	public void setVaContrattos(List<VaContratto> vaContrattos) {
		this.vaContrattos = vaContrattos;
	}

	public void setVaInformatica(VaInformatica vaInformatica) {
		this.vaInformatica = vaInformatica;
	}

	public void setVaIstruziones(Set<VaIstruzione> vaIstruziones) {
		this.vaIstruziones = vaIstruziones;
	}

	public void setVaLinguas(Set<VaLingua> vaLinguas) {
		this.vaLinguas = vaLinguas;
	}

	public void setVaOrarios(Set<VaOrario> vaOrarios) {
		this.vaOrarios = vaOrarios;
	}

	public void setVaPatentes(Set<VaPatente> vaPatentes) {
		this.vaPatentes = vaPatentes;
	}

	public void setVaPatentinos(Set<VaPatentino> vaPatentinos) {
		this.vaPatentinos = vaPatentinos;
	}

	public void setVaRetribuzione(VaRetribuzione vaRetribuzione) {
		this.vaRetribuzione = vaRetribuzione;
	}

	public void setVaTurnos(Set<VaTurno> vaTurnos) {
		this.vaTurnos = vaTurnos;
	}

	public void setVaVacancyCl(VaVacancyCl vaVacancyCl) {
		this.vaVacancyCl = vaVacancyCl;
	}

	public void setVaEsperienze(VaEsperienze vaEsperienze) {
		this.vaEsperienze = vaEsperienze;
	}

	public void setVisibilita(Boolean visibilita) {
		this.visibilita = visibilita;
	}

	public void setVaPubblicazione(VaPubblicazione vaPubblicazione) {
		this.vaPubblicazione = vaPubblicazione;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "cod_com_lavoro", nullable = false)
	public DeComune getDeComune() {
		return this.deComune;
	}

	public void setDeComune(DeComune deComune) {
		this.deComune = deComune;
	}
 

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_poi_vacancy")
	public Poi getPoi() {
		return this.poi;
	}

	public void setPoi(Poi poi) {
		this.poi = poi;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_pf_principal", nullable = false)
	public PfPrincipal getPfPrincipal() {
		return this.pfPrincipal;
	}

	public void setPfPrincipal(PfPrincipal pfPrincipal) {
		this.pfPrincipal = pfPrincipal;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_pf_principal_palese", nullable = true)
	public PfPrincipal getPfPrincipalPalese() {
		return this.pfPrincipalPalese;
	}

	public void setPfPrincipalPalese(PfPrincipal pfPrincipalPalese) {
		this.pfPrincipalPalese = pfPrincipalPalese;
	}

	@Column(name = "indirizzo_lavoro", nullable = false, length = 512)
	public String getIndirizzoLavoro() {
		return this.indirizzoLavoro;
	}

	public void setIndirizzoLavoro(String indirizzoLavoro) {
		this.indirizzoLavoro = indirizzoLavoro;
	}

	@Column(name = "opz_tipo_decodifiche", length = 1)
	public String getOpzTipoDecodifiche() {
		return opzTipoDecodifiche;
	}

	public void setOpzTipoDecodifiche(String opzTipoDecodifiche) {
		this.opzTipoDecodifiche = opzTipoDecodifiche;
	}

	@Column(name = "nota_operatore", length = 2000)
	public String getNotaOperatore() {
		return notaOperatore;
	}

	public void setNotaOperatore(String notaOperatore) {
		this.notaOperatore = notaOperatore;
	}

	@Type(type = "yes_no")
	@Column(name = "flg_pacchetto_cresco", nullable = false, length = 1)
	public boolean getFlgPacchettoCresco() {
		return flgPacchettoCresco;
	}

	public void setFlgPacchettoCresco(boolean flgPacchettoCresco) {
		this.flgPacchettoCresco = flgPacchettoCresco;
	}

	@Type(type = "yes_no")
	@Column(name = "flg_candidatura", nullable = false, length = 1)
	public boolean getFlgCandidatura() {
		return flgCandidatura;
	}

	public void setFlgCandidatura(boolean flgCandidatura) {
		this.flgCandidatura = flgCandidatura;
	}

	@Enumerated(EnumType.STRING)
	@Column(name = "cod_stato_vacancy", length = 3)
	public CodStatoVacancyEnum getCodStatoVacancyEnum() {
		return codStatoVacancyEnum;
	}

	public void setCodStatoVacancyEnum(CodStatoVacancyEnum codStatoVacancyEnum) {
		this.codStatoVacancyEnum = codStatoVacancyEnum;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "cod_mansione_istat")
	public DeBpMansione getDeBpMansione() {
		return deBpMansione;
	}

	public void setDeBpMansione(DeBpMansione deBpMansione) {
		this.deBpMansione = deBpMansione;
	}

	@Column(length = 250)
	public String getProfessione() {
		return professione;
	}

	public void setProfessione(String professione) {
		this.professione = professione;
	}

	@Column(name = "flg_ido", nullable = true)
	public Boolean getFlagIdo() {
		return flagIdo;
	}

	public void setFlagIdo(Boolean flagIdo) {
		this.flagIdo = flagIdo;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "cod_evasione")
	public DeEvasioneRich getDeEvasioneRich() {
		return deEvasioneRich;
	}

	public void setDeEvasioneRich(DeEvasioneRich deEvasioneRich) {
		this.deEvasioneRich = deEvasioneRich;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((idVaDatiVacancy == null) ? 0 : idVaDatiVacancy.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		VaDatiVacancy other = (VaDatiVacancy) obj;
		if (idVaDatiVacancy == null) {
			if (other.idVaDatiVacancy != null)
				return false;
		} else if (!idVaDatiVacancy.equals(other.idVaDatiVacancy))
			return false;
		return true;
	}
	@Column(name = "codice_fiscale", length = 16)
	public String getCodiceFiscale() {
		return codiceFiscale;
	}

	public void setCodiceFiscale(String codiceFiscale) {
		this.codiceFiscale = codiceFiscale;
	}
	
	@Column(name = "ragione_sociale", length = 200)
	public String getRagioneSociale() {
		return ragioneSociale;
	}

	public void setRagioneSociale(String ragioneSociale) {
		this.ragioneSociale = ragioneSociale;
	}
	
	@Column(name = "nome_operatore", length = 100)
	public String getNomeOperatore() {
		return nomeOperatore;
	}

	public void setNomeOperatore(String nomeOperatore) {
		this.nomeOperatore = nomeOperatore;
	}

	@Column(name = "cognome_operatore", length = 100)
	public String getCognomeOperatore() {
		return cognomeOperatore;
	}

	public void setCognomeOperatore(String cognomeOperatore) {
		this.cognomeOperatore = cognomeOperatore;
	}

	@Column(name = "motivazione", length = 4000)
	public String getMotivazione() {
		return motivazione;
	}

	public void setMotivazione(String motivazione) {
		this.motivazione = motivazione;
	}

	@Temporal(TemporalType.DATE)
	@Column(name="dt_archiviazione")
	public Date getDtArchiviazione() {
		return dtArchiviazione;
	}

	public void setDtArchiviazione(Date dtArchiviazione) {
		this.dtArchiviazione = dtArchiviazione;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "utente_archiviazione")
	public PfPrincipal getUtenteArchiviazione() {
		return utenteArchiviazione;
	}

	public void setUtenteArchiviazione(PfPrincipal utenteArchiviazione) {
		this.utenteArchiviazione = utenteArchiviazione;
	}
	

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "cod_comune_azienda" )
	public DeComune getDeComuneAzienda() {
		return this.deComuneAzienda;
	}

	public void setDeComuneAzienda(DeComune deComune) {
		this.deComuneAzienda = deComune;
	}
	
	@Column(name = "flag_no_discriminazione")
	public Boolean getFlagNoDiscriminazione() {
		return flagNoDiscriminazione;
	}

	public void setFlagNoDiscriminazione(Boolean flagNoDiscriminazione) {
		this.flagNoDiscriminazione = flagNoDiscriminazione;
	}

}