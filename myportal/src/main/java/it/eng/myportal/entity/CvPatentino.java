package it.eng.myportal.entity;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

// Generated Mar 1, 2012 12:28:41 PM by Hibernate Tools 3.4.0.CR1
import it.eng.myportal.entity.decodifiche.DePatentino;
import it.eng.myportal.entity.decodifiche.sil.DePatentinoSil;

/**
 * CvPatentino generated by hbm2java
 */
@Entity
@Table(name = "cv_patentino", schema = "myportal")

@NamedQueries({
	@NamedQuery(name = "CvPatentinoFindByCvId", query = "select d from CvPatentino d where d.cvDatiPersonali.idCvDatiPersonali = :cvId")
	})
public class CvPatentino extends AbstractEntity implements java.io.Serializable {
	private static final long serialVersionUID = 283197L;
	private Integer idCvPatentino;

	private CvDatiPersonali cvDatiPersonali;
	private DePatentino dePatentino;
	private DePatentinoSil dePatentinoSil;

	public CvPatentino() {
	}

	public CvPatentino(Integer idCvPatentino, PfPrincipal pfPrincipalByIdPrincipalMod,
			PfPrincipal pfPrincipalByIdPrincipalIns, CvDatiPersonali cvDatiPersonali, Date dtmIns, Date dtmMod) {
		super(pfPrincipalByIdPrincipalIns, pfPrincipalByIdPrincipalMod, dtmIns, dtmMod);
		this.idCvPatentino = idCvPatentino;
		this.cvDatiPersonali = cvDatiPersonali;
	}

	@Id
	@SequenceGenerator(name = "cv_patentino_id_cv_patentino_seq", sequenceName = "cv_patentino_id_cv_patentino_seq", allocationSize = 1)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "cv_patentino_id_cv_patentino_seq")
	@Column(name = "id_cv_patentino", unique = true, nullable = false)
	public Integer getIdCvPatentino() {
		return this.idCvPatentino;
	}

	public void setIdCvPatentino(Integer idCvPatentino) {
		this.idCvPatentino = idCvPatentino;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_cv_dati_personali", nullable = false)
	public CvDatiPersonali getCvDatiPersonali() {
		return this.cvDatiPersonali;
	}

	public void setCvDatiPersonali(CvDatiPersonali cvDatiPersonali) {
		this.cvDatiPersonali = cvDatiPersonali;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "cod_patentino")
	public DePatentino getDePatentino() {
		return this.dePatentino;
	}

	public void setDePatentino(DePatentino dePatentino) {
		this.dePatentino = dePatentino;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "cod_patentino_sil")
	public DePatentinoSil getDePatentinoSil() {
		return dePatentinoSil;
	}

	public void setDePatentinoSil(DePatentinoSil dePatentinoSil) {
		this.dePatentinoSil = dePatentinoSil;
	}

}
