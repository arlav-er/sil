package it.eng.myportal.entity;

import it.eng.myportal.entity.decodifiche.DeAtpAttivitaSvolta;
import it.eng.myportal.entity.decodifiche.DeAtpContratto;
import it.eng.myportal.entity.decodifiche.DeAttivita;
import it.eng.myportal.entity.decodifiche.DeComune;
import it.eng.myportal.entity.decodifiche.DeProvincia;
import it.eng.myportal.entity.decodifiche.DeRegione;
import it.eng.myportal.entity.decodifiche.DeStatoPratica;
import it.eng.myportal.entity.decodifiche.DeTipoConsulenza;
import it.eng.myportal.entity.decodifiche.DeTipoPratica;
import it.eng.myportal.entity.decodifiche.DeTipoQuesito;
import it.eng.myportal.entity.decodifiche.DeTitolo;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;
import org.hibernate.annotations.Type;
// default package
// Generated 20-feb-2013 13.47.02 by Hibernate Tools 3.4.0.CR1
import it.eng.myportal.enums.FasciaEta;

import it.eng.myportal.utils.ConstantsSingleton;

/**
 * MsgMessaggioAtipico generated by hbm2java
 */
@Entity
@Table(name = "atp_messaggio_atipico", schema = "myportal")
@NamedQueries({ @NamedQuery(name = "findPraticaByIdPfPrincipal", query = "select p from MsgMessaggioAtipico p where p.pfPrincipalIns.idPfPrincipal = :idPfPrincipal order by p.idMsgMessaggio") })
public class MsgMessaggioAtipico extends AbstractEntity implements java.io.Serializable {
	private static final long serialVersionUID = 1L;

	private Integer idMsgMessaggio;
	private MsgMessaggio msgMessaggio;
	private DeRegione deRegione;
	private DeStatoPratica deStatoPratica;
	private DeTitolo deTitolo;
	private DeComune deComuneByCodComuneLavoro;
	private DeComune deComuneByCodComuneResidenza;
	private DeProvincia deProvincia;
	private String codSesso;
	private FasciaEta fasciaEta;
	private String committenza;
	private Boolean flagAssociazioneProfessionale;
	private String associazioneProfessionale;
	private String altraAttivita;
	private String motivoRifiuto;
	private DeTipoQuesito deTipoQuesito;
	private DeTipoPratica deTipoPratica;
	private DeAtpAttivitaSvolta deAtpAttivitaSvolta;
	private DeAttivita deAttivita;
	private DeAtpContratto deAtpContratto;
	private DeAtpContratto deAtpContrattoUltimo;
	private String nome;
	private String cognome;
	private String email;
	private String opzStatoOccupazionale;
	private String cap;
	private String telefonoFax;
	private String attivitaSvoltaTesto;
	private DeTipoConsulenza deTipoConsulenza;
	private Date dtInoltroCoord;
	private Date dtInoltroCPI;
	private Date dtRisposta;
	private Boolean flagIscrittoCpi;
	private DeComune deComuneIscrizione;
	private DeAttivita deSettoreUltimoContratto;
	private Date dtFineUltimoContratto;
	private String targaCPIincaricato;
	private Boolean flgSeparataInps;

	private Set<AtpConsulenza> atpConsulenzas = new HashSet<AtpConsulenza>(0);
	private Set<DeProvincia> deProvincias = new HashSet<DeProvincia>(0);

	public MsgMessaggioAtipico() {
	}

	public MsgMessaggioAtipico(MsgMessaggio msgMessaggio) {
		this.msgMessaggio = msgMessaggio;
	}

	@GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "msgMessaggio"))
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "id_msg_messaggio", unique = true, nullable = false)
	public Integer getIdMsgMessaggio() {
		return this.idMsgMessaggio;
	}

	public void setIdMsgMessaggio(Integer idMsgMessaggio) {
		this.idMsgMessaggio = idMsgMessaggio;
	}

	@OneToOne(fetch = FetchType.LAZY, optional = false)
	@PrimaryKeyJoinColumn
	public MsgMessaggio getMsgMessaggio() {
		return this.msgMessaggio;
	}

	public void setMsgMessaggio(MsgMessaggio msgMessaggio) {
		this.msgMessaggio = msgMessaggio;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cod_regione_lavoro")
	public DeRegione getDeRegione() {
		return this.deRegione;
	}

	public void setDeRegione(DeRegione deRegione) {
		this.deRegione = deRegione;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cod_stato_pratica")
	public DeStatoPratica getDeStatoPratica() {
		return this.deStatoPratica;
	}

	public void setDeStatoPratica(DeStatoPratica deStatoPratica) {
		this.deStatoPratica = deStatoPratica;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cod_titolo")
	public DeTitolo getDeTitolo() {
		return this.deTitolo;
	}

	public void setDeTitolo(DeTitolo deTitolo) {
		this.deTitolo = deTitolo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cod_comune_lavoro")
	public DeComune getDeComuneByCodComuneLavoro() {
		return this.deComuneByCodComuneLavoro;
	}

	public void setDeComuneByCodComuneLavoro(DeComune deComuneByCodComuneLavoro) {
		this.deComuneByCodComuneLavoro = deComuneByCodComuneLavoro;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cod_comune_residenza")
	public DeComune getDeComuneByCodComuneResidenza() {
		return this.deComuneByCodComuneResidenza;
	}

	public void setDeComuneByCodComuneResidenza(DeComune deComuneByCodComuneResidenza) {
		this.deComuneByCodComuneResidenza = deComuneByCodComuneResidenza;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cod_provincia_lavoro")
	public DeProvincia getDeProvincia() {
		return this.deProvincia;
	}

	public void setDeProvincia(DeProvincia deProvincia) {
		this.deProvincia = deProvincia;
	}

	@Column(name = "cod_sesso", length = 1)
	public String getCodSesso() {
		return this.codSesso;
	}

	public void setCodSesso(String codSesso) {
		this.codSesso = codSesso;
	}

	@Enumerated(EnumType.ORDINAL)
	@Column(name = "num_eta")
	public FasciaEta getFasciaEta() {
		return this.fasciaEta;
	}

	public void setFasciaEta(FasciaEta numEta) {
		this.fasciaEta = numEta;
	}

	@Column(name = "committenza", length = 8)
	public String getCommittenza() {
		return this.committenza;
	}

	public void setCommittenza(String committenza) {
		this.committenza = committenza;
	}

	@Type(type = "yes_no")
	@Column(name = "flag_associazione_professionale", length = 1)
	public Boolean getFlagAssociazioneProfessionale() {
		return this.flagAssociazioneProfessionale;
	}

	public void setFlagAssociazioneProfessionale(Boolean flagAssociazioneProfessionale) {
		this.flagAssociazioneProfessionale = flagAssociazioneProfessionale;
	}

	@Column(name = "associazione_professionale", length = 200)
	public String getAssociazioneProfessionale() {
		return this.associazioneProfessionale;
	}

	public void setAssociazioneProfessionale(String associazioneProfessionale) {
		this.associazioneProfessionale = associazioneProfessionale;
	}

	@Column(name = "altra_attivita", length = 200)
	public String getAltraAttivita() {
		return this.altraAttivita;
	}

	public void setAltraAttivita(String altraAttivita) {
		this.altraAttivita = altraAttivita;
	}

	@Column(name = "motivo_rifiuto", length = 1000)
	public String getMotivoRifiuto() {
		return this.motivoRifiuto;
	}

	public void setMotivoRifiuto(String motivoRifuto) {
		this.motivoRifiuto = motivoRifuto;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "msgMessaggioAtipico")
	public Set<AtpConsulenza> getAtpConsulenzas() {
		return this.atpConsulenzas;
	}

	public void setAtpConsulenzas(Set<AtpConsulenza> atpConsulenzas) {
		this.atpConsulenzas = atpConsulenzas;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cod_tipo_quesito")
	public DeTipoQuesito getDeTipoQuesito() {
		return this.deTipoQuesito;
	}

	public void setDeTipoQuesito(DeTipoQuesito deTipoQuesito) {
		this.deTipoQuesito = deTipoQuesito;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cod_tipo_pratica")
	public DeTipoPratica getDeTipoPratica() {
		return this.deTipoPratica;
	}

	public void setDeTipoPratica(DeTipoPratica deTipoPratica) {
		this.deTipoPratica = deTipoPratica;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "atp_area_territoriale", joinColumns = { @JoinColumn(name = "id_msg_messaggio", referencedColumnName = "id_msg_messaggio") }, inverseJoinColumns = { @JoinColumn(name = "cod_provincia", referencedColumnName = "cod_provincia") })
	public Set<DeProvincia> getDeProvincias() {
		return deProvincias;
	}

	public void setDeProvincias(Set<DeProvincia> deProvincias) {
		this.deProvincias = deProvincias;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cod_atp_attivita_svolta")
	public DeAtpAttivitaSvolta getDeAtpAttivitaSvolta() {
		return this.deAtpAttivitaSvolta;
	}

	public void setDeAtpAttivitaSvolta(DeAtpAttivitaSvolta deAtpAttivitaSvolta) {
		this.deAtpAttivitaSvolta = deAtpAttivitaSvolta;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cod_settore_lavorativo")
	public DeAttivita getDeAttivita() {
		return this.deAttivita;
	}

	public void setDeAttivita(DeAttivita deAttivita) {
		this.deAttivita = deAttivita;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cod_atp_contratto")
	public DeAtpContratto getDeAtpContratto() {
		return this.deAtpContratto;
	}

	public void setDeAtpContratto(DeAtpContratto deAtpContratto) {
		this.deAtpContratto = deAtpContratto;
	}

	@Column(name = "nome", length = 50)
	public String getNome() {
		return this.nome;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}

	@Column(name = "cognome", length = 50)
	public String getCognome() {
		return this.cognome;
	}

	public void setCognome(String cognome) {
		this.cognome = cognome;
	}

	@Column(name = "email")
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "opz_stato_occupazionale", length = 1)
	public String getOpzStatoOccupazionale() {
		return this.opzStatoOccupazionale;
	}

	public void setOpzStatoOccupazionale(String opzStatoOccupazionale) {
		this.opzStatoOccupazionale = opzStatoOccupazionale;
	}

	@Column(name = "cap", length = 5)
	public String getCap() {
		return this.cap;
	}

	public void setCap(String cap) {
		this.cap = cap;
	}

	@Column(name = "telefono_fax", length = 100)
	public String getTelefonoFax() {
		return this.telefonoFax;
	}

	public void setTelefonoFax(String telefonoFax) {
		this.telefonoFax = telefonoFax;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cod_tipo_consulenza")
	public DeTipoConsulenza getDeTipoConsulenza() {
		return this.deTipoConsulenza;
	}

	public void setDeTipoConsulenza(DeTipoConsulenza deTipoConsulenza) {
		this.deTipoConsulenza = deTipoConsulenza;
	}

	@Column(name = "attivita_svolta_testo", length = 100)
	public String getAttivitaSvoltaTesto() {
		return attivitaSvoltaTesto;
	}

	public void setAttivitaSvoltaTesto(String attivitaSvoltaTesto) {
		this.attivitaSvoltaTesto = attivitaSvoltaTesto;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "dt_inoltro_coord", nullable = false, length = 29)
	public Date getDtInoltroCoord() {
		return dtInoltroCoord;
	}

	public void setDtInoltroCoord(Date dtInoltroCoord) {
		this.dtInoltroCoord = dtInoltroCoord;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "dt_inoltro_cpi", nullable = false, length = 29)
	public Date getDtInoltroCPI() {
		return dtInoltroCPI;
	}

	public void setDtInoltroCPI(Date dtInoltroCPI) {
		this.dtInoltroCPI = dtInoltroCPI;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "dt_risposta", nullable = false, length = 29)
	public Date getDtRisposta() {
		return dtRisposta;
	}

	public void setDtRisposta(Date dtRisposta) {
		this.dtRisposta = dtRisposta;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cod_comune_iscrizione")
	public DeComune getDeComuneIscrizione() {
		return this.deComuneIscrizione;
	}

	public void setDeComuneIscrizione(DeComune deComuneByCodComuneIscrizione) {
		this.deComuneIscrizione = deComuneByCodComuneIscrizione;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cod_atp_contratto_ultimo")
	public DeAtpContratto getDeAtpContrattoUltimo() {
		return this.deAtpContrattoUltimo;
	}

	public void setDeAtpContrattoUltimo(DeAtpContratto deAtpContrattoUltimo) {
		this.deAtpContrattoUltimo = deAtpContrattoUltimo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cod_settore_ultimo_contratto")
	public DeAttivita getDeSettoreUltimoContratto() {
		return this.deSettoreUltimoContratto;
	}

	public void setDeSettoreUltimoContratto(DeAttivita deAttivitaByCodSettoreUltimoContratto) {
		this.deSettoreUltimoContratto = deAttivitaByCodSettoreUltimoContratto;
	}

	@Type(type = "yes_no")
	@Column(name = "flag_iscritto_cpi", length = 1)
	public Boolean getFlagIscrittoCpi() {
		return this.flagIscrittoCpi;
	}

	public void setFlagIscrittoCpi(Boolean flagIscrittoCpi) {
		this.flagIscrittoCpi = flagIscrittoCpi;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "dt_fine_ultimo_contratto", length = 13)
	public Date getDtFineUltimoContratto() {
		return this.dtFineUltimoContratto;
	}

	public void setDtFineUltimoContratto(Date dtFineUltimoContratto) {
		this.dtFineUltimoContratto = dtFineUltimoContratto;
	}

	@Column(name = "targa_cpi_incaricato", length = 2)
	public String getTargaCPIincaricato() {
		return targaCPIincaricato;
	}

	public void setTargaCPIincaricato(String targaCPIincaricato) {
		this.targaCPIincaricato = targaCPIincaricato;
	}

	@Type(type = "yes_no")
	@Column(name = "flg_separata_inps", length = 1)
	public Boolean getFlgSeparataInps() {
		return flgSeparataInps;
	}

	public void setFlgSeparataInps(Boolean flgSeparataInps) {
		this.flgSeparataInps = flgSeparataInps;
	}

	@Transient
	public boolean isPartitaIva() {
		return ConstantsSingleton.DeTipoConsulenza.PARTITA_IVA.equals(deTipoConsulenza.getCodTipoConsulente());
	}

	@Transient
	public boolean isAtipico() {
		return ConstantsSingleton.DeTipoConsulenza.ATIPICO.equals(deTipoConsulenza.getCodTipoConsulente());
	}

}