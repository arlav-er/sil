<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="0820c0dd-a768-43af-b173-69bc3bca46d6" activeEnvironment="Default" name="TEST_YG_SET_STATO_ADESIONE_GROOVY" resourceRoot="" soapui-version="5.5.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:WsdlInterface" id="4930cf8a-128b-4719-85bb-502698552d33" wsaVersion="NONE" name="servizicoapWSSoapBinding" type="wsdl" bindingName="{http://servizi.lavoro.gov.it/servizicoap}servizicoapWSSoapBinding" soapVersion="1_1" anonymous="optional" definition="file:/media/vincenzo/Data/Documenti_lavoro/Progetti/Pubblica%20Amministrazione/SIL/Documenti%20vari/Dcoumenti_ministeriali_Stefania/Flusso-STATO-ADESIONE-YG/StatoAdesione.AllegatiDecreto/Regole%20di%20Trasmissione/WS_YG_SetStatoAdesione_1_0.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/media/vincenzo/Data/Documenti_lavoro/Progetti/Pubblica%20Amministrazione/SIL/Documenti%20vari/Dcoumenti_ministeriali_Stefania/Flusso-STATO-ADESIONE-YG/StatoAdesione.AllegatiDecreto/Regole%20di%20Trasmissione/WS_YG_SetStatoAdesione_1_0.wsdl"><con:part><con:url>file:/media/vincenzo/Data/Documenti_lavoro/Progetti/Pubblica%20Amministrazione/SIL/Documenti%20vari/Dcoumenti_ministeriali_Stefania/Flusso-STATO-ADESIONE-YG/StatoAdesione.AllegatiDecreto/Regole%20di%20Trasmissione/WS_YG_SetStatoAdesione_1_0.wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="servizicoap" targetNamespace="http://servizi.lavoro.gov.it/servizicoap" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:intf="http://servizi.lavoro.gov.it/servizicoap" xmlns:impl="http://servizi.lavoro.gov.it/servizicoap" xmlns:types="http://servizi.lavoro.gov.it/servizicoap/types" xmlns:apachesoap="http://xml.apache.org/xml-soap">
  <wsdl:types>
    <xsd:schema elementFormDefault="qualified" targetNamespace="http://servizi.lavoro.gov.it/servizicoap/types">
      <xsd:complexType name="richiesta_setStatoAdesioneYG_Type">
        <xsd:sequence>
          <xsd:element name="DatiStatoAdesione" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo>http://servizi.lavoro.gov.it/servizicoap/types/Rev001 - SetStatoAdesione - Allegato B - Formato trasmissione.xsd</xsd:appinfo>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="setStatoAdesioneYG" type="types:richiesta_setStatoAdesioneYG_Type"/>
      <xsd:complexType name="risposta_setStatoAdesioneYG_Type">
        <xsd:sequence>
          <xsd:element name="Esito" minOccurs="1">
            <xsd:simpleType>
              <xsd:restriction base="xsd:string">
                <xsd:enumeration value="OK"/>
                <xsd:enumeration value="KO"/>
              </xsd:restriction>
            </xsd:simpleType>
          </xsd:element>
          <xsd:element name="MessaggioErrore" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="risposta_setStatoAdesioneYG" type="types:risposta_setStatoAdesioneYG_Type"/>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="risposta_setStatoAdesioneYG_Msg">
    <wsdl:part name="parameters" element="types:risposta_setStatoAdesioneYG"/>
  </wsdl:message>
  <wsdl:message name="richiesta_setStatoAdesioneYG_Msg">
    <wsdl:part name="parameters" element="types:setStatoAdesioneYG"/>
  </wsdl:message>
  <wsdl:portType name="servizicoapWS">
    <wsdl:operation name="setStatoAdesioneYG">
      <wsdl:input message="intf:richiesta_setStatoAdesioneYG_Msg"/>
      <wsdl:output message="intf:risposta_setStatoAdesioneYG_Msg"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="servizicoapWSSoapBinding" type="intf:servizicoapWS">
    <wsdlsoap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="setStatoAdesioneYG">
      <wsdlsoap:operation/>
      <wsdl:input>
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="servizicoapWSService">
    <wsdl:port name="servizicoapWS" binding="intf:servizicoapWSSoapBinding">
      <wsdlsoap:address location=""/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://vincenzo-LIFEBOOK-A555:8081/mockservizicoapWSSoapBinding</con:endpoint></con:endpoints><con:operation id="449b2d7c-285b-40d3-84aa-8f1514d09b7f" isOneWay="false" action="" name="setStatoAdesioneYG" bindingOperationName="setStatoAdesioneYG" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="e7da3669-f532-4c4a-9301-2170a9224ab8" name="Req_local"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8081/YG_SET_mockservizicoapWSSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns2="http://servizi.lavoro.gov.it/servizicoap/types">
   <soapenv:Header/>
   <soapenv:Body>
      <ns2:setStatoAdesioneYG>
         <ns2:DatiStatoAdesione>
<![CDATA[<?xml version="1.0" encoding="utf-8"?>
  <DatiStatoAdesione xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <CodiceFiscale>TSTGCM96D28H199F</CodiceFiscale>
  <DataAdesione>2018-03-01</DataAdesione>
  <RegioneAdesione>01</RegioneAdesione>
  <StatoAdesione>A</StatoAdesione>
  </DatiStatoAdesione>  
]]]]>><![CDATA[    
         </ns2:DatiStatoAdesione>
      </ns2:setStatoAdesioneYG>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://servizi.lavoro.gov.it/servizicoap/servizicoapWS/setStatoAdesioneYGRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="00510c50-57e2-4b54-b0c3-498eeaf6ee73" name="Req_SIL2"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://sil2.westeurope.cloudapp.azure.com:18083/YG_SET_mockservizicoapWSSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns2="http://servizi.lavoro.gov.it/servizicoap/types">
   <soapenv:Header/>
   <soapenv:Body>
      <ns2:setStatoAdesioneYG>
         <ns2:DatiStatoAdesione>
<![CDATA[<?xml version="1.0" encoding="utf-8"?>
  <DatiStatoAdesione xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <CodiceFiscale>GMBCHR98B41H501T</CodiceFiscale>
  <DataAdesione>2019-10-09</DataAdesione>
  <RegioneAdesione>08</RegioneAdesione>
  <StatoAdesione>T</StatoAdesione>  
  </DatiStatoAdesione>
]]]]>><![CDATA[          
         </ns2:DatiStatoAdesione>
      </ns2:setStatoAdesioneYG>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://servizi.lavoro.gov.it/servizicoap/servizicoapWS/setStatoAdesioneYGRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:mockService id="4c05f02b-c227-49f1-9862-f2a7e22adf24" port="8081" path="/YG_SET_mockservizicoapWSSoapBinding" host="vincenzo-LIFEBOOK-A555" name="servizicoapWSSoapBinding MockService"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.mock.WsdlMockService@require-soap-action">false</con:setting></con:settings><con:startScript/><con:stopScript/><con:properties/><con:onRequestScript>import groovy.sql.Sql

def dbtype = context.expand('${#Project#dbtype}')
def sqlconnection = null

if (dbtype == 'oracle') {
	// connetto il DB oracle
	log.info "Connessione al database oracle in corso..."
	com.eviware.soapui.support.GroovyUtils.registerJdbcDriver("oracle.jdbc.driver.OracleDriver")
	sqlconnection = Sql.newInstance(
		"jdbc:oracle:thin:@"+context.expand('${#Project#dbhost}')+":"+context.expand('${#Project#dbport}')+":"+context.expand('${#Project#dbname}'), 
		context.expand('${#Project#dbusername}'),
		context.expand('${#Project#dbpassword}'), 
		"oracle.jdbc.driver.OracleDriver"
		)
} else if (dbtype == 'postgres') {
	// connetto il DB postgres
	log.info "Connessione al database postgres in corso..."
	com.eviware.soapui.support.GroovyUtils.registerJdbcDriver("org.postgresql.Driver")
	sqlconnection = Sql.newInstance(
		"jdbc:postgresql://"+context.expand('${#Project#dbhost}')+":"+context.expand('${#Project#dbport}')+"/"+context.expand('${#Project#dbname}'), 
		context.expand('${#Project#dbusername}'),
		context.expand('${#Project#dbpassword}'), 
		"org.postgresql.Driver"
		)
} else {
	log.info "Definire la propriet√† 'dbtype'. Valori possibili: oracle o postgres";
	return;
}
log.info "Connesso al database " + dbtype
context.dbConnection = sqlconnection
</con:onRequestScript><con:afterRequestScript>import groovy.sql.Sql

// disconnetto il DB
if( context.dbConnection != null ) {
	log.info "Chiusura connessione al database"
	context.dbConnection.close()
}</con:afterRequestScript><con:mockOperation name="setStatoAdesioneYG" id="ee39a7f6-787b-4899-bb1e-601c9f6880e9" interface="servizicoapWSSoapBinding" operation="setStatoAdesioneYG"><con:settings/><con:defaultResponse>Resp_OK</con:defaultResponse><con:dispatchStyle>SCRIPT</con:dispatchStyle><con:dispatchPath>import groovy.sql.Sql
def holder = new com.eviware.soapui.support.XmlHolder( mockRequest.requestContent )

log.info "entro in setStatoAdesioneYG"

def r = Math.random()
if( r &lt; 0.34 )
   {
   // non √® previsto alcun limite di invocazione
   // non entro mai in questo ramo
   log.info "esco da setStatoAdesioneYG"
   return "Resp_err_X001"
   }
else
{
   // altrimenti elaboro la richiesta	
   // prelevo il codice fiscale dalla richiesta
   def codicefiscalecontainer = holder["//*:DatiStatoAdesione"].toString()
   def indexofstart = codicefiscalecontainer.indexOf("&lt;CodiceFiscale>", 1)
   def indexofend = codicefiscalecontainer.indexOf("&lt;/CodiceFiscale>", 1)
   def codicefiscale = codicefiscalecontainer.substring(indexofstart+15,indexofend)
   log.info "codicefiscale:" + codicefiscale

   // prelevo lo statoadeione dalla richiesta
   indexofstart = codicefiscalecontainer.indexOf("&lt;StatoAdesione>", 1)
   indexofend = codicefiscalecontainer.indexOf("&lt;/StatoAdesione>", 1)
   def statoadesione = codicefiscalecontainer.substring(indexofstart+15,indexofend)
   log.info "statoadesione:" + statoadesione   

//      if (codicefiscale == "DGRFNC01H41H501N")
//     {
//     return "Resp_err_X001"
//     }

   if (!context.dbConnection) {
   	log.info "Connessione non disponibile. Verificare la connessione nello script di avvio."
   	return;
   }
   
   // eseguo la query sulla tabella adesione_yg con colonne [codicefiscale,risposta]
   def row = context.dbConnection.firstRow("select statoadesione from adesione_yg where codicefiscale =?", [codicefiscale])
   if( row != null )
   {
	// La query restituisce risultati

     // prelevo lo stato ANPAL
     def statoadesioneanpal = row.statoadesione.toString();
     log.info "statoadesioneanpal:" + statoadesioneanpal
     def flusso_ok = "si";

     // logiche di controllo del workflow 
     if ( statoadesioneanpal.equals('A'))
        {
        if ( statoadesione.equals('X') ||
             statoadesione.equals('C') ||
             statoadesione.equals('P') ||
             statoadesione.equals('N') ||
             statoadesione.equals('U') ||
             statoadesione.equals('D')
           )
           flusso_ok = "si"
        else
           flusso_ok = "no"
        }

     if ( statoadesioneanpal.equals('X') ||
          statoadesioneanpal.equals('C') ||
          statoadesioneanpal.equals('F') ||
          statoadesioneanpal.equals('R') ||
          statoadesioneanpal.equals('U') ||
          statoadesioneanpal.equals('D')
        )
          flusso_ok = "no"

     if ( statoadesioneanpal.equals('P'))
        {
        if ( statoadesione.equals('R') ||
             statoadesione.equals('C') ||
             statoadesione.equals('T') 
           )
           flusso_ok = "si"
        else
           flusso_ok = "no"
        }        

     if ( statoadesioneanpal.equals('T'))
        {
        if ( statoadesione.equals('R') ||
             statoadesione.equals('C') ||
             statoadesione.equals('F') 
           )
           flusso_ok = "si"
        else
           flusso_ok = "no"
        }   

     if (flusso_ok.equals("si"))
     {
     	// transizione di stati ammessa, eseguo update o delete a seconda dei casi
     	try {
               if (statoadesione.equals('X') ||
                   statoadesione.equals('C') ||
                   statoadesione.equals('F') ||
                   statoadesione.equals('R') ||
                   statoadesione.equals('U') ||
                   statoadesione.equals('D')
                   )
                  context.dbConnection.execute("delete from adesione_yg where codicefiscale=?", [codicefiscale])
               else     
     		   context.dbConnection.execute("update adesione_yg set statoadesione = ? where codicefiscale=?", [statoadesione,codicefiscale])
               
               log.info "esco da setStatoAdesioneYG (transizione ammessa)"
               return "Resp_from_DB"
     	} 
     	catch (Exception ex) { 
   	        // update in errore
            log.info "esco da setStatoAdesioneYG (errore durante update/delete)"
             return "Resp_error_other" 
       }
     }
     else 
     { 
       // transizione non ammessa
       log.info "esco da setStatoAdesioneYG (transizione non ammessa)"
       return "Resp_error_transizione" 	
     }
   }
   else 
   {
	// La query non restituisce risultati
     log.info "esco da setStatoAdesioneYG (adesione non trovata)"
	return "Resp_error_other"
   }

}





</con:dispatchPath><con:response name="Resp_OK" id="3efd0e2e-ef4c-426b-8ad6-a8f592d5af1c" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://servizi.lavoro.gov.it/servizicoap/types">
   <soapenv:Header/>
   <soapenv:Body>
      <typ:risposta_setStatoAdesioneYG>
         <typ:Esito>OK</typ:Esito>
         <typ:MessaggioErrore>Invio effettuato correttamente</typ:MessaggioErrore>
      </typ:risposta_setStatoAdesioneYG>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://servizi.lavoro.gov.it/servizicoap/servizicoapWS/setStatoAdesioneYGResponse"/></con:response><con:response name="Resp_error_other" id="3efd0e2e-ef4c-426b-8ad6-a8f592d5af1c" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://servizi.lavoro.gov.it/servizicoap/types">
   <soapenv:Header/>
   <soapenv:Body>
      <typ:risposta_setStatoAdesioneYG>
         <typ:Esito>KO</typ:Esito>
         <typ:MessaggioErrore>Porca quella miseria...</typ:MessaggioErrore>
      </typ:risposta_setStatoAdesioneYG>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://servizi.lavoro.gov.it/servizicoap/servizicoapWS/setStatoAdesioneYGResponse"/></con:response><con:response name="Resp_err_X001" id="3efd0e2e-ef4c-426b-8ad6-a8f592d5af1c" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://servizi.lavoro.gov.it/servizicoap/types">
   <soapenv:Header/>
   <soapenv:Body>
      <typ:risposta_setStatoAdesioneYG>
         <typ:Esito>X001</typ:Esito>
         <typ:MessaggioErrore>Limite invocazioni raggiunto</typ:MessaggioErrore>
      </typ:risposta_setStatoAdesioneYG>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://servizi.lavoro.gov.it/servizicoap/servizicoapWS/setStatoAdesioneYGResponse"/></con:response><con:response name="Resp_from_DB" id="3efd0e2e-ef4c-426b-8ad6-a8f592d5af1c" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://servizi.lavoro.gov.it/servizicoap/types">
   <soapenv:Header/>
   <soapenv:Body>
      <typ:risposta_setStatoAdesioneYG>
         <typ:Esito>OK</typ:Esito>
         <typ:MessaggioErrore>Cambio stato adesione eseguito correttamente</typ:MessaggioErrore>
      </typ:risposta_setStatoAdesioneYG>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://servizi.lavoro.gov.it/servizicoap/servizicoapWS/setStatoAdesioneYGResponse"/></con:response><con:response name="Resp_error_transizione" id="3efd0e2e-ef4c-426b-8ad6-a8f592d5af1c" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://servizi.lavoro.gov.it/servizicoap/types">
   <soapenv:Header/>
   <soapenv:Body>
      <typ:risposta_setStatoAdesioneYG>
         <typ:Esito>KO</typ:Esito>
         <typ:MessaggioErrore>Stato inviato non coerente con lo stato attuale dell'adesione</typ:MessaggioErrore>
      </typ:risposta_setStatoAdesioneYG>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://servizi.lavoro.gov.it/servizicoap/servizicoapWS/setStatoAdesioneYGResponse"/></con:response><con:dispatchConfig/></con:mockOperation></con:mockService><con:properties><con:property><con:name>dbhost</con:name><con:value>migrazione-sil-oracle.westeurope.cloudapp.azure.com</con:value></con:property><con:property><con:name>dbname</con:name><con:value>ORAMIG12</con:value></con:property><con:property><con:name>dbusername</con:name><con:value>ws_stub</con:value></con:property><con:property><con:name>dbpassword</con:name><con:value>test</con:value></con:property><con:property><con:name>dbport</con:name><con:value>1521</con:value></con:property><con:property><con:name>dbtype</con:name><con:value>oracle</con:value></con:property></con:properties><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>