<!-- Dati Amministrativi OBBLIGO FORMATIVO -->
<STATEMENT  name="GET_OBBLIGO_FORMATIVO"
        query="SELECT obb.cdnlavoratore, obb.flgobbligoscolastico, obb.flgobbligoformativo,
       obb.codmodalitaassolv,
       de_fo_modalita_assolv.strdescrizione AS descrizione, obb.strnote,
       obb.cdnutins, TO_CHAR (obb.dtmins, 'dd/mm/yyyy HH24:MI') dtmins,
       obb.cdnutmod, TO_CHAR (obb.dtmmod, 'dd/mm/yyyy HH24:MI') dtmmod,
       obb.numkloobbligoform, TO_CHAR (lav.datnasc, 'dd/mm/yyyy') AS datnasc,
       obb.codmotivoarchiviazione AS codmotivoarchiviazione
  FROM am_obbligo_formativo obb, de_fo_modalita_assolv, an_lavoratore lav
 WHERE obb.cdnlavoratore = ?
   AND obb.codmodalitaassolv = de_fo_modalita_assolv.codmodalitaassolv(+)
   AND lav.cdnlavoratore = obb.cdnlavoratore"/> 


<STATEMENT  name="GET_MODALITA_ASSOLV"
        query="SELECT codmodalitaassolv CODICE,
                      STRDESCRIZIONE ||
                          DECODE(SYSDATE, GREATEST(SYSDATE, DATFINEVAL),' (scaduto)',
                                          LEAST(SYSDATE, DATINIZIOVAL), ' (scaduto)', 
                                          ''
                                 ) AS DESCRIZIONE,
                      datinizioval, 
                      datfineval 
               FROM DE_FO_MODALITA_ASSOLV ORDER BY STRDESCRIZIONE"/>
               
<STATEMENT  name="GET_MOTIVO_ARCHIVIAZIONE"
        query="SELECT codmotivoarchiviazione codice, strdescrizione descrizione
  FROM de_motivo_archiviazione d
   WHERE datfineval &gt;= SYSDATE AND datinizioval &lt;= SYSDATE
ORDER BY strdescrizione"/>


<STATEMENT  name="INSERT_AM_OBBLIGO_FORMATIVO"
        query="INSERT INTO AM_OBBLIGO_FORMATIVO 
                      ( CDNLAVORATORE,
                        FLGOBBLIGOSCOLASTICO,
                        FLGOBBLIGOFORMATIVO,
                        CODMODALITAASSOLV,
                        STRNOTE,
                        CDNUTINS,
                        CDNUTMOD,
                        CODMOTIVOARCHIVIAZIONE,
                        DTMINS ,
                        DTMMOD
                      )
               VALUES (?,?,?,?,?,?,?,?,
                       SYSDATE,
                       SYSDATE
                      )"/>

<STATEMENT  name="SAVE_AM_OBBLIGO_FORMATIVO"
        query="UPDATE AM_OBBLIGO_FORMATIVO 
                      SET   FLGOBBLIGOSCOLASTICO = ?,
                            FLGOBBLIGOFORMATIVO  = ?,
                            CODMODALITAASSOLV    = ?,
                            STRNOTE              = ?,
                            DTMMOD               = SYSDATE,
                            NUMKLOOBBLIGOFORM    = ?,
                            CDNUTMOD			 = ?,
                            CODMOTIVOARCHIVIAZIONE    = ?
                      WHERE CDNLAVORATORE        = ?"/>


<!-- Dati Amministrativi PERMESSO DI SOGGIORNO -->
<STATEMENT  name="GET_PERM_SOGG"   query="
SELECT am_ex_perm_sogg.prgpermsogg,
       TO_CHAR (datrichiesta, 'dd/mm/yyyy') datrichiesta,
       TO_CHAR (datscadenza, 'dd/mm/yyyy') datscadenza, 
       am_ex_perm_sogg.codstatus, de_status_straniero.strdescrizione statusDescr,
       am_ex_perm_sogg.codmotivoril,
       de_ex_motivo_ril.strdescrizione AS descrizionemot, codstatorichiesta,
       de_stato_atto.strdescrizione AS descrizionerich, strnote, cdnutins,
       am_ex_perm_sogg.STRNUMDOCUMENTO,
       TO_CHAR (dtmins, 'dd/mm/yyyy HH24:MI') dtmins, cdnutmod,
       TO_CHAR (dtmmod, 'dd/mm/yyyy HH24:MI') dtmmod, numklopermsogg
  FROM am_ex_perm_sogg, de_ex_motivo_ril, de_stato_atto, de_status_straniero
 WHERE am_ex_perm_sogg.codmotivoril = de_ex_motivo_ril.codmotivoril(+)
   AND am_ex_perm_sogg.codstatus = de_status_straniero.codstatus(+)
   AND am_ex_perm_sogg.codstatorichiesta = de_stato_atto.codstatoatto(+)
   AND CDNLAVORATORE = ? 
   AND (
   	    ((am_ex_perm_sogg.codstatus not in ('2','5'))
   	     AND NVL (am_ex_perm_sogg.datscadenza, TO_DATE ('31/12/2100', 'dd/mm/yyyy')) &gt;= TRUNC(SYSDATE)
   	     AND am_ex_perm_sogg.datfine is null
   	    ) OR
     	( (am_ex_perm_sogg.codstatus in ('2','5'))
     	 AND NVL (am_ex_perm_sogg.datscadenza, TO_DATE ('31/12/2100', 'dd/mm/yyyy')) &gt; TRUNC(SYSDATE)
     	 AND am_ex_perm_sogg.datfine is null
     	)
       )
"/>


<STATEMENT
    name="GET_SPEC_PERM_SOGG"
    query="SELECT AM_EX_PERM_SOGG.PRGPERMSOGG, 
                  AM_EX_PERM_SOGG.CDNLAVORATORE,
                  to_char(datRichiesta,'dd/mm/yyyy') datRichiesta,
                  to_char(datScadenza ,'dd/mm/yyyy') datScadenza,
                  to_char(datFine ,'dd/mm/yyyy') datFine,
                  AM_EX_PERM_SOGG.CODSTATUS,
                  DE_STATUS_STRANIERO.STRDESCRIZIONE statusDescr,
                  AM_EX_PERM_SOGG.CODMOTIVORIL,
                  DE_EX_MOTIVO_RIL.STRDESCRIZIONE AS DESCRIZIONEMOT,
                  codstatorichiesta,
                  DE_STATO_ATTO.STRDESCRIZIONE AS DESCRIZIONERICH,
                  strNote,
                  AM_EX_PERM_SOGG.STRNUMDOCUMENTO,
                  cdnutins,
                  to_char(dtmins,'dd/mm/yyyy') dtmins,
                  cdnutmod,
                  to_char(dtmmod,'dd/mm/yyyy') dtmmod,
                  numKloPermSogg
            FROM  AM_EX_PERM_SOGG,DE_EX_MOTIVO_RIL, DE_STATO_ATTO, DE_STATUS_STRANIERO
           WHERE (AM_EX_PERM_SOGG.CODMOTIVORIL = DE_EX_MOTIVO_RIL.CODMOTIVORIL(+))   AND
           		 (AM_EX_PERM_SOGG.CODSTATUS = DE_STATUS_STRANIERO.CODSTATUS(+)) AND
           		 (AM_EX_PERM_SOGG.CODSTATORICHIESTA = DE_STATO_ATTO.CODSTATOATTO(+)) AND
                  AM_EX_PERM_SOGG.PRGPERMSOGG = ?"/>


<STATEMENT
    name="AMSTR_HAS_STOR_PERM_SOGG"
    query="SELECT EX.PRGPERMSOGG
		   FROM am_ex_perm_sogg ex
		   WHERE ex.cdnLavoratore=?
		   AND (
	   	    ((ex.codstatus not in (2,5)
	   	     AND NVL (ex.datscadenza, TO_DATE ('31/12/2100', 'dd/mm/yyyy')) &lt; TRUNC(SYSDATE))
	   	     OR nvl(ex.DATFINE,to_date('31/12/2100','dd/mm/yyyy')) &lt;= sysdate
	   	    ) OR
	     	((ex.codstatus in (2,5)
	     	 AND NVL (ex.datscadenza, TO_DATE ('31/12/2100', 'dd/mm/yyyy')) &lt;= TRUNC(SYSDATE))
	     	 OR nvl(ex.DATFINE,to_date('31/12/2100','dd/mm/yyyy')) &lt;= sysdate
	     	)
	       )"/>



<STATEMENT  name="GET_MOTIVO_RIL"
        query="SELECT codmotivoril CODICE,
                      STRDESCRIZIONE ||
                          DECODE(SYSDATE, GREATEST(SYSDATE, DATFINEVAL),' (scaduto)',
                                          LEAST(SYSDATE, DATINIZIOVAL), ' (scaduto)', 
                                          ''
                                 ) AS DESCRIZIONE
               FROM DE_EX_MOTIVO_RIL ORDER BY STRDESCRIZIONE"/>


<STATEMENT  name="GET_COD_STATUS"
        query="SELECT CODSTATUS CODICE,        
                      STRDESCRIZIONE ||
                          DECODE(SYSDATE, GREATEST(SYSDATE, DATFINEVAL),' (scaduto)',
                                          LEAST(SYSDATE, DATINIZIOVAL), ' (scaduto)', 
                                          ''
                                 ) as DESCRIZIONE                      
               FROM DE_STATUS_STRANIERO ORDER BY STRDESCRIZIONE"/>

<STATEMENT  name="GET_STATO_RIC"
        query="SELECT DE_STATO_ATTO.CODSTATOATTO CODICE,
                      DE_STATO_ATTO.STRDESCRIZIONE ||
                          DECODE(SYSDATE, GREATEST(SYSDATE, DATFINEVAL),' (scaduto)',
                                          LEAST(SYSDATE, DATINIZIOVAL), ' (scaduto)', 
                                          ''
                                 ) AS DESCRIZIONE
                  FROM DE_STATO_ATTO, DE_STATO_ATTO_LST_TAB 
                 WHERE DE_STATO_ATTO_LST_TAB.CODLSTTAB    = &apos;AM_EX_PS&apos; AND
					            DE_STATO_ATTO_LST_TAB.CODSTATOATTO = DE_STATO_ATTO.CODSTATOATTO"/>

<STATEMENT name="INSERT_AM_EX_PERM_SOGG"
        query="INSERT INTO AM_EX_PERM_SOGG 
                          (AM_EX_PERM_SOGG.PRGPERMSOGG,
                           AM_EX_PERM_SOGG.CDNLAVORATORE,
                           AM_EX_PERM_SOGG.CODMOTIVORIL,
                           AM_EX_PERM_SOGG.CODSTATUS,
                           AM_EX_PERM_SOGG.CODSTATORICHIESTA,
						   AM_EX_PERM_SOGG.DATRICHIESTA,
                           AM_EX_PERM_SOGG.DATSCADENZA,
                           AM_EX_PERM_SOGG.STRNOTE,
                           AM_EX_PERM_SOGG.DTMINS,
                           AM_EX_PERM_SOGG.DTMMOD,
                           AM_EX_PERM_SOGG.CDNUTINS,
                           AM_EX_PERM_SOGG.CDNUTMOD,

                           AM_EX_PERM_SOGG.STRNUMDOCUMENTO
                           )
                  VALUES ( ?, 
                           ?,?,?,?,
                           TO_DATE(?,'DD/MM/YYYY'),
                           TO_DATE(?,'DD/MM/YYYY'),
                           ?, SYSDATE, SYSDATE,
                           ?,?,?)"/>


<STATEMENT  name="SAVE_AM_EX_PERM_SOGG"
        query="UPDATE AM_EX_PERM_SOGG 
                  SET datRichiesta  = TO_DATE(?,'DD/MM/YYYY'),

                      datScadenza   = TO_DATE(?,'DD/MM/YYYY'),
                      codMotivoRil  = ?,
                      codStatus		= ?,
                      codStatoRichiesta = ?,
                      strNote        = ?,
                      cdnUtMod		=?,
                      dtmmod		= SYSDATE,                      
                      numKloPermSogg = ?,
                      strNumDocumento = ?
                WHERE PRGPERMSOGG = ?"/>


<STATEMENT
  name ="AMSTR_DEL_PERM_SOGG"
  query="DELETE FROM AM_EX_PERM_SOGG WHERE AM_EX_PERM_SOGG.PRGPERMSOGG = ?"/>

<!-- Dati Amministrativi STATO OCCUPAZIONALE -->
<!-- E' stato inserito un case sul calcolo dei mesi di anzianita e sospensione, 
     in modo da eseguirli solo se si tratta di un soggetto che è raggruppamento
     come Disoccupano o Inoccupato (modifica di ottimizzazione query con database
     del porting)-->
<STATEMENT
        name ="GET_STATO_OCCUPAZ"
        query="
SELECT   am_stato_occupaz.prgstatooccupaz, am_stato_occupaz.codstatooccupaz,
         am_stato_occupaz.CODMONOPROVENIENZA,
         de_stato_occupaz.strdescrizione
                  || decode(de_stato_occupaz_ragg.CODSTATOOCCUPAZRAGG,'D',PG_INFO_RIASS.stato_occ_mobil(?),'I',PG_INFO_RIASS.stato_occ_mobil(?),'')
               AS descrizionestato,
         de_stato_occupaz_ragg.codstatooccupazragg,
         am_stato_occupaz.codcategoria181,
         TO_CHAR (am_stato_occupaz.datinizio, 'DD/MM/YYYY') datinizio,
         TO_CHAR (am_stato_occupaz.datfine, 'DD/MM/YYYY') datfine,
         am_stato_occupaz.flgindennizzato, am_stato_occupaz.flgpensionato,

         TO_CHAR (am_stato_occupaz.datanzianitadisoc,
                  'DD/MM/YYYY'
                 ) datanzianitadisoc,
         am_stato_occupaz.strnote,
         TO_CHAR (am_stato_occupaz.dtmins, 'dd/mm/yyyy HH24:MI') dtmins,
         TO_CHAR (am_stato_occupaz.dtmmod, 'dd/mm/yyyy HH24:MI') dtmmod,
         am_stato_occupaz.cdnutins, am_stato_occupaz.cdnutmod,
         am_stato_occupaz.numreddito, am_stato_occupaz.strnumatto,
         TO_CHAR (am_stato_occupaz.datatto, 'DD/MM/YYYY') datatto,
         am_stato_occupaz.codstatoatto,
         de_stato_atto.strdescrizione AS descrizioneatto,
         TO_CHAR (am_stato_occupaz.datrichrevisione,
                  'DD/MM/YYYY'
                 ) datrichrevisione,
         TO_CHAR (am_stato_occupaz.datricorsogiurisdiz,
                  'DD/MM/YYYY'
                 ) datricorsogiurisdiz,
         am_stato_occupaz.prgstatooccupazprec,
         am_stato_occupaz.numklostatooccupaz,
         PG_MOVIMENTI.MesiSospDecretoFornero2014(?, NULL, NULL) mesiSospFornero2014,
         case 
              when de_stato_occupaz_ragg.CODSTATOOCCUPAZRAGG in ('D','I')
              then MESISOSPPRECFORNERO(?, am_stato_occupaz.datcalcolomesisosp, null)
              when de_stato_occupaz_ragg.CODSTATOOCCUPAZRAGG not in ('D','I') 
              then 0
         end
         NUMMESISOSP,
         case 
    		when de_stato_occupaz_ragg.CODSTATOOCCUPAZRAGG in ('D','I')
        	   then
               (to_number(
							(to_char(sysdate,'yyyy')
                             - to_char(am_stato_occupaz.datcalcoloanzianita,'yyyy')) * 12
	  						 + to_char(sysdate,'mm')
		                    - to_char(am_stato_occupaz.datcalcoloanzianita,'mm') + 1
						+ (case 
	   	 	  				   when ((to_char(sysdate,'yyyy') 
	                                  - to_char(am_stato_occupaz.datcalcoloanzianita,'yyyy')) * 12
	   		  	   			   	      + to_char(sysdate,'mm') 
		                              - to_char(am_stato_occupaz.datcalcoloanzianita,'mm') + 1) &gt; 1
							   then	  
	   						   		   -(case when
										 trunc(am_stato_occupaz.datcalcoloanzianita) &gt;= (select trunc(dat150) from ts_generale where prggenerale=1) 
											then 2 - (trunc( (
												(case 
												  when to_number(to_char(LAST_DAY(to_date('01/' || to_char(sysdate, 'mm') || '/' || to_char(sysdate, 'yyyy'), 'dd/mm/yyyy')), 'dd')) =
													   to_number(to_char(sysdate, 'dd'))
												  then 30
												  else to_number(to_char(sysdate, 'dd'))
												end) + (30 - 
														(case
														  when to_number(to_char(am_stato_occupaz.datcalcoloanzianita, 'dd')) &lt; 31 
														  then to_number(to_char(am_stato_occupaz.datcalcoloanzianita, 'dd'))
														  else 30
														end) + 1
													  )) /30))
										 when
										 (30 - to_char(am_stato_occupaz.datcalcoloanzianita,'dd') + 1) &lt; 16
										 then 1
										 when
										 (30 - to_char(am_stato_occupaz.datcalcoloanzianita,'dd') + 1) &gt;= 15
										 then 0
								   	 end)
								   	 -(case when
										  trunc(am_stato_occupaz.datcalcoloanzianita) &lt; (select trunc(dat150) from ts_generale where prggenerale=1) and to_char(sysdate,'dd') &lt; 16
										  then 1
										  when
										  trunc(am_stato_occupaz.datcalcoloanzianita) &lt; (select trunc(dat150) from ts_generale where prggenerale=1) and to_char(sysdate,'dd') &gt;= 15
										  then 0
										  else 0
									 end)
			 				  when
			 	  			  	  ((to_char(sysdate,'yyyy') 
	                                - to_char(am_stato_occupaz.datcalcoloanzianita,'yyyy')) * 12
	   		  	  			  	  	+ to_char(sysdate,'mm') 
	                                - to_char(am_stato_occupaz.datcalcoloanzianita,'mm') + 1) = 1
			 				  then
			 				  	  -(case when
										trunc(am_stato_occupaz.datcalcoloanzianita) &gt;= (select trunc(dat150) from ts_generale where prggenerale=1) and 
										 (to_number(to_char(sysdate,'dd')) - to_number(to_char(am_stato_occupaz.datcalcoloanzianita,'dd')) + 1) =
										 to_number(to_char(LAST_DAY(to_date('01/' || to_char(sysdate, 'mm') || '/' || to_char(sysdate, 'yyyy'), 'dd/mm/yyyy')), 'dd'))
										 then 0
										 when
										 trunc(am_stato_occupaz.datcalcoloanzianita) &gt;= (select trunc(dat150) from ts_generale where prggenerale=1) and 
										 (to_number(to_char(sysdate,'dd')) - to_number(to_char(am_stato_occupaz.datcalcoloanzianita,'dd')) + 1) &lt;&gt;
										 to_number(to_char(LAST_DAY(to_date('01/' || to_char(sysdate, 'mm') || '/' || to_char(sysdate, 'yyyy'), 'dd/mm/yyyy')), 'dd'))
										 then 1
										 when trunc(am_stato_occupaz.datcalcoloanzianita) &lt; (select trunc(dat150) from ts_generale where prggenerale=1) and
										 (to_number(to_char(sysdate,'dd')) - to_number(to_char(am_stato_occupaz.datcalcoloanzianita,'dd')) + 1) &lt; 16 
										 then 1 
										 when trunc(am_stato_occupaz.datcalcoloanzianita) &lt; (select trunc(dat150) from ts_generale where prggenerale=1) and
										 (to_number(to_char(sysdate,'dd')) - to_number(to_char(am_stato_occupaz.datcalcoloanzianita,'dd')) + 1) &gt;= 15
										 then 0
							     end)
			 				  end)))	  	
             when de_stato_occupaz_ragg.CODSTATOOCCUPAZRAGG not in ('D','I')
             then
                  0
         end
         mesi_anz,
         (case 
			when de_stato_occupaz_ragg.CODSTATOOCCUPAZRAGG in ('D','I')
			   then
					(case 
						when ((to_char(sysdate,'yyyy') 
							  - to_char(am_stato_occupaz.datcalcoloanzianita,'yyyy')) * 12
							  + to_char(sysdate,'mm') 
							  - to_char(am_stato_occupaz.datcalcoloanzianita,'mm') + 1) &gt; 1
						then	  
							   (case when
								 trunc(am_stato_occupaz.datcalcoloanzianita) &gt;= (select trunc(dat150) from ts_generale where prggenerale=1) 
									then mod(
									((case 
										  when to_number(to_char(LAST_DAY(to_date('01/' || to_char(sysdate, 'mm') || '/' || to_char(sysdate, 'yyyy'), 'dd/mm/yyyy')), 'dd')) =
											   to_number(to_char(sysdate, 'dd'))
										  then 30
										  else to_number(to_char(sysdate, 'dd'))
										end) + 
										(30 - 
											(case
											  when to_number(to_char(am_stato_occupaz.datcalcoloanzianita, 'dd')) &lt; 31 
											  then to_number(to_char(am_stato_occupaz.datcalcoloanzianita, 'dd'))
											  else 30
											end) + 1
										  )
									), 30)
								  else 0
								end)
						when
						  ((to_char(sysdate,'yyyy') 
							- to_char(am_stato_occupaz.datcalcoloanzianita,'yyyy')) * 12
							+ to_char(sysdate,'mm') 
							- to_char(am_stato_occupaz.datcalcoloanzianita,'mm') + 1) = 1
							then
								(case when
									trunc(am_stato_occupaz.datcalcoloanzianita) &gt;= (select trunc(dat150) from ts_generale where prggenerale=1) 
									  and (to_number(to_char(sysdate,'dd')) - to_number(to_char(am_stato_occupaz.datcalcoloanzianita,'dd')) + 1) =
										   to_number(to_char(LAST_DAY(to_date('01/' || to_char(sysdate, 'mm') || '/' || to_char(sysdate, 'yyyy'), 'dd/mm/yyyy')), 'dd'))
									then 0
									when
									  trunc(am_stato_occupaz.datcalcoloanzianita) &gt;= (select trunc(dat150) from ts_generale where prggenerale=1) 
									  and (to_number(to_char(sysdate,'dd')) - to_number(to_char(am_stato_occupaz.datcalcoloanzianita,'dd')) + 1) &lt;&gt;
										   to_number(to_char(LAST_DAY(to_date('01/' || to_char(sysdate, 'mm') || '/' || to_char(sysdate, 'yyyy'), 'dd/mm/yyyy')), 'dd'))
									then (to_number(to_char(sysdate,'dd')) - to_number(to_char(am_stato_occupaz.datcalcoloanzianita,'dd')) + 1)
									else 0
								end)
						else 0
					end)			  	
			 when de_stato_occupaz_ragg.CODSTATOOCCUPAZRAGG not in ('D','I')
			 then 0
		end)
		giorni_anz,
         substr(PG_MOVIMENTI.MesiRischioDisoccupazione(am_stato_occupaz.cdnLavoratore, am_stato_occupaz.datcalcoloanzianita), 1,
			instr(PG_MOVIMENTI.MesiRischioDisoccupazione(am_stato_occupaz.cdnLavoratore, am_stato_occupaz.datcalcoloanzianita), '-', 1)-1) mesi_rischio_disocc,
         PG_MOVIMENTI.MesiRischioDisoccupazione(am_stato_occupaz.cdnLavoratore, am_stato_occupaz.datcalcoloanzianita) mesi_rischio_disocc_completo,
         to_number(am_stato_occupaz.NUMANZIANITAPREC297) mesi_anz_prec, AM_STATO_OCCUPAZ.CODMONOCALCOLOANZIANITAPREC297,
         to_number(am_stato_occupaz.NUMMESISOSP) NUMMESISOSPPREC,
         to_char(am_stato_occupaz.datcalcoloanzianita,'DD/MM/YYYY') datcalcoloanzianita, 
         to_char(am_stato_occupaz.datcalcolomesisosp,'DD/MM/YYYY') datcalcolomesisosp,
         inf.codcpitit, de_cpi.strdescrizione,
         am_stato_occupaz.cdnLavoratore
    FROM am_stato_occupaz
         LEFT JOIN de_stato_atto ON (am_stato_occupaz.codstatoatto = de_stato_atto.codstatoatto)
         INNER JOIN de_stato_occupaz ON (am_stato_occupaz.codstatooccupaz = de_stato_occupaz.codstatooccupaz)
         INNER JOIN de_stato_occupaz_ragg ON (de_stato_occupaz.codstatooccupazragg = de_stato_occupaz_ragg.codstatooccupazragg)
         INNER JOIN an_lav_storia_inf inf ON (am_stato_occupaz.cdnlavoratore = inf.cdnlavoratore)
    		 left JOIN de_cpi ON (de_cpi.codcpi = inf.codcpitit)		
   WHERE am_stato_occupaz.datfine IS NULL
         AND am_stato_occupaz.cdnlavoratore = ?
         AND inf.datfine IS NULL
ORDER BY am_stato_occupaz.datinizio DESC
 "/>


<STATEMENT
        name ="GET_SPECIFICO_STATO_OCCUPAZ"
        query="SELECT AM_STATO_OCCUPAZ.PRGSTATOOCCUPAZ,
        			  AM_STATO_OCCUPAZ.CDNLAVORATORE,
	                    AM_STATO_OCCUPAZ.CODSTATOOCCUPAZ,
                      DE_STATO_OCCUPAZ.STRDESCRIZIONE AS DESCRIZIONESTATO,
                      DE_STATO_OCCUPAZ_RAGG.CODSTATOOCCUPAZRAGG,
                      AM_STATO_OCCUPAZ.CODCATEGORIA181,
                      to_char(AM_STATO_OCCUPAZ.DATINIZIO,'DD/MM/YYYY') DATINIZIO,
                      to_char(AM_STATO_OCCUPAZ.DATFINE  ,'DD/MM/YYYY') DATFINE,
                      AM_STATO_OCCUPAZ.FLGINDENNIZZATO,
                      AM_STATO_OCCUPAZ.FLGPENSIONATO,
                      to_char(AM_STATO_OCCUPAZ.DATANZIANITADISOC,'DD/MM/YYYY') DATANZIANITADISOC,
                      AM_STATO_OCCUPAZ.STRNOTE,
                      to_char(AM_STATO_OCCUPAZ.DTMINS,'DD/MM/YYYY HH24:MI') DTMINS,
                      to_char(AM_STATO_OCCUPAZ.DTMMOD,'DD/MM/YYYY HH24:MI') DTMMOD,
                      AM_STATO_OCCUPAZ.CDNUTINS,
                      AM_STATO_OCCUPAZ.CDNUTMOD,
                      AM_STATO_OCCUPAZ.NUMREDDITO,
                      AM_STATO_OCCUPAZ.STRNUMATTO, 
                      to_char(AM_STATO_OCCUPAZ.DATATTO,'DD/MM/YYYY') DATATTO,
                      AM_STATO_OCCUPAZ.CODSTATOATTO,
                      DE_STATO_ATTO.STRDESCRIZIONE AS DESCRIZIONEATTO,
                      to_char(AM_STATO_OCCUPAZ.DATRICHREVISIONE,'DD/MM/YYYY') DATRICHREVISIONE,
                      to_char(AM_STATO_OCCUPAZ.DATRICORSOGIURISDIZ,'DD/MM/YYYY') DATRICORSOGIURISDIZ,
                      AM_STATO_OCCUPAZ.PRGSTATOOCCUPAZPREC,
                      AM_STATO_OCCUPAZ.NUMKLOSTATOOCCUPAZ,
                      AM_STATO_OCCUPAZ.NUMANZIANITAPREC297, 
                      AM_STATO_OCCUPAZ.CODMONOCALCOLOANZIANITAPREC297,
		 			  to_char(AM_STATO_OCCUPAZ.DATCALCOLOANZIANITA,'DD/MM/YYYY') datcalcoloanzianita,
		 			  to_char(AM_STATO_OCCUPAZ.DATCALCOLOMESISOSP,'DD/MM/YYYY') datcalcolomesisosp,
		 			  to_number(AM_STATO_OCCUPAZ.NUMMESISOSP) NUMMESISOSPPREC,
		 			  to_number(AM_STATO_OCCUPAZ.NUMANZIANITAPREC297) mesi_anz_prec,
		 			  PG_MOVIMENTI.MesiSospDecretoFornero2014(?, AM_STATO_OCCUPAZ.DATINIZIO, AM_STATO_OCCUPAZ.prgstatooccupaz) mesiSospFornero2014,
		 			  case 
		              	when de_stato_occupaz_ragg.CODSTATOOCCUPAZRAGG in ('D','I')
		              		then MESISOSPPRECFORNERO(?, am_stato_occupaz.datcalcolomesisosp, am_stato_occupaz.datinizio)
		            	when de_stato_occupaz_ragg.CODSTATOOCCUPAZRAGG not in ('D','I') 
		              		then 0
		         	end
		         	NUMMESISOSP,
		         	case 
		    		 	   when de_stato_occupaz_ragg.CODSTATOOCCUPAZRAGG in ('D','I')
		        	   then
		               (to_number(
									(to_char(NVL (am_stato_occupaz.datfine, SYSDATE),'yyyy')
		                             - to_char(am_stato_occupaz.datcalcoloanzianita,'yyyy')) * 12
			  						 + to_char(NVL (am_stato_occupaz.datfine, SYSDATE),'mm')
				                    - to_char(am_stato_occupaz.datcalcoloanzianita,'mm') + 1
								+ (case 
			   	 	  				   when ((to_char(NVL (am_stato_occupaz.datfine, SYSDATE),'yyyy') 
			                                  - to_char(am_stato_occupaz.datcalcoloanzianita,'yyyy')) * 12
			   		  	   			   	      + to_char(NVL (am_stato_occupaz.datfine, SYSDATE),'mm') 
				                              - to_char(am_stato_occupaz.datcalcoloanzianita,'mm') + 1) &gt; 1
									   then
									   		   -(case when
												 trunc(am_stato_occupaz.datcalcoloanzianita) &gt;= (select trunc(dat150) from ts_generale where prggenerale=1) 
													then 2 - (trunc( (
														(case 
														  when to_number(to_char(LAST_DAY(to_date('01/' || to_char(NVL (am_stato_occupaz.datfine, SYSDATE), 'mm') || '/' || to_char(NVL (am_stato_occupaz.datfine, SYSDATE), 'yyyy'), 'dd/mm/yyyy')), 'dd')) =
															   to_number(to_char(NVL (am_stato_occupaz.datfine, SYSDATE), 'dd'))
														  then 30
														  else to_number(to_char(NVL (am_stato_occupaz.datfine, SYSDATE), 'dd'))
														end) + (30 - 
																(case
																  when to_number(to_char(am_stato_occupaz.datcalcoloanzianita, 'dd')) &lt; 31 
																  then to_number(to_char(am_stato_occupaz.datcalcoloanzianita, 'dd'))
																  else 30
																end) + 1
															  )) /30))
												 when
												 (30 - to_char(am_stato_occupaz.datcalcoloanzianita,'dd') + 1) &lt; 16
												 then 1
												 when
												 (30 - to_char(am_stato_occupaz.datcalcoloanzianita,'dd') + 1) &gt;= 15
												 then 0
										   end)
										   -(case when
												  trunc(am_stato_occupaz.datcalcoloanzianita) &lt; (select trunc(dat150) from ts_generale where prggenerale=1) and to_char(NVL (am_stato_occupaz.datfine, SYSDATE),'dd') &lt; 16
												  then 1
												  when
												  trunc(am_stato_occupaz.datcalcoloanzianita) &lt; (select trunc(dat150) from ts_generale where prggenerale=1) and to_char(NVL (am_stato_occupaz.datfine, SYSDATE),'dd') &gt;= 15
												  then 0
												  else 0
										   end)
					 				  when
					 	  			  	  ((to_char(NVL (am_stato_occupaz.datfine, SYSDATE),'yyyy') 
			                                - to_char(am_stato_occupaz.datcalcoloanzianita,'yyyy')) * 12
			   		  	  			  	  	+ to_char(NVL (am_stato_occupaz.datfine, SYSDATE),'mm') 
			                                - to_char(am_stato_occupaz.datcalcoloanzianita,'mm') + 1) = 1
					 				  then
					 				  	 -(case when
												trunc(am_stato_occupaz.datcalcoloanzianita) &gt;= (select trunc(dat150) from ts_generale where prggenerale=1) and 
												 (to_number(to_char(NVL (am_stato_occupaz.datfine, SYSDATE),'dd')) - to_number(to_char(am_stato_occupaz.datcalcoloanzianita,'dd')) + 1) =
												 to_number(to_char(LAST_DAY(to_date('01/' || to_char(NVL (am_stato_occupaz.datfine, SYSDATE), 'mm') || '/' || to_char(NVL (am_stato_occupaz.datfine, SYSDATE), 'yyyy'), 'dd/mm/yyyy')), 'dd'))
												 then 0
												 when
												 trunc(am_stato_occupaz.datcalcoloanzianita) &gt;= (select trunc(dat150) from ts_generale where prggenerale=1) and 
												 (to_number(to_char(NVL (am_stato_occupaz.datfine, SYSDATE),'dd')) - to_number(to_char(am_stato_occupaz.datcalcoloanzianita,'dd')) + 1) &lt;&gt;
												 to_number(to_char(LAST_DAY(to_date('01/' || to_char(NVL (am_stato_occupaz.datfine, SYSDATE), 'mm') || '/' || to_char(NVL (am_stato_occupaz.datfine, SYSDATE), 'yyyy'), 'dd/mm/yyyy')), 'dd'))
												 then 1
												 when trunc(am_stato_occupaz.datcalcoloanzianita) &lt; (select trunc(dat150) from ts_generale where prggenerale=1) and
												 (to_number(to_char(NVL (am_stato_occupaz.datfine, SYSDATE),'dd')) - to_number(to_char(am_stato_occupaz.datcalcoloanzianita,'dd')) + 1) &lt; 16 
												 then 1 
												 when trunc(am_stato_occupaz.datcalcoloanzianita) &lt; (select trunc(dat150) from ts_generale where prggenerale=1) and
												 (to_number(to_char(NVL (am_stato_occupaz.datfine, SYSDATE),'dd')) - to_number(to_char(am_stato_occupaz.datcalcoloanzianita,'dd')) + 1) &gt;= 15
												 then 0
									    end)
					 				  end)))	  	
		             	when de_stato_occupaz_ragg.CODSTATOOCCUPAZRAGG not in ('D','I')
		             	then
		                  	0
		         	end
		         	mesi_anz,
		         	(case 
						when de_stato_occupaz_ragg.CODSTATOOCCUPAZRAGG in ('D','I')
						   then
								(case 
									when ((to_char(NVL (am_stato_occupaz.datfine, SYSDATE),'yyyy') 
										  - to_char(am_stato_occupaz.datcalcoloanzianita,'yyyy')) * 12
										  + to_char(NVL (am_stato_occupaz.datfine, SYSDATE),'mm') 
										  - to_char(am_stato_occupaz.datcalcoloanzianita,'mm') + 1) &gt; 1
									then	  
										   (case when
											 trunc(am_stato_occupaz.datcalcoloanzianita) &gt;= (select trunc(dat150) from ts_generale where prggenerale=1) 
												then mod(
												((case 
													  when to_number(to_char(LAST_DAY(to_date('01/' || to_char(NVL (am_stato_occupaz.datfine, SYSDATE), 'mm') || '/' || to_char(NVL (am_stato_occupaz.datfine, SYSDATE), 'yyyy'), 'dd/mm/yyyy')), 'dd')) =
														   to_number(to_char(NVL (am_stato_occupaz.datfine, SYSDATE), 'dd'))
													  then 30
													  else to_number(to_char(NVL (am_stato_occupaz.datfine, SYSDATE), 'dd'))
													end) + 
													(30 - 
														(case
														  when to_number(to_char(am_stato_occupaz.datcalcoloanzianita, 'dd')) &lt; 31 
														  then to_number(to_char(am_stato_occupaz.datcalcoloanzianita, 'dd'))
														  else 30
														end) + 1
													  )
												), 30)
											  else 0
											end)
									when
									  ((to_char(NVL (am_stato_occupaz.datfine, SYSDATE),'yyyy') 
										- to_char(am_stato_occupaz.datcalcoloanzianita,'yyyy')) * 12
										+ to_char(NVL (am_stato_occupaz.datfine, SYSDATE),'mm') 
										- to_char(am_stato_occupaz.datcalcoloanzianita,'mm') + 1) = 1
										then
											(case when
												trunc(am_stato_occupaz.datcalcoloanzianita) &gt;= (select trunc(dat150) from ts_generale where prggenerale=1) 
												  and (to_number(to_char(NVL (am_stato_occupaz.datfine, SYSDATE),'dd')) - to_number(to_char(am_stato_occupaz.datcalcoloanzianita,'dd')) + 1) =
													   to_number(to_char(LAST_DAY(to_date('01/' || to_char(NVL (am_stato_occupaz.datfine, SYSDATE), 'mm') || '/' || to_char(NVL (am_stato_occupaz.datfine, SYSDATE), 'yyyy'), 'dd/mm/yyyy')), 'dd'))
												then 0
												when
												  trunc(am_stato_occupaz.datcalcoloanzianita) &gt;= (select trunc(dat150) from ts_generale where prggenerale=1) 
												  and (to_number(to_char(NVL (am_stato_occupaz.datfine, SYSDATE),'dd')) - to_number(to_char(am_stato_occupaz.datcalcoloanzianita,'dd')) + 1) &lt;&gt;
													   to_number(to_char(LAST_DAY(to_date('01/' || to_char(NVL (am_stato_occupaz.datfine, SYSDATE), 'mm') || '/' || to_char(NVL (am_stato_occupaz.datfine, SYSDATE), 'yyyy'), 'dd/mm/yyyy')), 'dd'))
												then (to_number(to_char(NVL (am_stato_occupaz.datfine, SYSDATE),'dd')) - to_number(to_char(am_stato_occupaz.datcalcoloanzianita,'dd')) + 1)
												else 0
											end)
									else 0
								end)			  	
						 when de_stato_occupaz_ragg.CODSTATOOCCUPAZRAGG not in ('D','I')
						 then 0
					end)
					giorni_anz,
		         	substr(PG_MOVIMENTI.MesiRischioDisoccupazione(am_stato_occupaz.cdnLavoratore, am_stato_occupaz.datcalcoloanzianita), 1,
					instr(PG_MOVIMENTI.MesiRischioDisoccupazione(am_stato_occupaz.cdnLavoratore, am_stato_occupaz.datcalcoloanzianita), '-', 1)-1) mesi_rischio_disocc,
		         	PG_MOVIMENTI.MesiRischioDisoccupazione(am_stato_occupaz.cdnLavoratore, am_stato_occupaz.datcalcoloanzianita) mesi_rischio_disocc_completo,
		 		 AM_STATO_OCCUPAZ.codMonoProvenienza	   
                FROM  AM_STATO_OCCUPAZ, DE_STATO_OCCUPAZ, DE_STATO_OCCUPAZ_RAGG, DE_STATO_ATTO
                WHERE AM_STATO_OCCUPAZ.CODSTATOATTO    = DE_STATO_ATTO.CODSTATOATTO(+)
                  AND AM_STATO_OCCUPAZ.CODSTATOOCCUPAZ = DE_STATO_OCCUPAZ.CODSTATOOCCUPAZ(+)
                  AND DE_STATO_OCCUPAZ.CODSTATOOCCUPAZRAGG = DE_STATO_OCCUPAZ_RAGG.CODSTATOOCCUPAZRAGG
                  AND AM_STATO_OCCUPAZ.PRGSTATOOCCUPAZ = ? "/>


<STATEMENT
  name="GET_DE_STATO_OCC"
  query="SELECT DE_STATO_OCCUPAZ.CODSTATOOCCUPAZ CODICE,
                case   	   
                        when ma.codesito is not null
                        then pg_utils.trunc_desc( DE_STATO_OCCUPAZ.STRDESCRIZIONE,
                                      55, '...')
                       ||  DECODE(SYSDATE, GREATEST(SYSDATE, DE_STATO_OCCUPAZ.DATFINEVAL),  ' (scaduto)',
                                           LEAST   (SYSDATE, DE_STATO_OCCUPAZ.DATINIZIOVAL),' (scaduto)', 
                                           ''
                                 ) || ' (Min: ' || mns.des_esito_2 || ')' 	 
                       when ma.codstatoanag is not null
                       then pg_utils.trunc_desc( DE_STATO_OCCUPAZ.STRDESCRIZIONE,
                                      55, '...')
                       ||  DECODE(SYSDATE, GREATEST(SYSDATE, DE_STATO_OCCUPAZ.DATFINEVAL),  ' (scaduto)',
                                           LEAST   (SYSDATE, DE_STATO_OCCUPAZ.DATINIZIOVAL),' (scaduto)', 
                                           ''
                                 ) || ' (Min: ' || mn.des_statoanag|| ')'    
                       else pg_utils.trunc_desc( DE_STATO_OCCUPAZ.STRDESCRIZIONE,
                                      55, '...')
                       ||  DECODE(SYSDATE, GREATEST(SYSDATE, DE_STATO_OCCUPAZ.DATFINEVAL),  ' (scaduto)',
                                           LEAST   (SYSDATE, DE_STATO_OCCUPAZ.DATINIZIOVAL),' (scaduto)', 
                                           ''
                                 ) || ' (Min: nessuna corrispondenza)' 	 
                      end as DESCRIZIONE,
                DE_STATO_OCCUPAZ.CODSTATOOCCUPAZRAGG,
                DE_STATO_OCCUPAZ.NUMMESIBLOCCO
                FROM DE_STATO_OCCUPAZ, DE_STATO_OCCUPAZ_RAGG,
                mn_stato_occup mn, 
                mn_status_occupaz mns, 
                ma_status_occupaz ma
                WHERE DE_STATO_OCCUPAZ.CODSTATOOCCUPAZRAGG = DE_STATO_OCCUPAZ_RAGG.CODSTATOOCCUPAZRAGG
                and ma.codstatooccupaz = DE_STATO_OCCUPAZ.Codstatooccupaz
                and ma.codstatoanag = mn.cod_statoanag
                and ma.codesito = mns.cod_esito (+) 
                ORDER BY DESCRIZIONE"/>  
<STATEMENT
  name="GET_DE_STATO_OCC_GESTIBILI"
  query="SELECT DE_STATO_OCCUPAZ.CODSTATOOCCUPAZ CODICE,
                	case   	   
                        when ma.codesito is not null
                          then pg_utils.trunc_desc( DE_STATO_OCCUPAZ.STRDESCRIZIONE,
                                      55, '...')
                       ||  DECODE(SYSDATE, GREATEST(SYSDATE, DE_STATO_OCCUPAZ.DATFINEVAL),  ' (scaduto)',
                                           LEAST   (SYSDATE, DE_STATO_OCCUPAZ.DATINIZIOVAL),' (scaduto)', 
                                           ''
                                 ) || ' (Min: ' || mns.des_esito_2 || ')' 	
                       when ma.codstatoanag is not null
                       then pg_utils.trunc_desc( DE_STATO_OCCUPAZ.STRDESCRIZIONE,
                                      55, '...')
                       ||  DECODE(SYSDATE, GREATEST(SYSDATE, DE_STATO_OCCUPAZ.DATFINEVAL),  ' (scaduto)',
                                           LEAST   (SYSDATE, DE_STATO_OCCUPAZ.DATINIZIOVAL),' (scaduto)', 
                                           ''
                                 ) || ' (Min: ' || mn.des_statoanag|| ')'     
                       else pg_utils.trunc_desc( DE_STATO_OCCUPAZ.STRDESCRIZIONE,
                                      55, '...')
                       ||  DECODE(SYSDATE, GREATEST(SYSDATE, DE_STATO_OCCUPAZ.DATFINEVAL),  ' (scaduto)',
                                           LEAST   (SYSDATE, DE_STATO_OCCUPAZ.DATINIZIOVAL),' (scaduto)', 
                                           ''
                                 ) || ' (Min: nessuna corrispondenza)' 	 
                      end as DESCRIZIONE,
                DE_STATO_OCCUPAZ.CODSTATOOCCUPAZRAGG,
                DE_STATO_OCCUPAZ.NUMMESIBLOCCO
                FROM DE_STATO_OCCUPAZ, DE_STATO_OCCUPAZ_RAGG,
                mn_stato_occup mn, 
                mn_status_occupaz mns, 
                ma_status_occupaz ma
                WHERE DE_STATO_OCCUPAZ.CODSTATOOCCUPAZRAGG = DE_STATO_OCCUPAZ_RAGG.CODSTATOOCCUPAZRAGG
                AND DE_STATO_OCCUPAZ.FLGGESTIBILE = 'S'
                and ma.codstatooccupaz = DE_STATO_OCCUPAZ.Codstatooccupaz
                and ma.codstatoanag = mn.cod_statoanag
                and ma.codesito = mns.cod_esito (+)  
                ORDER BY DESCRIZIONE"/>

<STATEMENT
  name="AMSTR_HAS_STOR_STATO_OCC"
  query="SELECT socc.prgStatooccupaz
		 FROM AM_STATO_OCCUPAZ socc
		WHERE socc.DATFINE IS NOT NULL
		AND socc.CDNLAVORATORE=?"/>
		



<!-- STATEMENT
        name="GET_181_CAT"
        query="SELECT DE_181_CATEGORIA.DATFINEVAL,
                      DE_181_CATEGORIA.DATINIZIOVAL,
                      DE_181_CATEGORIA.CODCATEGORIA181 CODICE,
                      DE_181_CATEGORIA.STRDESCRIZIONE DESCRIZIONE
                 FROM DE_181_CATEGORIA"/ -->
 
<STATEMENT
        name="GET_181_CAT"
        query="SELECT DISTINCT
                       trunc((sysdate - anl.DATNASC)/365,0) anni,
                       obf.FLGOBBLIGOSCOLASTICO,
                       to_char(anl.datNasc, 'dd/mm/yyyy') as datNasc
                  FROM an_lavoratore anl, AM_OBBLIGO_FORMATIVO obf
                 WHERE anl.cdnlavoratore = obf.cdnlavoratore(+)
                   AND anl.cdnlavoratore = ?"/>

<STATEMENT
        name="GET_LAUREA_X_CAT181"
        query="SELECT DISTINCT
                      prs.CODMONOSTATO,
                      tit2.flglaurea,
                      tit2.strdescrizione AS destipotitolo
                 FROM pr_studio prs, de_titolo tit2
                WHERE prs.codtipotitolo = tit2.codtitolo(+)
                  AND UPPER(prs.CODMONOSTATO) = 'C'
                  AND UPPER(tit2.flglaurea) LIKE ('S')
                  AND prs.cdnlavoratore = ?"/>

<STATEMENT
        name="AMSTR_GET_STATO_ATTO"
        query="SELECT DE_STATO_ATTO.CODSTATOATTO CODICE,
                      DE_STATO_ATTO.STRDESCRIZIONE DESCRIZIONE
                 FROM DE_STATO_ATTO, DE_STATO_ATTO_LST_TAB
                WHERE DE_STATO_ATTO.CODSTATOATTO = DE_STATO_ATTO_LST_TAB.CODSTATOATTO
                  AND DE_STATO_ATTO_LST_TAB.CODLSTTAB = &apos;AM_S_OCC&apos; ORDER BY STRDESCRIZIONE"/>

<STATEMENT
      name ="SAVE_STATO_OCCUPAZ"
      query="UPDATE AM_STATO_OCCUPAZ SET 
                    AM_STATO_OCCUPAZ.CODSTATOOCCUPAZ                 = ?,                      																																										
                    AM_STATO_OCCUPAZ.DATINIZIO                       = TO_DATE(?,'DD/MM/YYYY'),																																										
                    AM_STATO_OCCUPAZ.DATFINE                         = TO_DATE(?,'DD/MM/YYYY'),																																										
                    AM_STATO_OCCUPAZ.FLGINDENNIZZATO                 = ?,                      																																										
                    AM_STATO_OCCUPAZ.FLGPENSIONATO                   = ?,                      																																										
                    AM_STATO_OCCUPAZ.NUMREDDITO                      = ?,
                    AM_STATO_OCCUPAZ.NUMMESISOSP					 = ?,                      																			
                    AM_STATO_OCCUPAZ.numAnzianitaPrec297             = ?,                      																			
                    AM_STATO_OCCUPAZ.CODMONOCALCOLOANZIANITAPREC297  = ?, 
                    AM_STATO_OCCUPAZ.datcalcolomesisosp              = TO_DATE(?,'DD/MM/YYYY'),
                    AM_STATO_OCCUPAZ.datcalcoloanzianita             = to_date(?,'DD/MM/YYYY'),
                    AM_STATO_OCCUPAZ.DATANZIANITADISOC               = TO_DATE(?,'DD/MM/YYYY'),
                    AM_STATO_OCCUPAZ.STRNUMATTO                      = ?, 			
                    AM_STATO_OCCUPAZ.CODSTATOATTO                    = ?,			   		  
                    AM_STATO_OCCUPAZ.DATATTO                         = TO_DATE(?,'DD/MM/YYYY'),			   		  
                    AM_STATO_OCCUPAZ.DATRICHREVISIONE                = TO_DATE(?,'DD/MM/YYYY'),		  
                    AM_STATO_OCCUPAZ.DATRICORSOGIURISDIZ             = TO_DATE(?,'DD/MM/YYYY'),		  
                    AM_STATO_OCCUPAZ.STRNOTE                         = ?,
                    AM_STATO_OCCUPAZ.CDNUTMOD                        = ?,
                    AM_STATO_OCCUPAZ.DTMMOD                          = SYSDATE,
                    AM_STATO_OCCUPAZ.NUMKLOSTATOOCCUPAZ              = ? ,
              		AM_STATO_OCCUPAZ.CODMONOPROVENIENZA              =
                    (case
						when AM_STATO_OCCUPAZ.CODMONOPROVENIENZA = 'N' then 'O'
						when AM_STATO_OCCUPAZ.CODMONOPROVENIENZA = 'O' then 'O'
						else 'G'
					end)
                   	WHERE AM_STATO_OCCUPAZ.PRGSTATOOCCUPAZ = ?"/>

<STATEMENT
  name ="AMSTR_DEL_STATO_OCC"
  query="DELETE FROM AM_STATO_OCCUPAZ WHERE AM_STATO_OCCUPAZ.PRGSTATOOCCUPAZ = ?"/>


<STATEMENT
        name ="INS_STATO_OCCUPAZ"
        query="INSERT INTO AM_STATO_OCCUPAZ 
                     (AM_STATO_OCCUPAZ.PRGSTATOOCCUPAZ,
                      AM_STATO_OCCUPAZ.CDNLAVORATORE,
                      AM_STATO_OCCUPAZ.CODSTATOOCCUPAZ,
                      AM_STATO_OCCUPAZ.DATINIZIO,
                      AM_STATO_OCCUPAZ.DATFINE,
                      AM_STATO_OCCUPAZ.DATANZIANITADISOC,
                      AM_STATO_OCCUPAZ.FLGINDENNIZZATO,
                      AM_STATO_OCCUPAZ.CODMONOPROVENIENZA,
                      AM_STATO_OCCUPAZ.NUMANZIANITAPREC297,
                      AM_STATO_OCCUPAZ.STRNOTE,
                      AM_STATO_OCCUPAZ.DTMINS,
                      AM_STATO_OCCUPAZ.DTMMOD,
                      AM_STATO_OCCUPAZ.CDNUTINS,
                      AM_STATO_OCCUPAZ.CDNUTMOD,
                      AM_STATO_OCCUPAZ.FLGPENSIONATO,
                      AM_STATO_OCCUPAZ.NUMMESISOSP,
                      AM_STATO_OCCUPAZ.DATCALCOLOMESISOSP,
                      AM_STATO_OCCUPAZ.DATCALCOLOANZIANITA
                     )
              VALUES (S_AM_STATO_OCCUPAZ.NEXTVAL,
                      ?,?,
                      TO_DATE(?,'DD/MM/YYYY'),TO_DATE(?,'DD/MM/YYYY'),TO_DATE(?,'DD/MM/YYYY'),
                      ?,?,?,?,SYSDATE,SYSDATE,?,?,?,?,
                      TO_DATE(?,'DD/MM/YYYY'),TO_DATE(?,'DD/MM/YYYY'))"/>
                      
<STATEMENT
        name ="INS_STATO_OCCUPAZ_MANUALE"
        query="INSERT INTO AM_STATO_OCCUPAZ 
                     (AM_STATO_OCCUPAZ.PRGSTATOOCCUPAZ,
                      AM_STATO_OCCUPAZ.CDNLAVORATORE,
                      AM_STATO_OCCUPAZ.CODSTATOOCCUPAZ,
                      AM_STATO_OCCUPAZ.DATINIZIO,
                      AM_STATO_OCCUPAZ.DATFINE,
                      AM_STATO_OCCUPAZ.DATANZIANITADISOC,
                      AM_STATO_OCCUPAZ.FLGINDENNIZZATO,
                      AM_STATO_OCCUPAZ.CODMONOPROVENIENZA,
                      AM_STATO_OCCUPAZ.NUMANZIANITAPREC297,
                      AM_STATO_OCCUPAZ.STRNOTE,
                      AM_STATO_OCCUPAZ.DTMINS,
                      AM_STATO_OCCUPAZ.DTMMOD,
                      AM_STATO_OCCUPAZ.CDNUTINS,
                      AM_STATO_OCCUPAZ.CDNUTMOD,
                      AM_STATO_OCCUPAZ.FLGPENSIONATO,
                      AM_STATO_OCCUPAZ.NUMMESISOSP,
                      AM_STATO_OCCUPAZ.DATCALCOLOMESISOSP,
                      AM_STATO_OCCUPAZ.DATCALCOLOANZIANITA
                     )
              VALUES (?,
                      ?,?,
                      TO_DATE(?,'DD/MM/YYYY'),TO_DATE(?,'DD/MM/YYYY'),TO_DATE(?,'DD/MM/YYYY'),
                      ?,?,?,?,TO_DATE(?,'DD/MM/YYYY'),TO_DATE(?,'DD/MM/YYYY'),?,?,?,?,
                      TO_DATE(?,'DD/MM/YYYY'),TO_DATE(?,'DD/MM/YYYY'))"/>

<STATEMENT
        name ="INS_STATO_OCCUPAZ_NO_SEQ"
        query="INSERT INTO AM_STATO_OCCUPAZ 
                     (AM_STATO_OCCUPAZ.PRGSTATOOCCUPAZ,
                      AM_STATO_OCCUPAZ.CDNLAVORATORE,
                      AM_STATO_OCCUPAZ.CODSTATOOCCUPAZ,
                      AM_STATO_OCCUPAZ.DATINIZIO,
                      AM_STATO_OCCUPAZ.DATFINE,
                      AM_STATO_OCCUPAZ.DATANZIANITADISOC,
                      AM_STATO_OCCUPAZ.FLGINDENNIZZATO,
                      AM_STATO_OCCUPAZ.CODMONOPROVENIENZA,
                      AM_STATO_OCCUPAZ.NUMANZIANITAPREC297,
                      AM_STATO_OCCUPAZ.STRNOTE,
                      AM_STATO_OCCUPAZ.DTMINS,
                      AM_STATO_OCCUPAZ.DTMMOD,
                      AM_STATO_OCCUPAZ.CDNUTINS,
                      AM_STATO_OCCUPAZ.CDNUTMOD,
                      AM_STATO_OCCUPAZ.FLGPENSIONATO,
                      AM_STATO_OCCUPAZ.NUMMESISOSP,
                      AM_STATO_OCCUPAZ.DATCALCOLOMESISOSP,
                      AM_STATO_OCCUPAZ.DATCALCOLOANZIANITA
                     )
              VALUES (?,
                      ?,?,
                      TO_DATE(?,'DD/MM/YYYY'),TO_DATE(?,'DD/MM/YYYY'),TO_DATE(?,'DD/MM/YYYY'),
                      ?,?,?,?,SYSDATE,SYSDATE,?,?,?,?,
                      TO_DATE(?,'DD/MM/YYYY'),TO_DATE(?,'DD/MM/YYYY'))"/>
                      

<STATEMENT
        name ="UPD_STATO_OCCUPAZ"
        query="UPDATE AM_STATO_OCCUPAZ SET
                      CDNLAVORATORE = ?,
                      CODSTATOOCCUPAZ = ?,
                      DATINIZIO = TO_DATE(?,'DD/MM/YYYY'),
                      DATFINE = TO_DATE(?,'DD/MM/YYYY'),
                      DATANZIANITADISOC = TO_DATE(?,'DD/MM/YYYY'),
                      FLGINDENNIZZATO = ?,
                      CODMONOPROVENIENZA = ?,
                      NUMANZIANITAPREC297 = ?,
                      STRNOTE = ?,
                      DTMINS = SYSDATE,
                      DTMMOD = SYSDATE,
                      CDNUTINS = ?,
                      CDNUTMOD = ?,
                      FLGPENSIONATO = ?,
                      NUMMESISOSP = ?,
                      DATCALCOLOMESISOSP = TO_DATE(?,'DD/MM/YYYY'),
                      DATCALCOLOANZIANITA = TO_DATE(?,'DD/MM/YYYY'),
                      numklostatooccupaz = ? 
				WHERE PRGSTATOOCCUPAZ = ? "/>

<!-- Dati Amministrativi LISTE SPECIALI MOBILITA -->
<STATEMENT
        name ="AMSTR_GET_MOBILITA_ISCR"
        query="SELECT DISTINCT AM_MOBILITA_ISCR.CDNUTINS,
                      AM_MOBILITA_ISCR.CDNUTMOD,
                      AM_MOBILITA_ISCR.CODMOTIVODIFF,
                      AM_MOBILITA_ISCR.CODMOTIVOFINE,
                      AM_MOBILITA_ISCR.CDNMBSTATORICH,
                      AM_MOBILITA_ISCR.CODTIPOMOB,
                      case   	   
                        when ma.codlistespec is not null
                          then (DE_MB_TIPO.STRDESCRIZIONE || ' (Min: ' || mn.des_listespec|| ')' )	     
                          else DE_MB_TIPO.STRDESCRIZIONE  || ' (Min: nessuna corrispondenza)'
                      end as DESCRIZIONE,
                      DE_MB_TIPO.CODMONOATTIVA,
                      to_char(AM_MOBILITA_ISCR.DATATTO,'DD/MM/YYYY') DATATTO,
                      to_char(AM_MOBILITA_ISCR.DATFINE,'DD/MM/YYYY') DATFINE,
                      to_char(AM_MOBILITA_ISCR.DATFINEORIG,'DD/MM/YYYY') DATFINEORIG,
                      to_char(AM_MOBILITA_ISCR.DATFINEINDENNITA,'DD/MM/YYYY') DATFINEINDENNITA,
                      to_char(AM_MOBILITA_ISCR.DATINIZIO,'DD/MM/YYYY') DATINIZIO,
                      to_char(AM_MOBILITA_ISCR.DATINIZIOINDENNITA,'DD/MM/YYYY') DATINIZIOINDENNITA,
                      to_char(AM_MOBILITA_ISCR.DATMAXDIFF,'DD/MM/YYYY') DATMAXDIFF,
                      to_char(AM_MOBILITA_ISCR.DTMINS,'dd/mm/yyyy HH24:MI') DTMINS,
                      to_char(AM_MOBILITA_ISCR.DTMMOD,'dd/mm/yyyy HH24:MI') DTMMOD,
                      to_char(AM_MOBILITA_ISCR.DATCRT, 'DD/MM/YYYY') DATCRT,
                      AM_MOBILITA_ISCR.CODPROVINCIA PROVCRT,
                      AM_MOBILITA_ISCR.CODREGIONE REGCRT,
                      AM_MOBILITA_ISCR.FLGDIFFERIMENTO,
                      AM_MOBILITA_ISCR.FLGINDENNITA,
                      AM_MOBILITA_ISCR.NUMKLOMOBISCR,
                      AM_MOBILITA_ISCR.PRGMOBILITAISCR,
                      AM_MOBILITA_ISCR.PRGMOVIMENTO,
                      AM_MOBILITA_ISCR.STRNOTE,
                      AM_MOBILITA_ISCR.STRNUMATTO, AM_MOBILITA_ISCR.CODMVRIAPERTURA,
                      AM_MOBILITA_ISCR.DATINIZIO DATINIZIODATE,
                      AM_MOBILITA_ISCR.FLGSCHEDA,
                      AM_MOBILITA_ISCR.CODDOMANDA,
                      am_mobilita_iscr.flgnonimprenditore,
                      am_mobilita_iscr.flgcasodubbio casoDubbio,
                      am_mobilita_iscr.STRDESCCASODUBBIO,
                      AN_UNITA_AZIENDA.PRGUNITA,
                      AN_UNITA_AZIENDA.PRGAZIENDA,
                      AN_UNITA_AZIENDA.STRINDIRIZZO,
                      AN_UNITA_AZIENDA.STRTEL,
                      AN_AZIENDA.STRPARTITAIVA, 
                      AN_AZIENDA.STRRAGIONESOCIALE,
                      DE_COMUNE.STRDENOMINAZIONE AS COMUNE,
                      UAZ1.PRGUNITA PRGUNITAOLD,
                      UAZ1.PRGAZIENDA PRGAZIENDAOLD,
                      UAZ1.STRINDIRIZZO STRINDIRIZZOOLD,
                      UAZ1.STRTEL STRTELOLD,
                      AZ1.STRPARTITAIVA STRPARTITAIVAOLD, 
                      AZ1.STRRAGIONESOCIALE STRRAGIONESOCIALEOLD,
                      COMUNE1.STRDENOMINAZIONE AS COMUNEOLD,
                      to_char(AM_MOBILITA_ISCR.DATINIZIOMOV,'DD/MM/YYYY') DATINIZIOMOV,
                      to_char(AM_MOBILITA_ISCR.DATFINEMOV,'DD/MM/YYYY') DATFINEMOV,
                      decode(AM_MOVIMENTO.CODTIPOMOV, 'AVV', to_char(AM_MOVIMENTO.DATINIZIOMOV,'DD/MM/YYYY'), to_char(AM_MOVIMENTO.DATINIZIOAVV,'DD/MM/YYYY')) DATINIZIOMOVOLD,
					  decode(AM_MOVIMENTO.CODTIPOMOV, 'AVV', to_char(AM_MOVIMENTO.DATFINEMOVEFFETTIVA,'DD/MM/YYYY'), to_char(AM_MOVIMENTO.DATINIZIOMOV,'DD/MM/YYYY')) DATFINEMOVOLD,
                      AM_MOBILITA_ISCR.CODMANSIONE, DE_MANSIONE.STRDESCRIZIONE as MANSIONE,
                      AM_MOBILITA_ISCR.CODGRADO, AM_MOBILITA_ISCR.STRLIVELLO, 
                      AM_MOBILITA_ISCR.CODCCNL, CONTRATTO.STRDESCRIZIONE DESCCCNL,
                      to_char(AM_MOBILITA_ISCR.DATDOMANDA, 'DD/MM/YYYY') DATADOMANDA,
                      to_char(AM_MOBILITA_ISCR.DECORESETT) NUMORESETT,
					  provAzOld.STRTARGA as STRTARGAOLD,
					  AZ1.STRCODICEFISCALE as CFOLD, 
					  provAz.STRTARGA,
					  AN_AZIENDA.STRCODICEFISCALE as CF                      
                 FROM AM_MOBILITA_ISCR, DE_MB_TIPO, AM_MOVIMENTO, AN_AZIENDA, AN_UNITA_AZIENDA,
                 	  AN_AZIENDA AZ1, AN_UNITA_AZIENDA UAZ1,
                      DE_COMUNE, DE_COMUNE COMUNE1, DE_MANSIONE, DE_PROVINCIA PROV, DE_CONTRATTO_COLLETTIVO CONTRATTO,
                      DE_PROVINCIA provAz,DE_PROVINCIA provAzOld,
                      ma_listespeciali ma,
                      mn_listespeciali mn
                 WHERE AM_MOBILITA_ISCR.CODTIPOMOB    = DE_MB_TIPO.CODMBTIPO(+)
                 AND AM_MOVIMENTO.PRGMOVIMENTO(+)   = AM_MOBILITA_ISCR.PRGMOVIMENTO
                  AND AZ1.PRGAZIENDA(+)          = UAZ1.PRGAZIENDA			
                  AND AM_MOVIMENTO.PRGAZIENDA          = UAZ1.PRGAZIENDA(+)
                  AND AM_MOVIMENTO.PRGUNITA          = UAZ1.PRGUNITA(+)
                  AND AN_AZIENDA.PRGAZIENDA(+)          = AN_UNITA_AZIENDA.PRGAZIENDA
                  AND AM_MOBILITA_ISCR.PRGAZIENDA          = AN_UNITA_AZIENDA.PRGAZIENDA(+)
                  AND AM_MOBILITA_ISCR.PRGUNITA          = AN_UNITA_AZIENDA.PRGUNITA(+)
                  AND AM_MOBILITA_ISCR.CODCCNL = CONTRATTO.CODCCNL(+) 
                  AND AM_MOBILITA_ISCR.CODMANSIONE       = DE_MANSIONE.CODMANSIONE(+)
                  AND AN_UNITA_AZIENDA.CODCOM        = DE_COMUNE.CODCOM(+)
                  and DE_COMUNE.CODPROVINCIA = provAz.CODPROVINCIA(+)
                  AND UAZ1.CODCOM = COMUNE1.CODCOM(+)
                  and COMUNE1.CODPROVINCIA = provAzOld.CODPROVINCIA(+)
                  AND AM_MOBILITA_ISCR.CODPROVINCIA = PROV.CODPROVINCIA(+)
                  AND AM_MOBILITA_ISCR.CDNLAVORATORE = ?
                  and nvl(trunc(am_mobilita_iscr.datfine),trunc(SYSDATE)) >= trunc(SYSDATE)
                  and DE_MB_TIPO.codmbtipo = ma.codmbtipo 
                  and ma.codlistespec = mn.cod_listespec (+)
                  order by AM_MOBILITA_ISCR.DATINIZIO DESC
                  "/>
                  
<STATEMENT  name="GET_DE_TIPO_CPI"
        query="SELECT CODICECPI, DESCRIZIONECPI FROM ( 
        		SELECT DISTINCT
					CPI.CODCPI AS CODICECPI,
					CPI.STRDESCRIZIONE AS DESCRIZIONECPI
				FROM DE_CPI CPI, TS_GENERALE GEN, DE_COMUNE COM
				WHERE CPI.CODPROVINCIA = GEN.CODPROVINCIASIL
					AND CPI.CODCPI = COM.CODCPI
					AND TRUNC(SYSDATE) &lt;= TRUNC(CPI.DATFINEVAL)
				UNION
				SELECT DISTINCT
					CPI.CODCPI AS CODICECPI,
					CPI.STRDESCRIZIONE || ' (SCADUTO)' AS DESCRIZIONECPI
				FROM DE_CPI CPI, TS_GENERALE GEN
				WHERE CPI.CODPROVINCIA = GEN.CODPROVINCIASIL
					AND  TRUNC(CPI.DATFINEVAL) &lt;= TRUNC(SYSDATE) 
       		    	AND trunc(CPI.DATFINEVAL) &gt;= (select trunc(datscadcpi) from ts_generale)
       		    )" />
					  
<STATEMENT  name="AMSTR_GET_DE_MB_TIPO"
        query="SELECT DE_MB_TIPO.CODMBTIPO CODICE,
                      case   	   
						when ma.codlistespec is not null
						  then (DE_MB_TIPO.STRDESCRIZIONE || ' (Min: ' || mn.des_listespec|| ')' )	     
						  else DE_MB_TIPO.STRDESCRIZIONE || ' (Min: nessuna corrispondenza) '	 
				      end as DESCRIZIONE, 
                      DE_MB_TIPO.DATINIZIOVAL,
                      DE_MB_TIPO.DATFINEVAL
                      FROM DE_MB_TIPO 
                      inner join ma_listespeciali ma on ma.codmbtipo= DE_MB_TIPO.codmbtipo
					  left join mn_listespeciali mn on mn.cod_listespec= ma.codlistespec
					  WHERE DE_MB_TIPO.CODMBTIPO IN (
						SELECT TC.CODICE
						FROM TS_CONFIG_CODIFICA TC
						WHERE TC.NOMETABELLA='DE_MB_TIPO' AND TC.CODTIPOCONFIG = 'MBTPLST' AND TC.CONFIGURAZIONE = NVL(
						(SELECT TL.NUM
						FROM TS_CONFIG_LOC TL
						WHERE TL.STRCODRIF = (SELECT TS_GENERALE.CODPROVINCIASIL FROM TS_GENERALE)
						AND TL.CODTIPOCONFIG = 'MBTPLST'),0)
						) 
             order by datfineval desc, descrizione asc "/> 
             
<STATEMENT  name="AMSTR_GET_DE_MB_STATO"
        query="SELECT TI.CDNMBSTATORICH AS CODICE,
				TI.STRDESCRIZIONE || DECODE(SYSDATE,
				GREATEST(SYSDATE, TI.DATINIZIOVAL, TI.DATFINEVAL),
				LEAST(SYSDATE, TI.DATINIZIOVAL, TI.DATFINEVAL)) AS DESCRIZIONE
				FROM DE_MB_STATO_RICH TI
				WHERE TI.CDNMBSTATORICH IN (
				SELECT TC.CODICE
				FROM TS_CONFIG_CODIFICA TC
				WHERE TC.NOMETABELLA='DE_MB_STATO_RICH' AND TC.CODTIPOCONFIG = 'MOB_ESI' AND TC.CONFIGURAZIONE = NVL(
				(SELECT TL.NUM
				FROM TS_CONFIG_LOC TL
				WHERE TL.STRCODRIF = (SELECT TS_GENERALE.CODPROVINCIASIL FROM TS_GENERALE)
				AND TL.CODTIPOCONFIG = 'MOB_ESI'),0)
				)" />
        
<STATEMENT name="UPDATE_STATO_RICH" 
			query="UPDATE AM_MOBILITA_ISCR SET CDNMBSTATORICH = ?, FLGNONIMPRENDITORE = ?, 
			FLGCASODUBBIO = ?, STRDESCCASODUBBIO = ?,
			CDNUTMOD = ?, DTMMOD = sysdate , NUMKLOMOBISCR = ? + 1
			WHERE PRGMOBILITAISCR = ?" />        

<STATEMENT  name="AMSTR_SAVE_MOBILITA_ISCR"
        query="UPDATE AM_MOBILITA_ISCR SET 
                      AM_MOBILITA_ISCR.CDNLAVORATORE = ?,
                      AM_MOBILITA_ISCR.DATINIZIO = TO_DATE(?,'DD/MM/YYYY'),
                      AM_MOBILITA_ISCR.DATFINE = TO_DATE(?,'DD/MM/YYYY'),
                      AM_MOBILITA_ISCR.CODTIPOMOB = ?,
                      AM_MOBILITA_ISCR.CDNMBSTATORICH = ?,
                      AM_MOBILITA_ISCR.FLGINDENNITA = ?,
				      AM_MOBILITA_ISCR.FLGNONIMPRENDITORE = ?,
                      AM_MOBILITA_ISCR.DATINIZIOINDENNITA = TO_DATE(?,'DD/MM/YYYY'),
                      AM_MOBILITA_ISCR.DATFINEINDENNITA = TO_DATE(?,'DD/MM/YYYY'),
                      AM_MOBILITA_ISCR.DATCRT = TO_DATE(?,'DD/MM/YYYY'),
                      AM_MOBILITA_ISCR.DATMAXDIFF = TO_DATE(?,'DD/MM/YYYY'),
                      AM_MOBILITA_ISCR.STRNOTE =?,
                      AM_MOBILITA_ISCR.CDNUTMOD = ?,
                      AM_MOBILITA_ISCR.CODMOTIVOFINE = ?,
                      AM_MOBILITA_ISCR.DTMMOD = SYSDATE ,
                      AM_MOBILITA_ISCR.NUMKLOMOBISCR = ? + 1,
                      AM_MOBILITA_ISCR.PRGMOVIMENTO  = ?,
                      AM_MOBILITA_ISCR.CODMOTIVODIFF = ?,
                      AM_MOBILITA_ISCR.DATFINEORIG = TO_DATE(?,'DD/MM/YYYY'),
                      AM_MOBILITA_ISCR.CODMANSIONE = ?,
                      AM_MOBILITA_ISCR.CODPROVINCIA = ?,
                      AM_MOBILITA_ISCR.CODREGIONE = ?,
                      AM_MOBILITA_ISCR.STRNUMATTO = ?,
                      AM_MOBILITA_ISCR.CODMONOPROV = 
                      (case
							when AM_MOBILITA_ISCR.CODMONOPROV = 'I' then 'M'
							when AM_MOBILITA_ISCR.CODMONOPROV = 'F' then 'C'
							when AM_MOBILITA_ISCR.CODMONOPROV = 'P' then 'A'
							else ''
					   end),
					   AM_MOBILITA_ISCR.CODGRADO = ?,
					   AM_MOBILITA_ISCR.STRLIVELLO = ?,
					   AM_MOBILITA_ISCR.CODCCNL = ?,
					   AM_MOBILITA_ISCR.PRGAZIENDA = ?,
					   AM_MOBILITA_ISCR.PRGUNITA = ?,
					   AM_MOBILITA_ISCR.DATINIZIOMOV = TO_DATE(?,'DD/MM/YYYY'),
					   AM_MOBILITA_ISCR.DATFINEMOV = TO_DATE(?,'DD/MM/YYYY'),
					   FLGSCHEDA = ?,
					   AM_MOBILITA_ISCR.DATDOMANDA = TO_DATE(?,'DD/MM/YYYY'),
					   AM_MOBILITA_ISCR.DECORESETT = TO_NUMBER(?),
					   AM_MOBILITA_ISCR.FLGCASODUBBIO = ?,
					   AM_MOBILITA_ISCR.STRDESCCASODUBBIO = ?
                WHERE AM_MOBILITA_ISCR.PRGMOBILITAISCR = ?"/>

<STATEMENT  name="AMSTR_INS_MOBILITA_ISCR"
        query="INSERT INTO AM_MOBILITA_ISCR 
                          (PRGMOBILITAISCR,
                           CDNLAVORATORE,
                           PRGMOVIMENTO,
                           CODTIPOMOB,
                           CDNMBSTATORICH,
                           DATINIZIO,
                           DATFINE,
                           FLGINDENNITA,
                           FLGNONIMPRENDITORE,
                           DATINIZIOINDENNITA,
                           DATFINEINDENNITA,
                           DATCRT,
                           DATMAXDIFF,
                           STRNOTE,
                           CODMONOPROV,
                           PRGAZIENDA, PRGUNITA, DATINIZIOMOV, DATFINEMOV,
                           CDNUTINS, DTMINS,
                           CDNUTMOD, DTMMOD, CODMOTIVODIFF, DATFINEORIG, CODMANSIONE,
                           CODPROVINCIA, CODREGIONE, STRNUMATTO, CODGRADO, STRLIVELLO, CODCCNL,
                           DATDOMANDA, DECORESETT, FLGCASODUBBIO, STRDESCCASODUBBIO                           
                          )
                  VALUES (? ,
                          ?,
                          ?,?,?,
                          TO_DATE(?,'DD/MM/YYYY'),
                          TO_DATE(?,'DD/MM/YYYY'),
                          ?,?, TO_DATE(?,'DD/MM/YYYY'),
                          TO_DATE(?,'DD/MM/YYYY'),
                          TO_DATE(?,'DD/MM/YYYY'),
                          TO_DATE(?,'DD/MM/YYYY'),?,
                          'I', ?, ?, TO_DATE(?,'DD/MM/YYYY'), TO_DATE(?,'DD/MM/YYYY'),
                          ?, SYSDATE,
                          ?, SYSDATE, ?, TO_DATE(?,'DD/MM/YYYY'), ?, ?, ?, ?, ?, ?, ?,
                          TO_DATE(?,'DD/MM/YYYY'), TO_NUMBER(?), ?, ?
                         )"/>



<STATEMENT
	name="AMSTR_MOBILITA_GET_TIPO_FINE"
	query="SELECT TI.CODMOTIVOFINE AS CODICE,
			TI.STRDESCRIZIONE || DECODE(SYSDATE,    
	        			   GREATEST(SYSDATE, TI.DATINIZIOVAL, TI.DATFINEVAL),&apos; (scaduto)&apos;,
	        			   LEAST(SYSDATE, TI.DATINIZIOVAL, TI.DATFINEVAL),&apos; (scaduto)&apos;, 
	        			   &apos;&apos;) AS DESCRIZIONE
			FROM DE_MB_MOTIVO_FINE TI
			WHERE TI.CODMOTIVOFINE IN (
			SELECT TC.CODICE
			FROM TS_CONFIG_CODIFICA TC
			WHERE TC.NOMETABELLA='DE_MB_MOTIVO_FINE' AND TC.CODTIPOCONFIG = 'MOB_DEC' AND TC.CONFIGURAZIONE = NVL(
			(SELECT TL.NUM
			FROM TS_CONFIG_LOC TL
			WHERE TL.STRCODRIF = (SELECT TS_GENERALE.CODPROVINCIASIL FROM TS_GENERALE)
			AND TL.CODTIPOCONFIG = 'MOB_DEC'),0)
			) ORDER BY DESCRIZIONE" />

<STATEMENT
    name="GET_SPEC_MOBILITA"
    query="SELECT DISTINCT AM_MOBILITA_ISCR.CDNUTINS,
                      AM_MOBILITA_ISCR.CDNUTMOD,
                      AM_MOBILITA_ISCR.CODMOTIVODIFF,
					  AM_MOBILITA_ISCR.CODMOTIVOFINE,
					  AM_MOBILITA_ISCR.CDNMBSTATORICH,
                      AM_MOBILITA_ISCR.CODTIPOMOB,                      
                      case   	   
                        when ma.codlistespec is not null
                          then (DE_MB_TIPO.STRDESCRIZIONE || ' (Min: ' || mn.des_listespec|| ')' )	     
                          else DE_MB_TIPO.STRDESCRIZIONE || ' (Min: nessuna corrispondenza)' 
                      end as DESCRIZIONE,
                      DE_MB_TIPO.CODMONOATTIVA,                      
                      to_char(AM_MOBILITA_ISCR.DATATTO,'DD/MM/YYYY') DATATTO,
                      to_char(AM_MOBILITA_ISCR.DATFINE,'DD/MM/YYYY') DATFINE,
                      to_char(AM_MOBILITA_ISCR.DATFINEORIG,'DD/MM/YYYY') DATFINEORIG,
                      to_char(AM_MOBILITA_ISCR.DATFINEINDENNITA,'DD/MM/YYYY') DATFINEINDENNITA,
                      to_char(AM_MOBILITA_ISCR.DATINIZIO,'DD/MM/YYYY') DATINIZIO,
                      to_char(AM_MOBILITA_ISCR.DATINIZIOINDENNITA,'DD/MM/YYYY') DATINIZIOINDENNITA,
                      to_char(AM_MOBILITA_ISCR.DATMAXDIFF,'DD/MM/YYYY') DATMAXDIFF,
                      to_char(AM_MOBILITA_ISCR.DTMINS,'DD/MM/YYYY HH24:Mi') DTMINS,
                      to_char(AM_MOBILITA_ISCR.DTMMOD,'DD/MM/YYYY HH24:Mi') DTMMOD,
                      to_char(AM_MOBILITA_ISCR.DATCRT, 'DD/MM/YYYY') DATCRT,
                      AM_MOBILITA_ISCR.CODPROVINCIA PROVCRT,
                      AM_MOBILITA_ISCR.CODREGIONE REGCRT,
                      AM_MOBILITA_ISCR.FLGDIFFERIMENTO,
                      AM_MOBILITA_ISCR.FLGINDENNITA,
                      AM_MOBILITA_ISCR.FLGNONIMPRENDITORE,
                      AM_MOBILITA_ISCR.FLGCASODUBBIO CASODUBBIO,
                      AM_MOBILITA_ISCR.STRDESCCASODUBBIO,
                      AM_MOBILITA_ISCR.NUMKLOMOBISCR,
                      AM_MOBILITA_ISCR.PRGMOBILITAISCR,
                      AM_MOBILITA_ISCR.PRGMOVIMENTO,
                      AM_MOBILITA_ISCR.STRNOTE,
                      AM_MOBILITA_ISCR.STRNUMATTO,
                      AM_MOBILITA_ISCR.FLGSCHEDA,
                      AM_MOBILITA_ISCR.CODDOMANDA,
                      to_char(AM_MOBILITA_ISCR.DATINIZIOMOV,'DD/MM/YYYY') DATINIZIOMOV,
					  to_char(AM_MOBILITA_ISCR.DATFINEMOV,'DD/MM/YYYY') DATFINEMOV,
					  decode(AM_MOVIMENTO.CODTIPOMOV, 'AVV', to_char(AM_MOVIMENTO.DATINIZIOMOV,'DD/MM/YYYY'), to_char(AM_MOVIMENTO.DATINIZIOAVV,'DD/MM/YYYY')) DATINIZIOMOVOLD,
					  decode(AM_MOVIMENTO.CODTIPOMOV, 'AVV', to_char(AM_MOVIMENTO.DATFINEMOVEFFETTIVA,'DD/MM/YYYY'), to_char(AM_MOVIMENTO.DATINIZIOMOV,'DD/MM/YYYY')) DATFINEMOVOLD,
                      AM_MOBILITA_ISCR.CODMANSIONE, DE_MANSIONE.STRDESCRIZIONE as MANSIONE,
                      AM_MOBILITA_ISCR.CODGRADO, AM_MOBILITA_ISCR.STRLIVELLO, 
                      AM_MOBILITA_ISCR.CODCCNL, CONTRATTO.STRDESCRIZIONE DESCCCNL,
                      to_char(AM_MOBILITA_ISCR.DATDOMANDA, 'DD/MM/YYYY') DATADOMANDA,
                      to_char(AM_MOBILITA_ISCR.DECORESETT) NUMORESETT, AM_MOBILITA_ISCR.CODMVRIAPERTURA,
                      AN_UNITA_AZIENDA.PRGUNITA,
                      AN_UNITA_AZIENDA.PRGAZIENDA,
                      AN_UNITA_AZIENDA.STRINDIRIZZO,
                      AN_UNITA_AZIENDA.STRTEL,
                      AN_AZIENDA.STRPARTITAIVA, 
                      AN_AZIENDA.STRCODICEFISCALE,
                      AN_AZIENDA.STRRAGIONESOCIALE,
                      DE_COMUNE.STRDENOMINAZIONE AS COMUNE,
                      UAZ1.PRGUNITA PRGUNITAOLD,
                      UAZ1.PRGAZIENDA PRGAZIENDAOLD,
                      UAZ1.STRINDIRIZZO STRINDIRIZZOOLD,
                      UAZ1.STRTEL STRTELOLD,
                      AZ1.STRPARTITAIVA STRPARTITAIVAOLD, 
                      AZ1.STRRAGIONESOCIALE STRRAGIONESOCIALEOLD,
                      AZ1.STRCODICEFISCALE as STRCODICEFISCALEOLD,
                      COMUNE1.STRDENOMINAZIONE AS COMUNEOLD,
                      provAzOld.strtarga as strtargaold,
					  provAz.strtarga
                 FROM AM_MOBILITA_ISCR, DE_MB_TIPO, AM_MOVIMENTO, AN_AZIENDA, AN_UNITA_AZIENDA,
                 	  AN_AZIENDA AZ1, AN_UNITA_AZIENDA UAZ1,	
                      DE_COMUNE, DE_COMUNE COMUNE1, DE_MANSIONE, DE_PROVINCIA PROV,
                      DE_CONTRATTO_COLLETTIVO CONTRATTO,
                      DE_PROVINCIA provAz,DE_PROVINCIA provAzOld,
                      ma_listespeciali ma,
                      mn_listespeciali mn
                WHERE AM_MOBILITA_ISCR.CODTIPOMOB    = DE_MB_TIPO.CODMBTIPO(+)
                  AND AM_MOVIMENTO.PRGMOVIMENTO(+)   = AM_MOBILITA_ISCR.PRGMOVIMENTO
                  AND AZ1.PRGAZIENDA(+)          = UAZ1.PRGAZIENDA			
                  AND AM_MOVIMENTO.PRGAZIENDA          = UAZ1.PRGAZIENDA(+)
                  AND AM_MOVIMENTO.PRGUNITA          = UAZ1.PRGUNITA(+)
                  AND AN_AZIENDA.PRGAZIENDA(+)          = AN_UNITA_AZIENDA.PRGAZIENDA			
                  AND AM_MOBILITA_ISCR.PRGAZIENDA          = AN_UNITA_AZIENDA.PRGAZIENDA(+)
                  AND AM_MOBILITA_ISCR.PRGUNITA          = AN_UNITA_AZIENDA.PRGUNITA(+)
                  AND AM_MOBILITA_ISCR.CODCCNL = CONTRATTO.CODCCNL(+)
                  AND AM_MOBILITA_ISCR.CODMANSIONE       = DE_MANSIONE.CODMANSIONE(+)
                  AND AN_UNITA_AZIENDA.CODCOM        = DE_COMUNE.CODCOM(+)
                  and DE_COMUNE.CODPROVINCIA = provAz.CODPROVINCIA(+)
                  AND UAZ1.CODCOM = COMUNE1.CODCOM(+)
                  and COMUNE1.CODPROVINCIA = provAzOld.CODPROVINCIA(+)
                  AND AM_MOBILITA_ISCR.CODPROVINCIA = PROV.CODPROVINCIA(+)
                  AND AM_MOBILITA_ISCR.PRGMOBILITAISCR = ?
                  and DE_MB_TIPO.codmbtipo = ma.codmbtipo 
                  and ma.codlistespec = mn.cod_listespec(+)"/>

<STATEMENT
  name ="AMSTR_DEL_MOBILITA"
  query="DELETE FROM AM_MOBILITA_ISCR WHERE AM_MOBILITA_ISCR.PRGMOBILITAISCR = ?"/>


<STATEMENT
  name ="AMSTR_HAS_STOR_MOBILITA"
  query="SELECT prgmobilitaiscr 
  		 FROM am_mobilita_iscr mob
	     WHERE mob.cdnlavoratore=?
	     AND mob.datfine is not null
	     AND trunc(mob.datfine) &lt; trunc(SYSDATE)"/>


<!-- Dati Amministrativi LISTE SPECIALI COLLOCAMENTO MIRATO-->
<STATEMENT  name="AMSTR_GET_AM_CM_ISCR"
        query="SELECT I.PRGCMISCR,
                      I.CODCMTIPOISCR,
                      case   	   
              			    when ma.cod_categoria is not null
              			         then (DE_CM_TIPO_ISCR.STRDESCRIZIONE || ' (Min: ' || mn.des_categoria || ')')	     
              			    else DE_CM_TIPO_ISCR.STRDESCRIZIONE || ' (Min: nessuna corrispondenza)'
              		  end as DESCRIZIONEISCR,
                      to_char(I.DATDATAINIZIO,'DD/MM/YYYY') DATINIZIO,
                      to_char(I.DATDATAFINE,'DD/MM/YYYY') DATFINE,
                      I.CODTIPOINVALIDITA,
                      DE_CM_TIPO_INVALIDITA.STRDESCRIZIONE AS DESCRIZIONEINV,
                      to_char(I.DATACCERTSANITARIO,'DD/MM/YYYY') DATACCERTSANITARIO,
                      I.CODACCERTSANITARIO,
                      I.NUMPERCINVALIDITA,
                      I.STRNOTE,
                      to_char(I.DATANZIANITA68, 'DD/MM/YYYY') DATANZIANITA68,
                      to_char(I.DATULTIMAISCR, 'DD/MM/YYYY') DATULTIMAISCR,
                      to_char(I.DTMINS,'DD/MM/YYYY') DTMINS,
                      to_char(I.DTMMOD,'DD/MM/YYYY') DTMMOD,
                      I.CDNUTINS,
                      I.CDNUTMOD,
                      I.NUMKLOCMISCR,
                      DE_CM_TIPO_ISCR.codMonoTipoRagg,
                      nvl(DE_CM_TIPO_ISCR.FLGESCLUDIDAAUTCM, 'N') FLGESCLUDIDAAUTCM,
                      decode (codMonoTipoRagg,'D','Disabili','A','Altri',null,'') TIPO
                FROM AM_CM_ISCR I, DE_CM_TIPO_ISCR, DE_CM_TIPO_INVALIDITA, AM_DOCUMENTO DOC, AM_DOCUMENTO_COLL COLL,
                ma_cat_protette ma, mn_cat_protette mn
               WHERE DECRYPT(I.CDNLAVORATORE, ?) = ?
                 AND DOC.CDNLAVORATORE = ?
                 AND I.CODCMTIPOISCR     = DE_CM_TIPO_ISCR.CODCMTIPOISCR(+)
                 AND I.CODTIPOINVALIDITA = DE_CM_TIPO_INVALIDITA.CODTIPOINVALIDITA(+)
                 AND I.PRGCMISCR = COLL.STRCHIAVETABELLA
                 AND COLL.PRGDOCUMENTO = DOC.PRGDOCUMENTO
                 AND DOC.CODSTATOATTO = 'PR'
                 AND DOC.CODTIPODOCUMENTO = 'L68'
                 AND trunc(nvl(I.DATDATAFINE, sysdate)) &gt;= trunc(sysdate)
                 and ma.codcmtipoiscr = DE_CM_TIPO_ISCR.Codcmtipoiscr
                 and ma.cod_categoria = mn.cod_categoria (+)
                 order by I.PRGCMISCR desc"/>

<!-- Dati Amministrativi LISTE SPECIALI COLLOCAMENTO MIRATO NEGLI IMPATTI-->
<STATEMENT  name="AMSTR_GET_AM_CM_ISCR_IMPATTI"
        query="SELECT I.PRGCMISCR,
                      I.CODCMTIPOISCR,
                      case   	   
                			    when ma.cod_categoria is not null
                			         then (DE_CM_TIPO_ISCR.STRDESCRIZIONE || ' (Min: ' || mn.des_categoria || ')')	     
                			    else DE_CM_TIPO_ISCR.STRDESCRIZIONE || ' (Min: nessuna corrispondenza)'
                	  end as DESCRIZIONEISCR,
                      to_char(I.DATDATAINIZIO,'DD/MM/YYYY') DATINIZIO,
                      to_char(I.DATDATAFINE,'DD/MM/YYYY') DATFINE,
                      I.CODTIPOINVALIDITA,
                      DE_CM_TIPO_INVALIDITA.STRDESCRIZIONE AS DESCRIZIONEINV,
                      to_char(I.DATACCERTSANITARIO,'DD/MM/YYYY') DATACCERTSANITARIO,
                      I.CODACCERTSANITARIO,
                      I.NUMPERCINVALIDITA,
                      I.STRNOTE,
                      to_char(I.DATANZIANITA68, 'DD/MM/YYYY') DATANZIANITA68,
                      to_char(I.DATULTIMAISCR, 'DD/MM/YYYY') DATULTIMAISCR,
                      to_char(I.DTMINS,'DD/MM/YYYY') DTMINS,
                      to_char(I.DTMMOD,'DD/MM/YYYY') DTMMOD,
                      I.CDNUTINS,
                      I.CDNUTMOD,
                      I.NUMKLOCMISCR,
                      DE_CM_TIPO_ISCR.codMonoTipoRagg,
                      nvl(DE_CM_TIPO_ISCR.FLGESCLUDIDAAUTCM, 'N') FLGESCLUDIDAAUTCM,
                      decode (codMonoTipoRagg,'D','Disabili','A','Altri',null,'') TIPO
                FROM AM_CM_ISCR I, DE_CM_TIPO_ISCR, DE_CM_TIPO_INVALIDITA,
                ma_cat_protette ma, mn_cat_protette mn
               WHERE DECRYPT(I.CDNLAVORATORE, ?) = ?
                 AND codMonoTipoRagg = 'D'
                 AND I.CODCMTIPOISCR     = DE_CM_TIPO_ISCR.CODCMTIPOISCR(+)
                 AND I.CODTIPOINVALIDITA = DE_CM_TIPO_INVALIDITA.CODTIPOINVALIDITA(+)
                 AND I.CODSTATOATTO = 'PR'
		 		AND trunc(nvl(I.DATDATAFINE, sysdate)) &gt;= trunc(sysdate)
			    and ma.codcmtipoiscr = DE_CM_TIPO_ISCR.Codcmtipoiscr
                 and ma.cod_categoria = mn.cod_categoria (+)
                 order by I.PRGCMISCR desc"/>

<STATEMENT  name="AMSTR_GET_ALL_AM_CM_ISCR_DISABILI_IMPATTI"
        query="SELECT I.PRGCMISCR,
                      I.CODCMTIPOISCR,
                      case   	   
                			    when ma.cod_categoria is not null
                			         then (DE_CM_TIPO_ISCR.STRDESCRIZIONE || ' (Min: ' || mn.des_categoria || ')')	     
                			    else DE_CM_TIPO_ISCR.STRDESCRIZIONE || ' (Min: nessuna corrispondenza)'
                	  end as DESCRIZIONEISCR,
                      to_char(I.DATDATAINIZIO,'DD/MM/YYYY') DATINIZIO,
                      to_char(I.DATDATAFINE,'DD/MM/YYYY') DATFINE,
                      I.CODTIPOINVALIDITA,
                      DE_CM_TIPO_INVALIDITA.STRDESCRIZIONE AS DESCRIZIONEINV,
                      to_char(I.DATACCERTSANITARIO,'DD/MM/YYYY') DATACCERTSANITARIO,
                      I.CODACCERTSANITARIO,
                      I.NUMPERCINVALIDITA,
                      I.STRNOTE,
                      to_char(I.DATANZIANITA68, 'DD/MM/YYYY') DATANZIANITA68,
                      to_char(I.DATULTIMAISCR, 'DD/MM/YYYY') DATULTIMAISCR,
                      to_char(I.DTMINS,'DD/MM/YYYY') DTMINS,
                      to_char(I.DTMMOD,'DD/MM/YYYY') DTMMOD,
                      I.CDNUTINS,
                      I.CDNUTMOD,
                      I.NUMKLOCMISCR,
                      DE_CM_TIPO_ISCR.codMonoTipoRagg,
                      nvl(DE_CM_TIPO_ISCR.FLGESCLUDIDAAUTCM, 'N') FLGESCLUDIDAAUTCM,
                      decode (codMonoTipoRagg,'D','Disabili','A','Altri',null,'') TIPO
                FROM AM_CM_ISCR I, DE_CM_TIPO_ISCR, DE_CM_TIPO_INVALIDITA,
                ma_cat_protette ma, mn_cat_protette mn
               WHERE DECRYPT(I.CDNLAVORATORE, ?) = ?
                 AND DE_CM_TIPO_ISCR.codMonoTipoRagg = 'D'
                 AND I.CODCMTIPOISCR     = DE_CM_TIPO_ISCR.CODCMTIPOISCR(+)
                 AND I.CODTIPOINVALIDITA = DE_CM_TIPO_INVALIDITA.CODTIPOINVALIDITA(+)
                 AND I.CODSTATOATTO = 'PR'
			     and ma.codcmtipoiscr = DE_CM_TIPO_ISCR.Codcmtipoiscr
                 and ma.cod_categoria = mn.cod_categoria (+)
                 order by nvl(I.DATDATAFINE, sysdate) desc, I.DATDATAINIZIO desc"/>
                 
<STATEMENT  name="AMSTR_GET_DETTAGLIO_AM_CM_ISCR"
        query="SELECT I.PRGCMISCR,
                      I.CODCMTIPOISCR,
                      case   	   
              			    when ma.cod_categoria is not null
              			         then (DE_CM_TIPO_ISCR.STRDESCRIZIONE || ' (Min: ' || mn.des_categoria || ')')	     
              			    else DE_CM_TIPO_ISCR.STRDESCRIZIONE || ' (Min: nessuna corrispondenza)'
              		  end as DESCRIZIONEISCR,
                      to_char(I.DATDATAINIZIO,'DD/MM/YYYY') DATINIZIO,
                      to_char(I.DATDATAFINE,'DD/MM/YYYY') DATFINE,
                      I.CODTIPOINVALIDITA,
                      DE_CM_TIPO_INVALIDITA.STRDESCRIZIONE AS DESCRIZIONEINV,
                      to_char(I.DATACCERTSANITARIO,'DD/MM/YYYY') DATACCERTSANITARIO,
                      I.CODACCERTSANITARIO,
                      I.NUMPERCINVALIDITA,
                      I.STRNOTE,
                      to_char(I.DATANZIANITA68, 'DD/MM/YYYY') DATANZIANITA68,
                      to_char(I.DATULTIMAISCR, 'DD/MM/YYYY') DATULTIMAISCR,
                      to_char(I.DTMINS,'dd/mm/yyyy HH24:MI') DTMINS,
                      to_char(I.DTMMOD,'dd/mm/yyyy HH24:MI') DTMMOD,
                      I.CDNUTINS,
                      I.CDNUTMOD,
                      I.NUMKLOCMISCR,
                      DE_CM_TIPO_ISCR.codMonoTipoRagg,
                      nvl(DE_CM_TIPO_ISCR.FLGESCLUDIDAAUTCM, 'N') FLGESCLUDIDAAUTCM,
                      decode (codMonoTipoRagg,'D','Disabili','A','Altri',null,'') TIPO
                FROM AM_CM_ISCR I, DE_CM_TIPO_ISCR, DE_CM_TIPO_INVALIDITA,
                ma_cat_protette ma, mn_cat_protette mn
               WHERE I.PRGCMISCR = ?
                 AND I.CODCMTIPOISCR     = DE_CM_TIPO_ISCR.CODCMTIPOISCR(+)
                 AND I.CODTIPOINVALIDITA = DE_CM_TIPO_INVALIDITA.CODTIPOINVALIDITA(+)
                 and ma.codcmtipoiscr = DE_CM_TIPO_ISCR.Codcmtipoiscr
                 and ma.cod_categoria = mn.cod_categoria (+) "/>   


<STATEMENT  name="AMSTR_GET_DE_CM_TIPO_ISCR"
        query="SELECT T.CODCMTIPOISCR CODICE,
				case   	   
				when ma.cod_categoria is not null
				     then (T.STRDESCRIZIONE || ' (Min: ' || mn.des_categoria || ')')	     
				     else T.STRDESCRIZIONE || ' (Min: nessuna corrispondenza)'
				end as DESCRIZIONE,
				T.DATINIZIOVAL,
				T.DATFINEVAL
				FROM DE_CM_TIPO_ISCR T
				inner join ma_cat_protette ma on ma.codcmtipoiscr= t.codcmtipoiscr
				left join mn_cat_protette mn on mn.cod_categoria= ma.cod_categoria
				ORDER BY DESCRIZIONE"/>

<STATEMENT  name="AMSTR_GET_DE_CM_TIPO_INVALIDITA"
        query="SELECT T.CODTIPOINVALIDITA CODICE,
                      T.STRDESCRIZIONE DESCRIZIONE,
                      T.DATINIZIOVAL,
                      T.DATFINEVAL
                      FROM DE_CM_TIPO_INVALIDITA T
                      WHERE T.CODTIPOINVALIDITA IN
		               (
		                SELECT TC.CODICE
		                FROM TS_CONFIG_CODIFICA TC
		                WHERE TC.NOMETABELLA='DE_CM_TIPO_INVALIDITA' AND TC.CODTIPOCONFIG = 'CM_ISCR' AND TC.CONFIGURAZIONE = NVL(
		                (SELECT TL.NUM
		                FROM TS_CONFIG_LOC TL
		                WHERE TL.STRCODRIF = (SELECT TS_GENERALE.CODPROVINCIASIL FROM TS_GENERALE)
		                AND TL.CODTIPOCONFIG = 'CM_ISCR'),0)
		                )ORDER BY DESCRIZIONE"/>

<STATEMENT  name="AMSTR_GET_DE_CM_ACCSANIT"
        query="SELECT cmas.CODACCERTSANITARIO CODICE,
                      cmas.STRDESCRIZIONE ||
                        DECODE(SYSDATE, GREATEST(SYSDATE, cmas.DATFINEVAL),  ' (scaduto)',
                                                           LEAST   (SYSDATE, cmas.DATINIZIOVAL),' (scaduto)', 
                                                           ''
                                                 ) AS DESCRIZIONE
	   
                 FROM DE_CM_ACCERT_SANITARIO cmas"/>

<STATEMENT  name="AMSTR_SAVE_CM_ISCR"
        query="UPDATE AM_CM_ISCR T SET
                      T.DATDATAINIZIO = TO_DATE(?,'DD/MM/YYYY'),
                      T.DATDATAFINE   = TO_DATE(?,'DD/MM/YYYY'),
                      T.CODCMTIPOISCR = ?,
                      T.CODTIPOINVALIDITA = ?,
                      T.NUMPERCINVALIDITA = ?,
                      T.DATACCERTSANITARIO = TO_DATE(?,'DD/MM/YYYY'),
                      T.CODACCERTSANITARIO = ?,
                      T.STRNOTE  = ?, 
                      T.DATANZIANITA68=TO_DATE(?, 'DD/MM/YYYY'),
                      T.DATULTIMAISCR=TO_DATE(?, 'DD/MM/YYYY'),                      
                      T.CDNUTMOD = ?,
                      T.DTMMOD   = SYSDATE, 
                      T.NUMKLOCMISCR  = ?
                WHERE T.PRGCMISCR = ?"/>

<STATEMENT  name="AMSTR_INS_CM_ISCR"
        query="INSERT INTO AM_CM_ISCR 
                    (PRGCMISCR,
                     CDNLAVORATORE,
                     DATDATAINIZIO,
                     DATDATAFINE,
                     CODCMTIPOISCR,
                     CODTIPOINVALIDITA, 
                     NUMPERCINVALIDITA,
                     DATACCERTSANITARIO,
                     CODACCERTSANITARIO,
                     PRGDICHDISPONIBILITA,
                     NUMBASEDIPARTENZA, 
                     NUMPUNTIANZIANITA, 
                     NUMPUNTIFIGLIEINVACARICO, 
                     NUMPUNTIALTREPERSACARICO,
                     NUMPUNTIREDDITO,
                     STRNOTE, 
                     DATANZIANITA68, DATULTIMAISCR,
                     DTMINS, DTMMOD, CDNUTINS, CDNUTMOD
                    )
             VALUES (?, 
                     ENCRYPT(?,?), 
                     TO_DATE(?,'DD/MM/YYYY'), 
                     TO_DATE(?,'DD/MM/YYYY'), 
                     ?,?,?,
                     TO_DATE(?,'DD/MM/YYYY'),?,
                     ?,?,?,?,?,?, 
                     ?, 
                     TO_DATE(?, 'DD/MM/YYYY'), TO_DATE(?, 'DD/MM/YYYY),
                     SYSDATE, SYSDATE, ?, ? 
                    )"/>
<STATEMENT
  name="GET_SPEC_CM"
  query="SELECT I.PRGCMISCR,
       			I.CODCMTIPOISCR,
       			case   	   
       			    when ma.cod_categoria is not null
       			         then (DE_CM_TIPO_ISCR.STRDESCRIZIONE || ' (Min: ' || mn.des_categoria || ')')	     
       			    else DE_CM_TIPO_ISCR.STRDESCRIZIONE || ' (Min: nessuna corrispondenza)'
       			end as codAccSanitario,
       			to_char(I.DATDATAINIZIO,'DD/MM/YYYY') DATINIZIO,
       			to_char(I.DATDATAFINE,'DD/MM/YYYY') DATFINE,
       			I.CODTIPOINVALIDITA,
       			DE_CM_TIPO_INVALIDITA.STRDESCRIZIONE AS DESCRIZIONEINV,
       			I.NUMPERCINVALIDITA,
       			I.STRNOTE,
	   			I.NUMISCRIZIONE,
	   			to_char(I.DATSOSPENSIONE,'DD/MM/YYYY') DATSOSPENSIONE,
	   			I.NUMMESISOSPESTERNI,
	   			to_char(I.DATACCERTSANITARIO,'DD/MM/YYYY') DATACCERTSANITARIO,
	   			decode(verb.datverbaleprimaist,NULL,'',TO_CHAR(verb.datverbaleprimaist,'dd/mm/yyyy') || ' - ' || 
	   				    SUBSTR(verb.strverbaleprimaist, 0,45) || '...' ) as verbale,
	   			decode(I.PRGSPIMOD,NULL,'',AN_SPI.STRCOGNOME || '  ' || AN_SPI.STRNOME) as operatore,
	   			to_char(I.DATANZIANITA68, 'DD/MM/YYYY') DATANZIANITA68,
       			to_char(I.DATULTIMAISCR, 'DD/MM/YYYY') DATULTIMAISCR,
       			to_char(I.DTMINS,'DD/MM/YYYY') DTMINS,
       			to_char(I.DTMMOD,'DD/MM/YYYY') DTMMOD,
       			I.CDNUTINS,
       			I.CDNUTMOD,
       			I.NUMKLOCMISCR,
				ATTO.STRDESCRIZIONE as STATO, 
				to_char(DOC.DATPROTOCOLLO,'dd/mm/yyyy') as dataProt, 
			    to_char(DOC.DATPROTOCOLLO,'DD/MM/YYYY hh24:mi') as dataOraProt, 
				DOC.NUMPROTOCOLLO as NUMPROTOCOLLO, DOC.NUMANNOPROT as numAnnoProt,
				nvl(DE_CM_TIPO_ISCR.FLGESCLUDIDAAUTCM, 'N') FLGESCLUDIDAAUTCM,
       			DE_CM_TIPO_ISCR.codMonoTipoRagg
		FROM AM_CM_ISCR I, DE_CM_TIPO_ISCR, DE_CM_TIPO_INVALIDITA, CM_VERBALE_ACCERT verb, AN_SPI,
			 AM_DOCUMENTO_COLL COLL,AM_DOCUMENTO DOC,DE_STATO_ATTO ATTO,
			 ma_cat_protette ma, mn_cat_protette mn
		WHERE I.CODCMTIPOISCR = DE_CM_TIPO_ISCR.CODCMTIPOISCR(+)
	  		  AND I.PRGVERBALEACC = verb.PRGVERBALEACC(+)
	  		  AND I.PRGSPIMOD = AN_SPI.PRGSPI(+)
      		  AND I.CODTIPOINVALIDITA = DE_CM_TIPO_INVALIDITA.CODTIPOINVALIDITA(+)
			  AND I.PRGCMISCR = COLL.STRCHIAVETABELLA
			  AND COLL.PRGDOCUMENTO = DOC.PRGDOCUMENTO AND DOC.CODTIPODOCUMENTO = 'L68'
			  AND DOC.CODSTATOATTO = ATTO.CODSTATOATTO
			  and ma.codcmtipoiscr = DE_CM_TIPO_ISCR.Codcmtipoiscr
              and ma.cod_categoria = mn.cod_categoria (+)
              AND I.PRGCMISCR = ? AND DOC.CDNLAVORATORE = DECRYPT(I.CDNLAVORATORE, ?)
"/>

<STATEMENT
  name ="AMSTR_DEL_CM"
  query="DELETE FROM AM_CM_ISCR WHERE AM_CM_ISCR.PRGCMISCR = ?"/>

<STATEMENT
  name ="GETSTATOATTOISCR_CM"
  query="SELECT de_stato_atto.CODSTATOATTO as codice, de_stato_atto.STRDESCRIZIONE as descrizione  
  		FROM de_stato_atto, de_stato_atto_lst_tab 
		WHERE  de_stato_atto_lst_tab.CODSTATOATTO = de_stato_atto.CODSTATOATTO
		AND de_stato_atto_lst_tab.CODLSTTAB = 'AM_CM_IS'"/>

<STATEMENT
    name="AMSTR_HAS_STOR_CM"
    query="SELECT cm.prgCmIscr
		   FROM am_cm_iscr cm
		   WHERE trunc(nvl(cm.datDataFine,sysdate)) &lt; trunc(sysdate)
		   AND DECRYPT(cm.CDNLAVORATORE, ?) = ?"/>


<!-- Dati Amministrativi INDISPONIBILITA TEMPORANEA-->
<STATEMENT 
        name="AMSTR_GET_INDISP_TEMP"
        query="SELECT am_indisp_temp.prgindisptemp, am_indisp_temp.codindisptemp,
			       de_indisp_temp.strdescrizione descrizione,
			       TO_CHAR (am_indisp_temp.datinizio, 'DD/MM/YYYY') datinizio,
			       TO_CHAR (am_indisp_temp.datfine, 'DD/MM/YYYY') datfine,
			       am_indisp_temp.strnote,
			       TO_CHAR (am_indisp_temp.dtmins, 'DD/MM/YYYY') dtmins,
			       TO_CHAR (am_indisp_temp.dtmmod, 'DD/MM/YYYY') dtmmod,
			       am_indisp_temp.cdnutins, am_indisp_temp.cdnutmod       
			  FROM   am_indisp_temp,
			       de_indisp_temp       
			  WHERE am_indisp_temp.cdnlavoratore = ?
				   AND (am_indisp_temp.codindisptemp = de_indisp_temp.codindisptemp)
				   AND NVL (am_indisp_temp.datfine, SYSDATE) >= SYSDATE
			order by datinizio desc
"/>

<STATEMENT 
        name="AMSTR_GET_INDISP_TEMP_CUSTOM"
        query="SELECT am_indisp_temp.prgindisptemp, am_indisp_temp.codindisptemp,
			       de_indisp_temp.strdescrizione descrizione,
			       TO_CHAR (am_indisp_temp.datinizio, 'DD/MM/YYYY') datinizio,
			       TO_CHAR (am_indisp_temp.datfine, 'DD/MM/YYYY') datfine,
			       am_indisp_temp.strnote,
			       TO_CHAR (am_indisp_temp.dtmins, 'DD/MM/YYYY') dtmins,
			       TO_CHAR (am_indisp_temp.dtmmod, 'DD/MM/YYYY') dtmmod,
			       am_indisp_temp.cdnutins, am_indisp_temp.cdnutmod       
			  FROM   am_indisp_temp,
			       de_indisp_temp       
			  WHERE am_indisp_temp.cdnlavoratore = ?
				   AND (am_indisp_temp.codindisptemp = de_indisp_temp.codindisptemp)
				   AND TRUNC(NVL(am_indisp_temp.datfine, SYSDATE)) >= TRUNC(SYSDATE)
			order by datinizio desc
"/>

<STATEMENT 
        name="AMSTR_HAS_STOR_INDISP"
        query="SELECT prgIndisptemp 
        	   FROM am_indisp_temp ind
			   WHERE ind.cdnlavoratore=?
			   AND ind.datfine &lt; SYSDATE"/>

<STATEMENT 
        name="AMSTR_HAS_STOR_INDISP_CUSTOM"
        query="SELECT prgIndisptemp 
        	   FROM am_indisp_temp ind
			   WHERE ind.cdnlavoratore=?
			   AND trunc(ind.datfine) &lt; trunc(SYSDATE)"/>

<!--
    Info correnti lavoratore: titolo principale
-->
<STATEMENT  name="GET_INFO_CORR_LAV_TITOLO_PRINCIPALE"
        query="SELECT prs.prgstudio, prs.codtitolo, tit.strdescrizione as destitolo, prs.codtipotitolo, 
                tit2.strdescrizione as destipotitolo, prs.strspecifica, 
                prs.numanno numanno, prs.flgPrincipale
                FROM pr_studio prs
                INNER JOIN de_titolo tit ON prs.codtitolo=tit.codtitolo
                INNER JOIN de_titolo tit2 ON prs.codtipotitolo=tit2.codtitolo
                WHERE cdnLavoratore=?
                and nvl(prs.flgprincipale,'N')='S'"/>


<STATEMENT  name="AMSTR_GET_DE_INDISP_TEMP"
        query="SELECT T.CODINDISPTEMP CODICE,
				T.STRDESCRIZIONE as descrizione, 
			    DECODE(SYSDATE,
			      GREATEST(SYSDATE, T.DATINIZIOVAL, T.DATFINEVAL), 'SCADUTE',
			        LEAST(SYSDATE, T.DATINIZIOVAL, T.DATFINEVAL),'SCADUTE', 
			        'VALIDE') as gruppo,
			    DECODE(SYSDATE,
			      GREATEST(SYSDATE, T.DATINIZIOVAL, T.DATFINEVAL), 2,
			        LEAST(SYSDATE, T.DATINIZIOVAL, T.DATFINEVAL), 2, 
			        1) as ordine_gruppo, 
				T.DATINIZIOVAL, 
				T.DATFINEVAL
				FROM DE_INDISP_TEMP T                               
				WHERE T.CODINDISPTEMP IN (
				SELECT TC.CODICE
				FROM TS_CONFIG_CODIFICA TC
				WHERE TC.NOMETABELLA='DE_INDISP_TEMP' AND TC.CODTIPOCONFIG = 'DE_INDIS' AND TC.CONFIGURAZIONE = NVL(
				(SELECT TL.NUM
				FROM TS_CONFIG_LOC TL
				WHERE TL.STRCODRIF = (SELECT TS_GENERALE.CODPROVINCIASIL FROM TS_GENERALE)
				AND TL.CODTIPOCONFIG = 'DE_INDIS'),0)
				)
       		order by ordine_gruppo, DECODE(T.FLGINDISPTEMP,'S', 0, 1), DECODE(substr(t.codindisptemp, 1, 2),'LP', codindisptemp || ' - ', '' ) || STRDESCRIZIONE "/>
				
<STATEMENT  name="AMSTR_INS_AM_INDISP_TEMP"
        query="INSERT INTO AM_INDISP_TEMP 
                      (PRGINDISPTEMP, 
                       CDNLAVORATORE, 
                       CODINDISPTEMP,
                       DATINIZIO, DATFINE, 
                       STRNOTE, DTMINS, DTMMOD, CDNUTINS,  CDNUTMOD,
                       FLGDOCUMENTATA
                      ) 
               VALUES (?,
                       ?, ?,
                       TO_DATE(?,'DD/MM/YYYY'),TO_DATE(?,'DD/MM/YYYY'),
                       ?, SYSDATE, SYSDATE, ?, ?, ?)"/>

<STATEMENT  name="AMSTR_DEL_INDISP_TEMP"
        query="DELETE FROM  AM_INDISP_TEMP 
                      WHERE PRGINDISPTEMP = ?"/>

<STATEMENT  name="AMSTR_SAVE_AM_INDISP_TEMP"
        query="UPDATE AM_INDISP_TEMP SET
                       CODINDISPTEMP = ?,
                       DATINIZIO     = TO_DATE(?,'DD/MM/YYYY'), 
                       DATFINE       = TO_DATE(?,'DD/MM/YYYY'), 
                       STRNOTE       = ?, 
                       DTMMOD        = SYSDATE, 
                       CDNUTMOD      = ?,
                       NUMKLOINDISPTEMP = ?,
                       FLGDOCUMENTATA = ?
                WHERE  CDNLAVORATORE = ? AND PRGINDISPTEMP = ? "/>
<!--
	modificata per permettere di riprendere l' eventuale patto associato alle indisponibilita'
-->
<STATEMENT 
        name="AMSTR_GET_INDISPTEMP_DETT"
        query="SELECT am_indisp_temp.codindisptemp, am_indisp_temp.prgindisptemp,
			       de_indisp_temp.strdescrizione descrizione,
			       TO_CHAR (am_indisp_temp.datinizio, 'DD/MM/YYYY') datinizio,
			       TO_CHAR (am_indisp_temp.datfine, 'DD/MM/YYYY') datfine,
			       am_indisp_temp.strnote,
			       TO_CHAR (am_indisp_temp.dtmins, 'dd/mm/yyyy HH24:MI') dtmins,
			       TO_CHAR (am_indisp_temp.dtmmod, 'dd/mm/yyyy HH24:MI') dtmmod,
			       am_indisp_temp.cdnutins, am_indisp_temp.cdnutmod,
			       am_indisp_temp.numkloindisptemp,
			       am_indisp_temp.flgDocumentata
			  FROM am_indisp_temp,
			       de_indisp_temp
			  WHERE AM_INDISP_TEMP.CDNLAVORATORE =? AND AM_INDISP_TEMP.PRGINDISPTEMP =?
			       AND (AM_INDISP_TEMP.CODINDISPTEMP = DE_INDISP_TEMP.CODINDISPTEMP)					   
			  ORDER BY DATINIZIO DESC"/>



<!-- Dati Amministrativi MOVIMENTO -->
<STATEMENT  name="AMSTR_GET_MOVIMENTO" 
        query="SELECT T1.PRGMOVIMENTO, 
                      T1.PRGMOVIMENTOPREC, 
		      T1.PRGMOVIMENTOSUCC, 
                      T1.CDNLAVORATORE,
					  CASE
					  WHEN NVL(T1.DATINIZIOAVV,SYSDATE) = SYSDATE 
						THEN to_char(T1.DATINIZIOMOV,'DD/MM/YYYY')

						WHEN NVL(T1.DATINIZIOAVV,SYSDATE) &lt;&gt; SYSDATE 
						THEN to_char(T1.DATINIZIOAVV,'DD/MM/YYYY')
					  END AS DATINIZIOMOV,
  					CASE
					  WHEN NVL(T1.DATINIZIOAVV,SYSDATE) = SYSDATE 
						THEN T1.CODTIPOMOV
						WHEN NVL(T1.DATINIZIOAVV,SYSDATE) &lt;&gt; SYSDATE 
						THEN 'AVV'
					  END AS CODTIPOMOV, 
                      T1.CODMANSIONE,
                      T3.STRDESCRIZIONE AS DESCRIZIONEMANS,
                      T1.CODCONTRATTO,
                      case
                        when T2.CODCONTRATTO = 'LT' /*Tempo determinato*/
                        then decode(T1.CODMONOTEMPO,'D',T2.STRDESCRIZIONE,'I','Lavoro dipendente TI')
                        when T2.CODCONTRATTO = 'LP' /*Tempo indeterminato*/                        
                        then decode(T1.CODMONOTEMPO,'D','Lavoro dipendente TD','I',T2.STRDESCRIZIONE)
                        when T2.CODCONTRATTO not in ('LP','LT')
                        then T2.STRDESCRIZIONE
                       END
                       AS DESCRIZIONECONTR,
                       (case
                       	when T1.DECRETRIBUZIONEANN is not null then T1.DECRETRIBUZIONEANN
                        else (T1.DECRETRIBUZIONEMEN * 12)
                       end) AS RETRIBANNUA,
                      case 
                        when T1.codTipoMov = 'CES' 
                        then to_Char(T1.DATINIZIOMOV,'dd/mm/yyyy')
                        when T1.codTipoMov &lt;&gt; 'CES' 
                        then to_Char(T1.DATFINEMOVEFFETTIVA,'dd/mm/yyyy')
                      end AS DATFINEMOV,
                      to_char(PG_INFO_RIASS.trova_motivo_ces(T1.PRGMOVIMENTO)) motivo_cessazione ,  
                      T1.CDNUTINS, 
                      to_char(T1.DTMINS,'DD/MM/YYYY') DTMINS,
                      T1.CDNUTMOD, 
                      to_char(T1.DTMMOD,'DD/MM/YYYY') DTMMOD,
                      T1.NUMKLOMOV, substr(AN.STRRAGIONESOCIALE,1,35) || '...' as STRRAGIONESOCIALE
                 FROM AM_MOVIMENTO T1, DE_CONTRATTO T2, DE_MANSIONE T3,AN_AZIENDA AN, DE_TIPO_CONTRATTO TIPASS
                WHERE T1.CDNLAVORATORE  = ?
                  AND T1.CODSTATOATTO NOT IN ('AN','AR','AU')
                  AND T1.CODCONTRATTO   = T2.CODCONTRATTO(+)
                  AND T1.CODMANSIONE    = T3.CODMANSIONE 
                  AND T1.PRGAZIENDA     = AN.PRGAZIENDA
   				  AND T1.CODTIPOCONTRATTO = TIPASS.CODTIPOCONTRATTO(+)
                       AND
					    ( (   (T1.DATFINEMOVEFFETTIVA IS NULL
                              AND T1.datInizioMov = (SELECT MAX(T4.datInizioMov)
                                                    FROM AM_MOVIMENTO T4, DE_TIPO_CONTRATTO dta
                                                   WHERE T4.DATFINEMOVEFFETTIVA IS NULL
                                                   	 AND T4.CODSTATOATTO NOT IN ('AN','AR','AU')
                                                     AND T4.CDNLAVORATORE = T1.CDNLAVORATORE
													 AND T4.CODTIPOMOV  &lt;&gt; 'CES'
													 AND nvl(dta.codmonotipo,' ') &lt;&gt; 'T'
													 )
                                )
                           OR (NOT exists (SELECT T4.datInizioMov
                                                    FROM AM_MOVIMENTO T4, DE_TIPO_CONTRATTO dta
                                                   WHERE T4.DATFINEMOVEFFETTIVA IS NULL
                                                     AND T4.CDNLAVORATORE = T1.CDNLAVORATORE
                                                     AND T4.CODSTATOATTO NOT IN ('AN','AR','AU')
													 AND T4.CODTIPOMOV  &lt;&gt; 'CES'
													 AND nvl(dta.codmonotipo,' ') &lt;&gt; 'T'
											)
                              AND T1.DATFINEMOVEFFETTIVA = (SELECT MAX(T4.DATFINEMOVEFFETTIVA)
                                                                          FROM AM_MOVIMENTO T4, DE_TIPO_CONTRATTO dta
                                                                         WHERE NOT T4.DATFINEMOVEFFETTIVA IS NULL
                                                                           AND T4.CDNLAVORATORE = T1.CDNLAVORATORE
                                                                           AND T4.CODSTATOATTO NOT IN ('AN','AR','AU')
																		   AND T4.CODTIPOMOV  &lt;&gt; 'CES'
																		   AND nvl(dta.codmonotipo,' ') &lt;&gt; 'T'
														    )
                                                 )
                            ) AND T1.CODTIPOMOV  &lt;&gt; 'CES'
                      OR ( NOT exists (SELECT T4.datInizioMov
                                                    FROM AM_MOVIMENTO T4, DE_TIPO_CONTRATTO dta
                                                   WHERE T4.CDNLAVORATORE = T1.CDNLAVORATORE
                                                   	 AND T4.CODSTATOATTO NOT IN ('AN','AR','AU')
													 AND T4.CODTIPOMOV  &lt;&gt; 'CES'
													 AND nvl(dta.codmonotipo,' ') &lt;&gt; 'T'
									   )
					       AND T1.datInizioMov = (SELECT MAX(T4.datInizioMov)
                                                    FROM AM_MOVIMENTO T4, DE_TIPO_CONTRATTO dta
                                                   WHERE T4.CDNLAVORATORE = T1.CDNLAVORATORE
                                                     AND T4.CODSTATOATTO NOT IN ('AN','AR','AU')
													 AND T4.CODTIPOMOV  = 'CES'
													 AND nvl(dta.codmonotipo,' ') &lt;&gt; 'T'
												   )
							AND T1.CODTIPOMOV  = 'CES')
					 )"/> <!-- L'ALIAS 'DATFINEMOV' E' STATO LASCIATO COSI' PERCHE' GIA' UTILIZZATO NELLE PAGINE 
                     /*to_char(T1.DATFINEMOVEFFETTIVA,'DD/MM/YYYY') DATFINEMOV,*/-->

<!-- Reperisce le informazioni correnti da inserire nella testata comune ad ogni pagina -->
<STATEMENT  name="GET_InfoCorrentiLav"
        query="SELECT distinct an_.strcognome as Cognome,
                      an_.strnome as Nome,
                      an_.STRCODICEFISCALE as CodiceFiscale,
                      storia_inf.codcpitit ,
                      cpi.strdescrizione as DescCPI,
                      (de_.strdescrizione ||': ' || de.strdescrizione) as DescRagg,
                      de.strdescrizione  as DescStato, 
                      to_char(ela.datInizio, 'dd/mm/yyyy') as datInizio
				
                FROM an_lavoratore an_,
                     an_lav_storia_inf storia_inf,
                     de_cpi cpi,
                     am_stato_occupaz am,
                     de_stato_occupaz de,
                     de_stato_occupaz_ragg de_,
                     am_elenco_anagrafico ela
	   
               WHERE ((an_.cdnlavoratore  = storia_inf.cdnlavoratore(+))
                  AND (cpi.codcpi(+)      = storia_inf.codcpitit)
                  AND (an_.cdnlavoratore  = am.cdnlavoratore(+))
                  AND (de.codstatooccupaz(+) = am.codstatooccupaz)
                  AND (de_.codstatooccupazragg(+) = de.codstatooccupazragg)
                  AND (an_.CDNLAVORATORE  = ela.cdnLavoratore(+))
                  AND (storia_inf.datfine is null)
                  AND (am.datfine is null)	
                  AND (ela.DATCAN is null)	
                  AND (an_.cdnLavoratore =?))"/>

                  
<!--  aggiunta di una union per permettere di estrarre il codice fiscale del lavoratore non iscritto nell' elenco 
      anagrafico ; questa informazione viene utilizzata per la intestazione delle info correnti popup -->
<STATEMENT  name="GET_InfoCorrentiPopUp"
        query="SELECT to_char(ElA.DATINIZIO,'DD/MM/YYYY') DATINIZIO,
                      decode(StI.codMonoTipoCpi, 'C', StI.CODCPITIT, 'T', StI.CODCPIORIG) as CPiTit,
                      CpI.STRDESCRIZIONE,
                      lav.strcodicefiscale,
					  lav.STRCOGNOME,
				 	  lav.STRNOME                      
                 FROM AN_LAVORATORE lav 
				 	  LEFT JOIN AM_ELENCO_ANAGRAFICO ElA on (ela.CDNLAVORATORE=lav.cdnLavoratore and ElA.datcan IS NULL)
                      LEFT JOIN AN_LAV_STORIA_INF StI on (StI.cdnLavoratore=lav.cdnLavoratore and StI.datfine IS NULL)
					  left join de_cpi CpI on (StI.codCpiTit = CpI.codCpi) 
                WHERE lav.CDNLAVORATORE = ?
			    /*UNION
					SELECT 
							NULL datinizio, 
							NULL codcpitit, 
							NULL strdescrizione,
					        lav.strcodicefiscale
					 FROM an_lavoratore lav
					 WHERE lav.cdnlavoratore = ?
					 	  AND NOT EXISTS (SELECT *
					                     FROM am_elenco_anagrafico a
					                    WHERE a.cdnlavoratore = lav.cdnlavoratore) */
"/>

<STATEMENT  name="GET_InfoCorrentiCorsoLav"
        query="SELECT DISTINCT DE_CORSO.STRDESCRIZIONE AS CORSO,
                               PR_CORSO.NUMANNO, 
                               PR_CORSO.FLGCOMPLETATO
                 FROM PR_CORSO,
                      DE_CORSO
               WHERE PR_CORSO.CODCORSO      = DE_CORSO.CODCORSO
                 AND PR_CORSO.CDNLAVORATORE = ?
                 AND (  (NVL(PR_CORSO.FLGCOMPLETATO, 'N') = 'N')
                        OR (  NVL(PR_CORSO.FLGCOMPLETATO, 'N') = 'S'
                              AND PR_CORSO.NUMANNO = (SELECT MAX(PR_CORSO.NUMANNO)
                                                        FROM PR_CORSO PC
                                                       WHERE NVL(PC.FLGCOMPLETATO, 'N') = 'S'
                                                         AND PC.CDNLAVORATORE = PR_CORSO.CDNLAVORATORE)))"
/>

<STATEMENT name="GET_NEW_AM_INDISP_TEMP"
           query="SELECT s_am_indisp_temp.nextval as prgIndispTemp from dual"/>

<STATEMENT name="GET_NEW_AM_CM_ISCR"
           query="SELECT s_am_cm_iscr.nextval as prgCmIscr from dual"/>
           
        
<STATEMENT name="GET_NEW_AM_MOBILITA_ISCR"
   query="SELECT s_am_mobilita_iscr.nextval as prgMobilitaIscr from dual"
/>  
<STATEMENT name="GET_NEW_AM_EX_PERM_SOGG"
   query="SELECT s_am_ex_perm_sogg.nextval as prgPermSogg from dual"
/>
<STATEMENT name="GET_DATA_NASCITA_LAVORATORE" query="
	select to_char(lav.DATNASC,'dd/mm/yyyy') as datnasc, SYSDATE as dataOdierna from an_lavoratore lav where lav.CDNLAVORATORE = ?
"/>
<STATEMENT name="GET_MOVIMENTI_LAVORATORE" query=" 
	SELECT   TO_CHAR (mov.datfinemoveffettiva, 'dd/mm/yyyy') AS datafinemovimento,
         mov.cdnlavoratore, to_char(SYSDATE, 'dd/mm/yyyy') as dataOdierna, 
         TRUNC (MONTHS_BETWEEN (SYSDATE,nvl(mov.datfinemovEffettiva,sysdate))) as mesiInattivita
    FROM am_movimento mov
    WHERE mov.cdnlavoratore = ? and mov.CODTIPOMOV &lt;&gt; 'CES'
    AND mov.codstatoatto = 'PR'
    ORDER BY nvl(mov.datfinemovEffettiva,sysdate) DESC
"/>
<!--
	PER IL MOMENTO MANTENGO LA GESTIONE DELLA CHIUSURA DEL RECORD PRECEDENTE TRAMITE TRIGGER E PORCEDURE
	
	lo statement viene utilizzato dalla classe StatoOccupazionaleManager.DBStore per la gestione dei controlli 
	all' arrivo dei movimenti

<STATEMENT
      name ="SAVE_STATO_OCCUPAZ_CONTROLLI"
      query="
      			UPDATE AM_STATO_OCCUPAZ SET 
                    AM_STATO_OCCUPAZ.CODSTATOOCCUPAZ     = ?,                      																							
                    /*AM_STATO_OCCUPAZ.DATINIZIO           = TO_DATE(?,'DD/MM/YYYY'),*/
                    AM_STATO_OCCUPAZ.DATFINE             = TO_DATE(?,'DD/MM/YYYY'),																							
                    /*AM_STATO_OCCUPAZ.FLGINDENNIZZATO     = ?,*/
                    /*AM_STATO_OCCUPAZ.FLGPENSIONATO       = ?,  */                    																							
                    /*AM_STATO_OCCUPAZ.NUMREDDITO          = ?,   */                   																							
                    /*AM_STATO_OCCUPAZ.NUMMESISOSP         = ?,*/
                    /*AM_STATO_OCCUPAZ.DATANZIANITADISOC   = TO_DATE(?,'DD/MM/YYYY'),*/
                    /*AM_STATO_OCCUPAZ.STRNUMATTO          = ?, 			*/
                    /*AM_STATO_OCCUPAZ.CODSTATOATTO        = ?,			   		  
                    /*AM_STATO_OCCUPAZ.DATATTO             = TO_DATE(?,'DD/MM/YYYY'),*/			   		  
                    /*AM_STATO_OCCUPAZ.DATRICHREVISIONE    = TO_DATE(?,'DD/MM/YYYY'),	*/	  
                    /*AM_STATO_OCCUPAZ.DATRICORSOGIURISDIZ = TO_DATE(?,'DD/MM/YYYY'),*/		  
                    /*AM_STATO_OCCUPAZ.STRNOTE             = ?,*/
                    AM_STATO_OCCUPAZ.CDNUTMOD            = ?,
                    AM_STATO_OCCUPAZ.DTMMOD              = SYSDATE,
                    AM_STATO_OCCUPAZ.NUMKLOSTATOOCCUPAZ  = ?                      
                WHERE AM_STATO_OCCUPAZ.PRGSTATOOCCUPAZ = ?
"/>
-->


<STATEMENT name="AM_STATO_OCC_NEXTVAL" query="
		SELECT S_AM_STATO_OCCUPAZ.NEXTVAL AS  PRGSTATOOCCUPAZ FROM DUAL
"/>


<STATEMENT name="GET_DATI_LAV" query="
		SELECT AN.STRCODICEFISCALE STRCODICEFISCALE, AN.STRCOGNOME STRCOGNOME, AN.STRNOME STRNOME, 
			   TO_CHAR(AN.DATNASC, 'DD/MM/YYYY') DATNASC, AN.CODCOMNAS CODCOMNAS, AN.STREMAIL STREMAIL
		FROM AN_LAVORATORE AN 
		WHERE AN.cdnLavoratore = ?"/>

<!-- RECUPERA I LAV CHE HANNO UN CERTO CODSTATOOCCUPAZ -->
<STATEMENT name="GET_LAVORATORI_DA_CODSTATOOCCUPAZ" query="
                 SELECT AM_.PRGSTATOOCCUPAZ, AM_.CDNLAVORATORE, 
                        to_char(AM_.DATINIZIO,'dd/mm/yyyy') DATINIZIO, AM_.CODSTATOOCCUPAZ, 
                        AM_.CODMONOPROVENIENZA, AM_.CODCATEGORIA181, 
                        to_char(AM_.DATANZIANITADISOC,'dd/mm/yyyy') DATANZIANITADISOC, AM_.NUMANZIANITAPREC297, 
                        AM_.NUMMESISOSP, to_char(AM_.DATCALCOLOANZIANITA,'dd/mm/yyyy') DATCALCOLOANZIANITA, 
                        to_char(AM_.DATCALCOLOMESISOSP,'dd/mm/yyyy') DATCALCOLOMESISOSP, AM_.NUMREDDITO, 
                        AM_.STRNUMATTO, to_char(AM_.DATATTO,'dd/mm/yyyy') DATATTO, 
                        to_char(AM_.DATRICHREVISIONE,'dd/mm/yyyy') DATRICHREVISIONE, AM_.CODSTATOATTO, 
                        to_char(AM_.DATRICORSOGIURISDIZ,'dd/mm/yyyy') DATRICORSOGIURISDIZ, AM_.FLGINDENNIZZATO, 
                        AM_.FLGPENSIONATO, AM_.NUMKLOSTATOOCCUPAZ, AM_.CODMONOCALCOLOANZIANITAPREC297,
                        AN_.STRCOGNOME, AN_.STRNOME
                 FROM AM_STATO_OCCUPAZ AM_, AN_LAVORATORE AN_
                 WHERE AN_.CDNLAVORATORE = AM_.CDNLAVORATORE
                       AND AM_.DATFINE IS NULL 
                       AND AM_.CODSTATOOCCUPAZ = ?" />


<!-- RECUPERA LE MANSIONI DI UN DATO LAVORATORE -->
<STATEMENT name="GET_TIROCINI_DA_LAV" query="
                      SELECT 
                        PR_.PRGESPLAVORO, PR_.PRGMANSIONE, PR_.NUMMESEFINE, 
                        PR_.NUMANNOFINE, PR_M.CDNLAVORATORE
                      FROM 
                        PR_ESP_LAVORO PR_ inner join PR_MANSIONE PR_M on (PR_.PRGMANSIONE = PR_M.PRGMANSIONE)
                        AND PR_M.CDNLAVORATORE = ?" />


<!-- RECUPERA IL PRGLAVSTORIAINF APERTO PER IL LAVORATORE IN QUESTIONE -->
<STATEMENT name="GET_ANLAVSTORIAINF_DA_CDNLAV" query="
                  SELECT AN_.PRGLAVSTORIAINF
                  FROM AN_LAV_STORIA_INF AN_
                  WHERE AN_.DATFINE IS NULL
                    AND AN_.CDNLAVORATORE = ?" />
                    
                    
                    
                    
                    
<STATEMENT name="GET_TITOLO_STUDIO"
           query="select tit.CODICE, tit.DESCRIZIONE
				  from MN_TITOLO_L1 tit
				  order by DESCRIZIONE"/>
				  
<!-- migrazioni -->
<STATEMENT name="UPDATE_CPI_MIGRAZIONI"
           query="
	UPDATE de_cpi 
	SET strIndirizzo=?, strCap=?, strTel=?, strFax=?, strEMail=?, strEmailPec=?, strResponsabile=?, strIndirizzoStampa=?, 
	strEMailMigrazione=?, codMonoTipoFile=?, numKloCpi=?
	WHERE codCpi=?    
"/>
<STATEMENT name="GET_CPI_MIGRAZIONI"
           query="
	select cpi.codCpi, cpi.strDescrizione, cpi.strTel, cpi.strFax, cpi.strEMail, cpi.strEmailMigrazione, cpi.strLocalita,
		cpi.codMonoTipoFile, cpi.strIndirizzo, cpi.numKloCpi, cpi.datFineVal, cpi.datInizioVal,
		com.strDenominazione as comune, pr.strDenominazione as provincia, pr.strTarga, com.strCap,
		cpi.stremailpec, cpi.strresponsabile, cpi.strindirizzostampa 
	from de_cpi cpi, de_comune com, de_provincia pr
	where cpi.codCpi = ? 
		and cpi.codCom = com.codcom and com.codProvincia = pr.codProvincia
"/>

<STATEMENT name="GET_PROVINCE"
           query="
	select codProvincia as codice, strDenominazione as descrizione
	from de_provincia order by strDenominazione asc
"/>
<STATEMENT name="GET_REGIONI"
           query="
	select codregione as codice, strDenominazione as descrizione
	from de_regione order by strDenominazione asc
"/> 
<STATEMENT name="GET_INFO_MB_CM_ETA_LAV"
           query="
	select lav.cdnLavoratore, to_char(lav.DATNASC,'dd/mm/yyyy') as datNasc, cm.codmonotiporagg, cm.CODCMTIPOISCR, mb.CODTIPOMOB, mb.CODMONOATTIVA codMobilita, sosp.CODMONOATTIVA codSospensione
	from an_lavoratore lav, 
		(select am_cm_iscr.CODCMTIPOISCR , doc.cdnlavoratore, codmonotiporagg
		from am_cm_iscr , de_cm_tipo_iscr, am_documento doc, am_documento_coll coll
		where am_cm_iscr.prgcmiscr = coll.strchiavetabella and coll.prgdocumento = doc.prgdocumento
			 and doc.codtipodocumento = 'L68' and doc.codstatoatto = 'PR'
		     and am_cm_iscr.codcmtipoiscr = de_cm_tipo_iscr.codcmtipoiscr
			 and am_cm_iscr.DATDATAINIZIO &lt;= sysdate and nvl(am_cm_iscr.DATDATAFINE,sysdate) &gt;= sysdate 
			 and codmonotiporagg='D'	 
		) cm, 
		(select CODTIPOMOB, cdnLavoratore, CODMONOATTIVA
		from am_mobilita_iscr, de_mb_tipo
		where am_mobilita_iscr.DATINIZIO &lt;=sysdate and nvl(am_mobilita_iscr.DATFINE, sysdate) &gt;=sysdate
		  and am_mobilita_iscr.CODTIPOMOB = de_mb_tipo.CODMBTIPO
		  and CODMONOATTIVA='A'
		) mb,
		(select CODTIPOMOB, cdnLavoratore, CODMONOATTIVA
		from am_mobilita_iscr, de_mb_tipo
		where am_mobilita_iscr.DATINIZIO &lt;=sysdate and nvl(am_mobilita_iscr.DATFINE, sysdate) &gt;=sysdate
		  and am_mobilita_iscr.CODTIPOMOB = de_mb_tipo.CODMBTIPO
		  and CODMONOATTIVA='S'
		) sosp
		
	where     lav.cdnlavoratore = cm.CDNLAVORATORE(+)
		  and lav.cdnLavoratore = mb.CDNLAVORATORE(+)
		  and lav.cdnLavoratore = sosp.CDNLAVORATORE(+)
		  and lav.cdnlavoratore = ?
"/>
<STATEMENT name="GET_PROVINCIA_SIL"
           query="
	select codProvinciaSil, strdenominazione from ts_generale, de_provincia where codProvinciaSil = codProvincia
"/>

<STATEMENT name="GET_TIPO_ASS"
           query="
	select codMonoTipo from de_tipo_contratto where codTipoContratto = ?
"/>

<!-- gestione della tabella di configurazione per la validazione massiva dei movimenti -->
<STATEMENT
        name="LIST_CONFIG_VALIDAZIONE"
        query="SELECT 
			      cv.PRGCONFIGVALIDAZIONE,
				  cv.STRTIPOAGGIORNAMENTO AS CODICETIPO,
				  DECODE(cv.STRTIPOAGGIORNAMENTO,
						'AZIENDA','Testata azienda',
						'UNITA_PRODUTTIVA','Unit&amp;agrave azienda',
						'SEDE_LEGALE','Sede legale azienda',
						'AZIENDA_UTIL','Testata azienda utilizzatrice',
						'UNITA_UTIL','Unit&amp;agrave azienda utilizzatrice',
						'Codifica inesistente') AS STRCODICETIPO,	  
			      av.STRNOMEATTRIBUTO AS CODICE,
			      av.STRDESCRIZIONEATTR AS DESCRIZIONE
			    FROM 
			      TS_CONFIG_VALIDAZIONE cv, 
			      TS_AZI_VALIDAZIONE av
			    WHERE
			      cv.STRNOMECAMPO = av.STRNOMEATTRIBUTO ORDER BY STRCODICETIPO"/>
                                
<STATEMENT
        name="COMBO_AZI_VALIDAZIONE"
        query="select  STRTIPOAZI AS CODICETIPO,
					   STRNOMEATTRIBUTO AS CODICE,
					   STRDESCRIZIONEATTR AS DESCRIZIONE
	   			from ts_azi_validazione
        "/>


<STATEMENT
        name="INSERT_CONFIG_VALIDAZIONE"
        query="INSERT INTO TS_CONFIG_VALIDAZIONE
                  (prgconfigvalidazione,
                  strtipoaggiornamento,
                  strnomecampo)
                  VALUES 
                  ( s_ts_config_validazione.nextval,
                    ?,
                    ?
                   )"/>


<STATEMENT  
            name="SELECT_UNIQUE_CONFIG_VALIDAZIONE"
            query="SELECT prgconfigvalidazione
                   from ts_config_validazione
                   where strtipoaggiornamento=?
                   and strnomecampo=? " />


<STATEMENT
    name="DELETE_CONFIG_VALIDAZIONE"
    query="DELETE FROM TS_CONFIG_VALIDAZIONE
           WHERE prgconfigvalidazione=?"/>                   
           
<STATEMENT
    name="GET_CONFIG_PERCORSI"
    query="
	    select ts_config_loc.CODTIPOCONFIG, ts_config_loc.NUM, ts_config_loc.STRCODRIF, ts_config_loc.STRVALORE
		from ts_config_loc , ts_generale
		where ts_config_loc.CODTIPOCONFIG = 'DPERLAV'
		and ts_config_loc.DATFINEVAL &gt; sysdate and ts_config_loc.DATINIZIOVAL &lt; sysdate
		and ts_config_loc.STRCODRIF = ts_generale.CODPROVINCIASIL
		and ts_generale.DATFINEVAL &gt; sysdate		
"/>                   
    
<STATEMENT
    name="GET_CONFIG_FLAG_QUALIFICA"
    query="
	    select FlgPLqualifica FROM TS_GENERALE"/>   
          
<STATEMENT
    name="GET_DETT_AZIENDA" query="
		select AZ.strRagioneSociale as strRagioneSocialeAz, mov.STRLUOGODILAVORO, 
			uaz.STRDENOMINAZIONE as strRagioneSocialeUaz, 
		   	uaz.STRINDIRIZZO as strIndirizzoUaz, 
		   	de_comune.STRDENOMINAZIONE ||' ('||de_provincia.strtarga ||')' strComuneUaz, 
		   	uaz.CODCOM codComUaz                  
		from AN_AZIENDA AZ, AN_UNITA_AZIENDA UAZ, am_movimento mov, de_comune, de_provincia
		where mov.PRGAZIENDA = AZ.prgAzienda (+)
			AND mov.prgAzienda = UAZ.prgAzienda (+)
			AND mov.PRGUNITA =   UAZ.prgUnita (+)
			and uaz.CODCOM = de_comune.codcom(+)
			and de_comune.CODPROVINCIA = de_provincia.codProvincia (+)
			and mov.prgmovimento = ?
"/>              
           
<STATEMENT
    name="GET_INFO_PROTOCOLLAZIONE" query="
	SELECT TO_CHAR (doc.datprotocollo, 'dd/mm/yyyy') AS datProtocollo,
		TO_CHAR (doc.datprotocollo, 'dd/mm/yyyy HH24:MI') AS datoraprotocollo,
		TO_CHAR (doc.datprotocollo, 'HH24:MI') AS oraProtocollo,
		doc.numprotocollo AS numprotocollo,
		de_doc_ambito.strdescrizione AS docambito,
		DECODE (doc.codmonoio, 'I', 'Input', 'Output') AS descio
  	FROM        
		am_documento doc,
		am_documento_coll coll,
		am_patto_lavoratore,
		de_doc_tipo,
		de_doc_ambito, de_codifica_patto
 	WHERE 
		doc.prgdocumento = coll.prgdocumento
		AND doc.codstatoatto = 'PR'
		AND coll.strchiavetabella = am_patto_lavoratore.prgpattolavoratore
		AND am_patto_lavoratore.codcodificapatto = de_codifica_patto.codcodificapatto(+)
		AND coll.strchiavetabella = ?
		AND coll.cdncomponente IN (
		                      SELECT t.cdncomponente
		                        FROM ts_componente t
		                       WHERE upper(t.strpage) = upper(?) )
		AND de_doc_tipo.codtipodocumento = doc.codtipodocumento
		AND (   (doc.codtipodocumento = 'PT297' and nvl(am_patto_lavoratore.flgpatto297, nvl(de_codifica_patto.flgpatto297, 'S')) = 'S') 
          OR (doc.codtipodocumento = 'ACLA' and nvl(am_patto_lavoratore.flgpatto297, nvl(de_codifica_patto.flgpatto297, 'S')) = 'N')  )
		AND de_doc_tipo.codambitodoc = de_doc_ambito.codambitodoc
"/>              

<STATEMENT
    name="GET_DICH_LAV" query="
select am_dich_lav.prgDichLav, 
	to_char(am_dich_lav.DATINIZIO,'dd/mm/yyyy') as datInizio,
	de_tipo_dich.STRDESCRIZIONE as tipoDich, 
	am_dich_lav.CDNUTINS, 
	am_dich_lav.CDNUTMOD,
	to_char(am_dich_lav.DTMINS,'dd/mm/yyyy') as DTMINS,
	to_char(am_dich_lav.DTMMOD,'dd/mm/yyyy') as DTMMOD
from am_dich_lav, de_tipo_dich 
where 
	  am_dich_lav.CODTIPODICH = de_tipo_dich.CODTIPODICH
	  and am_dich_lav.prgDichLav = ?    
"/>
<STATEMENT
    name="GET_INFO_GEN_LAVORATORE" query="
    	select CDNLAVORATORE, datNasc, STRCODICEFISCALE, STRCOGNOME, STRNOME, STRINDIRIZZODOM, comDomicilio, 
    		   statoOccupazionale, datInizioSocc, datAnzianitaDisoc, datInizioEa, datInizioDid
    	from (
		select lav.CDNLAVORATORE, to_char(lav.DATNASC, 'dd/mm/yyyy') as datNasc, lav.STRCODICEFISCALE, lav.STRCOGNOME,
			lav.STRNOME, lav.STRINDIRIZZODOM, 
			de_comune.STRDENOMINAZIONE || ' ('|| de_provincia.strTarga ||') - '|| de_comune.STRCAP as comDomicilio,
			de_stato_occupaz.STRDESCRIZIONE as statoOccupazionale,
			to_char(so.datInizio, 'dd/mm/yyyy') as datInizioSocc, 
			to_char(so.datAnzianitaDisoc, 'dd/mm/yyyy') as datAnzianitaDisoc,
			to_char(ea.DATINIZIO, 'dd/mm/yyyy') as datInizioEa,
			to_char(did.DATDICHIARAZIONE, 'dd/mm/yyyy') as datInizioDid
		from 
			an_lavoratore lav left join am_elenco_anagrafico  ea on (lav.cdnlavoratore = ea.cdnlavoratore)
			left join am_dich_disponibilita did on (ea.PRGELENCOANAGRAFICO = did.prgElencoAnagrafico and did.DATFINE is null and did.codstatoatto='PR')
			left join am_stato_occupaz so on (lav.cdnlavoratore = so.cdnlavoratore and so.datfine is null)
			left join de_stato_occupaz on (so.codStatoOccupaz = de_stato_occupaz.codStatoOccupaz)
			inner join de_comune on (lav.CODCOMDOM = de_comune.CODCOM)
			inner join de_provincia on (de_comune.CODPROVINCIA = de_provincia.codProvincia )
		where 
			lav.cdnlavoratore = ?
		order by decode(did.DATDICHIARAZIONE, null, 0, 1) desc
		)
		where rownum = 1
"/>

<STATEMENT
        name="GET_TIPO_DICH"
        query="select distinct de_tipo_dich.codtipodich as codice,
                      de_tipo_dich.strDescrizione as descrizione
                 from de_tipo_dich
                 order by descrizione
"/>


<STATEMENT
        name="GET_DETT_DICH_RED"
        query="select to_char(mov.datiniziomov,'dd/mm/yyyy') datiniziomov , 
               to_char(mov.datfinemoveffettiva,'dd/mm/yyyy') datfinemov, 
        	   mov.codtipomov codtipomov, 
        	   mov.codmonotempo codmonotempo, 
		       dic.decretribuzionemen decretribuzionemen, 
		       dic.decretribuzionemensanata decretribuzionemensanata, 
		       az.strragionesociale strragionesociale, 
		       uaz.strindirizzo strindirizzo,
		       de_comune.strdenominazione strComuneAz, 
		       uaz.strcap strcap
		from            am_dich_lav_dettaglio dic 
		     inner join am_movimento mov on (dic.prgmovimento = mov.prgmovimento)
		     inner join an_azienda az on (mov.prgazienda = az.prgazienda)
		     inner join an_unita_azienda uaz on (    mov.prgazienda = uaz.prgazienda
		                                         and mov.prgunita = uaz.prgunita)
		     inner join de_comune on (uaz.codcom = de_comune.codcom)
		where dic.prgdichlav = ?
"/>

<STATEMENT
        name="GET_DICH_RED"
        query="select to_char (dic.datinizio, 'dd/mm/yyyy') datinizio,
			       dic.flgsupreddito flgsupreddito, dic.strnote strnote,
			       dic.codtipodich codtipodich, cdnutins,
			       to_char (dtmins, 'dd/mm/yyyy HH24:MI') dtmins, cdnutmod,
			       to_char (dtmmod, 'dd/mm/yyyy HH24:MI') dtmmod, codstatoatto,
			       codmotivo
			  from am_dich_lav dic  
			 where dic.prgdichlav =  ?
"/>

<STATEMENT
        name="GET_MOVIMENTI_VALIDATI"
        query="SELECT PRGMOVIMENTO PRGMOV
			   FROM AM_RISULTATO_MOVIMENTO 
			   WHERE PRGVALIDAZIONEMASSIVA = ?
               AND   PRGMOVIMENTO IS NOT NULL
"/>

<STATEMENT 
	name="StatoAttoSelect"
	query="SELECT 
			de.CODSTATOATTO as codice, de.STRDESCRIZIONE as descrizione  
			FROM DE_STATO_ATTO de, DE_STATO_ATTO_LST_TAB ds
			WHERE ds.CODLSTTAB='AM_DIC_L'
			AND de.CODSTATOATTO = ds.CODSTATOATTO"/>

<STATEMENT 
	name="MotivazioneSelect"
	query="SELECT 
			CODMOTIVO as codice, STRDESCRIZIONE as descrizione
			FROM DE_MOT_ANNUL_DICH_LAV"/>
			
<STATEMENT 
	name="GET_MOVIMENTI_COINVOLTI"
	query="select mo.prgmovimento, mo.cdnlavoratore, 
			      to_char(mo.datInizioMov,'dd/mm/yyyy') datInizioMov, mo.CODTIPOMOV,
			      mo.PRGMOVIMENTOPREC
			from am_movimento mo, am_dich_lav_dettaglio de
			where de.PRGDICHLAV = ?
			and de.PRGMOVIMENTO = mo.PRGMOVIMENTO 
			order by mo.DATINIZIOMOV"/>
			
<STATEMENT 
	name="GET_NUMKLOMOV"
	query="select NUMKLOMOV from am_movimento where prgmovimento = ?" />
	
<STATEMENT 
	name="GET_NUMKLODICHLAV"
	query="select numKloDichLav from am_dich_lav  where prgDichLav = ?" />
	
<STATEMENT
	name="UPD_AM_MOVIMENTO"
	query="update am_movimento mo
	   		set decretribuzionemensanata = null, mo.NUMKLOMOV = ?,
	   			CODTIPODICH = null,	DATSITSANATA = null,
	   			PRGDICHLAV = null, DATINIZIOMOVSUPREDDITO = null
	   		where prgmovimento = ?" />

<STATEMENT
	name="UPD_AM_DICH_LAV"
	query="update am_dich_lav 
	   		set codStatoAtto=?, codMotivo=?, numKloDichLav=?
	   		where prgDichLav=?" />

<STATEMENT name="GET_INFO_ANNOTAZIONI"
		query="SELECT N.TXTNOTECPI
				FROM  PR_NOTA_LAV N
				WHERE N.CDNLAVORATORE = ? " />
				
<STATEMENT name="UpdateNoteMobilita"
            query="UPDATE AM_MOBILITA_ISCR SET
            		  AM_MOBILITA_ISCR.CDNLAVORATORE = ?,
                      AM_MOBILITA_ISCR.STRNOTE =?,
                      AM_MOBILITA_ISCR.CDNUTMOD = ?,
                      AM_MOBILITA_ISCR.DTMMOD = SYSDATE ,
                      AM_MOBILITA_ISCR.NUMKLOMOBISCR = ? + 1
                      WHERE AM_MOBILITA_ISCR.PRGMOBILITAISCR = ?"/>
                      
                      
<STATEMENT name="UpdateNoteCM"
            query="UPDATE AM_CM_ISCR  SET
                      AM_CM_ISCR.CDNLAVORATORE = ENCRYPT(?,?),
                      AM_CM_ISCR.STRNOTE  = ?,
                      AM_CM_ISCR.CDNUTMOD = ?,
                      AM_CM_ISCR.DTMMOD   = SYSDATE,
                      AM_CM_ISCR.NUMKLOCMISCR  = ? + 1
                	  WHERE AM_CM_ISCR.PRGCMISCR = ?"/>
                	  
<STATEMENT name="VALIDA_MOV_GET_UNITA_AZIENDALE"
           query="SELECT az.prgazienda,
				  az.STRRAGIONESOCIALE, az.strcodicefiscale, 
				  az.codnatgiuridica, DE_NAT_GIURIDICA.STRDESCRIZIONE as descGiuridica, 
				  az.codtipoazienda, DE_TIPO_AZIENDA.STRDESCRIZIONE as DESCRTIPOAZIENDA,
				  az.strpartitaiva, AN_UNITA_AZIENDA.codccnl, de_contratto_collettivo.STRDESCRIZIONE as descCCNL, 
				  AN_UNITA_AZIENDA.PRGUNITA, 
				  AN_UNITA_AZIENDA.strnumeroinps, 
				  AN_UNITA_AZIENDA.strtel, 
				  AN_UNITA_AZIENDA.strfax, 
				  AN_UNITA_AZIENDA.codcom, 
				  AN_UNITA_AZIENDA.strcap, 
				  AN_UNITA_AZIENDA.STREMAIL, 
				  AN_UNITA_AZIENDA.codateco, 
				  AN_UNITA_AZIENDA.strindirizzo, 
				  AN_UNITA_AZIENDA.strlocalita, 
				  AN_UNITA_AZIENDA.STRNUMREGISTROCOMMITT,  
				  COM.STRDENOMINAZIONE strDescrComune,  
				  ATT.STRDESCRIZIONE strDescrAteco,
				  az.STRNUMALBOINTERINALI
				  FROM AN_AZIENDA az 
				  INNER JOIN AN_UNITA_AZIENDA on (AN_UNITA_AZIENDA.prgazienda = az.prgazienda) 
				  LEFT JOIN DE_NAT_GIURIDICA on (DE_NAT_GIURIDICA.codnatgiuridica = az.codnatgiuridica) 
				  INNER JOIN DE_TIPO_AZIENDA on (DE_TIPO_AZIENDA.codtipoazienda = az.codtipoazienda) 
				  LEFT JOIN de_contratto_collettivo on (de_contratto_collettivo.codccnl = AN_UNITA_AZIENDA.codccnl), 
				  DE_COMUNE COM, 
				  DE_ATTIVITA ATT 
		    WHERE AN_UNITA_AZIENDA.codCom = COM.CODCOM AND
				  AN_UNITA_AZIENDA.codAteco = ATT.codAteco AND
				 AN_UNITA_AZIENDA.PRGAZIENDA = ? AND
				 AN_UNITA_AZIENDA.PRGUNITA = ?"/>
				 
				 
<STATEMENT name="UPDATE_MOVIMENTO"
			query="UPDATE AM_MOVIMENTO
				SET DATINIZIOMOV = TO_DATE(?,'DD/MM/YYYY'),
				DATINIZIOAVV = TO_DATE(?,'DD/MM/YYYY'),
				NUMKLOMOV = ? + 1,
				CDNUTMOD = ?,
				PRGAZIENDA = ?,
				PRGUNITA = ?,
				DTMMOD = SYSDATE,
				DATFINESOSP150 = TO_DATE(?,'DD/MM/YYYY')
				WHERE PRGMOVIMENTO = ?" />
				
<STATEMENT name="SELECT_STATO_OCCUPAZ_DUPLICATO"
			query="select occ.PRGSTATOOCCUPAZ statoOccupaz from Am_stato_occupaz occ
					where occ.CDNLAVORATORE = ?
					and occ.DATINIZIO = to_date(?,'dd/mm/yyyy')"/>
					
<STATEMENT name="UPDATE_AZIENDA_DOC"
			query="UPDATE AM_DOCUMENTO 
					SET PRGAZIENDA = ?,
					PRGUNITA = ?,
					NUMKLODOCUMENTO = ? + 1
					WHERE PRGDOCUMENTO = ?"/>					
					
					
					
					
<STATEMENT name="Update_Azienda_Mov_collegati"
           query="{ call PG_MOVIMENTI.Update_Azienda_Mov_Collegati(?,?,?) }" />
					
					
					
<STATEMENT  name="SELECT_MOVIMENTI_APPOGGIO_FILTRO_CPI"
        query=" SELECT   mov.prgmovimentoapp prgmovapp,
			         TO_CHAR (mov.datcomunicaz, 'DD/MM/YYYY') datcomunicaz,
			         TO_CHAR (mov.datiniziomov, 'DD/MM/YYYY') datamov,
			         SUBSTR (mov.codtipomov, 1, 1) codtipomov, mov.codtipocontratto codtipoass,
			         mov.codmonotempo codmonotempo, mov.strcognome cognomelav,
			         mov.strnome nomelav, mov.strcodicefiscale codfisclav,
			         mov.strazragionesociale ragsocaz,
			            mov.struaindirizzo
			         || ', '
			         || com.strdenominazione
			         || '('
			         || RTRIM (prov.stristat)
			         || ')' indirazienda, mov.codtipocomunic
			    FROM am_movimento_appoggio mov, de_comune com, de_provincia prov
			    WHERE mov.coduacom = com.codcom(+)
			     AND com.codprovincia = prov.codprovincia(+)
			     AND nvl(mov.flgassdacess, 'N') != 'S'
			     AND com.codcpi = ?
			   ORDER BY mov.datiniziomov DESC,
			         DECODE (mov.codtipomov, 'AVV', 1, 'PRO', 2, 'TRA', 3, 'CES', 4) DESC,
			         codtipomov,
			         cognomelav,
			         nomelav,
			         ragsocaz,
			         indirazienda"/>

<STATEMENT
    name="Delete_CmIscr"
    query="DELETE FROM AM_CM_ISCR WHERE PRGCMISCR = ?"/>  
    
<STATEMENT
    name="Delete_Mobilita"
    query="DELETE FROM AM_MOBILITA_ISCR WHERE PRGMOBILITAISCR = ?"/>
    
 
<STATEMENT name="Mob_Get_Durata"
		query="SELECT NUMETAMINIMA, NUMETAMASSIMA, NUMDURATAMOB, NUMANNO
				FROM TS_MB_DURATAMB 
				WHERE TRUNC(DATFINEVAL) &gt;= TRUNC(sysdate) AND
				      TRUNC(DATINIZIOVAL) &lt;= TRUNC(sysdate)"/>
				
<STATEMENT name="Mob_Get_Mesi_Com_ExCassaMezz"
		query="SELECT NUMMESIMOBEXCASSAMEZZ
				FROM DE_COMUNE
				WHERE CODCOM = ? AND
					  TRUNC(DATFINEVAL) &gt;= TRUNC(sysdate) AND
				      TRUNC(DATINIZIOVAL) &lt;= TRUNC(sysdate)" />

<STATEMENT name="AGGIORNA_DATA_FINE_MOBILITA"  query="
	update am_mobilita_iscr set datFine=
		(case
			when to_date(?,'dd/mm/yyyy') &lt; trunc(datInizio) then datInizio
			else to_date(?,'dd/mm/yyyy')
		end),
		dtmMod = sysdate, cdnutmod = ?, numkloMobIscr = ?, codMotivoFine = ?
	where prgMobilitaIscr = ?
"/>

<STATEMENT name="CANCELLA_DECADENZA_TI"  query="
	update am_mobilita_iscr set dtmMod = sysdate, cdnutmod = ?, 
	 	numkloMobIscr = ?, codMotivoFine = null
	where prgMobilitaIscr = ?
"/>

<STATEMENT name="GET_MOB_INFO_SEDE_AZIENDALE"
		query="SELECT uaz.codccnl, contratto.strdescrizione
				FROM an_unita_azienda uaz, de_contratto_collettivo contratto
				WHERE uaz.codccnl = contratto.codccnl(+)
					and uaz.prgazienda = ? and prgunita = ?" />
					
<STATEMENT name="AMSTR_GET_DISPONIBILITA_MOBILITA"
		query="SELECT AM_MOBILITA_ISCR_MANS.PRGMOBILITAISCRMANS, AM_MOBILITA_ISCR_MANS.CODMANSIONE CODICE,
				      DE_MANSIONE.STRDESCRIZIONE DESCRIZIONE, AM_MOBILITA_ISCR_MANS.PRGMOBILITAISCR
				FROM AM_MOBILITA_ISCR_MANS, DE_MANSIONE
				WHERE AM_MOBILITA_ISCR_MANS.CODMANSIONE = DE_MANSIONE.CODMANSIONE
					AND AM_MOBILITA_ISCR_MANS.PRGMOBILITAISCR = ?"/>
				
<STATEMENT name="AMSTR_CANCELLA_DISPONIBILITA_MOBILITA"
		query="DELETE FROM AM_MOBILITA_ISCR_MANS
				WHERE AM_MOBILITA_ISCR_MANS.PRGMOBILITAISCRMANS = ?"/>

<STATEMENT name="AMSTR_INSERISCI_DISPONIBILITA_MOBILITA"
		query="INSERT INTO AM_MOBILITA_ISCR_MANS 
		      (PRGMOBILITAISCRMANS, PRGMOBILITAISCR, CODMANSIONE, CDNUTINS, DTMINS, CDNUTMOD, DTMMOD)
			  VALUES (S_AM_MOBILITA_ISCR_MANS.nextval, ?, ?, ?, sysdate, ?, sysdate)"/>
			  
<STATEMENT name="MOB_DEL_DISPONIBILITA"
		query="DELETE FROM AM_MOBILITA_ISCR_MANS
				WHERE AM_MOBILITA_ISCR_MANS.PRGMOBILITAISCR = ?"/>

<STATEMENT name="GET_INDISPONIBILTA_LAVORATORE"
		query="SELECT PRGINDISPTEMP,
					  TO_CHAR(AM_INDISP_TEMP.DATINIZIO, 'DD/MM/YYYY') DATINIZIO,
					  TO_CHAR(AM_INDISP_TEMP.DATFINE, 'DD/MM/YYYY') DATFINE
				FROM AM_INDISP_TEMP
				WHERE AM_INDISP_TEMP.CDNLAVORATORE = ?
				AND AM_INDISP_TEMP.CODINDISPTEMP = ?
				ORDER BY AM_INDISP_TEMP.DATINIZIO ASC"/>

<STATEMENT name="AGGIORNA_MOBILITA_SCORRIMENTO"  query="
	update am_mobilita_iscr set datFine=
		(case
			when to_date(?,'dd/mm/yyyy') &lt; trunc(datInizio) then datInizio
			else to_date(?,'dd/mm/yyyy')
		end),
		codMotivoFine = 
		(case 
			when codMotivoFine = 'D' and to_date(?,'dd/mm/yyyy') &gt;= trunc(sysdate) then null
			else codMotivoFine 
		end),
		dtmMod = sysdate, cdnutmod = ?, numkloMobIscr = ?, datMaxDiff = to_date(?,'dd/mm/yyyy')
	where prgMobilitaIscr = ?
"/>

<STATEMENT
        name ="GET_DATA_ANZIANITA_ORDINARIO"
        query="
SELECT   de_stato_occupaz_ragg.codstatooccupazragg, 
		 am_stato_occupaz.codstatooccupaz,
         TO_CHAR (am_stato_occupaz.datinizio, 'DD/MM/YYYY') datinizio,
         TO_CHAR (am_stato_occupaz.datfine, 'DD/MM/YYYY') datfine,
         TO_CHAR (am_stato_occupaz.datanzianitadisoc, 'DD/MM/YYYY') datanzianitadisoc,
         case 
              when de_stato_occupaz_ragg.CODSTATOOCCUPAZRAGG in ('D','I')
              then
                   (SELECT SUM (
				          (to_number(
							(to_char(CASE
						 				WHEN NVL (occ.datfine, to_date(?,'dd/mm/yyyy')) &lt;= am_stato_occupaz.datcalcolomesisosp
                                          THEN 
                                          	(CASE
                                          		WHEN am_stato_occupaz.datcalcolomesisosp &lt;= to_date('31/12/2012', 'dd/mm/yyyy')
                                          		THEN am_stato_occupaz.datcalcolomesisosp
                                          		ELSE to_date('31/12/2012', 'dd/mm/yyyy')
                                        	END)
										WHEN NVL (occ.datfine, to_date(?,'dd/mm/yyyy')) &gt;= to_date(?,'dd/mm/yyyy')
                                          THEN to_date(?,'dd/mm/yyyy')
                                        WHEN occ.datfine &lt; to_date(?,'dd/mm/yyyy')
                                          THEN occ.datfine
                                     END,'yyyy')
                             - to_char(CASE
 						                  WHEN occ.datInizio &lt;= am_stato_occupaz.datcalcolomesisosp
                                              THEN
                                              	(CASE
	                                          		WHEN am_stato_occupaz.datcalcolomesisosp &lt;= to_date('31/12/2012', 'dd/mm/yyyy')
	                                          		THEN am_stato_occupaz.datcalcolomesisosp
	                                          		ELSE to_date('31/12/2012', 'dd/mm/yyyy')
	                                        	END)
											WHEN occ.datInizio &gt; am_stato_occupaz.datcalcolomesisosp
                                              THEN occ.datInizio
                                       END,'yyyy')) * 12
	  						 + to_char(CASE
							 				WHEN NVL (occ.datfine, to_date(?,'dd/mm/yyyy')) &lt;= am_stato_occupaz.datcalcolomesisosp
		                                      THEN
		                                      	(CASE
	                                          		WHEN am_stato_occupaz.datcalcolomesisosp &lt;= to_date('31/12/2012', 'dd/mm/yyyy')
	                                          		THEN am_stato_occupaz.datcalcolomesisosp
	                                          		ELSE to_date('31/12/2012', 'dd/mm/yyyy')
	                                        	END)
											WHEN NVL (occ.datfine, to_date(?,'dd/mm/yyyy')) &gt;= to_date(?,'dd/mm/yyyy')
		                                      THEN to_date(?,'dd/mm/yyyy')
		                                    WHEN occ.datfine &lt; to_date(?,'dd/mm/yyyy')
		                                      THEN occ.datfine
		                               END,'mm')
		                    - to_char(CASE
 						                 	WHEN occ.datInizio &lt;= am_stato_occupaz.datcalcolomesisosp
                                              THEN
                                              	(CASE
	                                          		WHEN am_stato_occupaz.datcalcolomesisosp &lt;= to_date('31/12/2012', 'dd/mm/yyyy')
	                                          		THEN am_stato_occupaz.datcalcolomesisosp
	                                          		ELSE to_date('31/12/2012', 'dd/mm/yyyy')
	                                        	END)
											WHEN occ.datInizio &gt; am_stato_occupaz.datcalcolomesisosp
                                              THEN occ.datInizio
                                      END,'mm') + 1
						+ (case 
	   	 	  				   when ((to_char(CASE
								 				WHEN NVL (occ.datfine, to_date(?,'dd/mm/yyyy')) &lt;= am_stato_occupaz.datcalcolomesisosp
	                                              THEN
	                                              	(CASE
		                                          		WHEN am_stato_occupaz.datcalcolomesisosp &lt;= to_date('31/12/2012', 'dd/mm/yyyy')
		                                          		THEN am_stato_occupaz.datcalcolomesisosp
		                                          		ELSE to_date('31/12/2012', 'dd/mm/yyyy')
		                                        	END)
												WHEN NVL (occ.datfine, to_date(?,'dd/mm/yyyy')) &gt;= to_date(?,'dd/mm/yyyy')
	                                              THEN to_date(?,'dd/mm/yyyy')
	                                            WHEN occ.datfine &lt; to_date(?,'dd/mm/yyyy')
	                                              THEN occ.datfine
	                                          END,'yyyy') 
	                                  - to_char(CASE
		 						                  WHEN occ.datInizio &lt;= am_stato_occupaz.datcalcolomesisosp
		                                              THEN
		                                              	(CASE
			                                          		WHEN am_stato_occupaz.datcalcolomesisosp &lt;= to_date('31/12/2012', 'dd/mm/yyyy')
			                                          		THEN am_stato_occupaz.datcalcolomesisosp
			                                          		ELSE to_date('31/12/2012', 'dd/mm/yyyy')
			                                        	END)
													WHEN occ.datInizio &gt; am_stato_occupaz.datcalcolomesisosp
		                                              THEN occ.datInizio
		                                         END,'yyyy')) * 12
	   		  	   			   	      + to_char(CASE
									 				WHEN NVL (occ.datfine, to_date(?,'dd/mm/yyyy')) &lt;= am_stato_occupaz.datcalcolomesisosp
		                                              THEN
		                                              	(CASE
			                                          		WHEN am_stato_occupaz.datcalcolomesisosp &lt;= to_date('31/12/2012', 'dd/mm/yyyy')
			                                          		THEN am_stato_occupaz.datcalcolomesisosp
			                                          		ELSE to_date('31/12/2012', 'dd/mm/yyyy')
			                                        	END)
													WHEN NVL (occ.datfine, to_date(?,'dd/mm/yyyy')) &gt;= to_date(?,'dd/mm/yyyy')
		                                              THEN to_date(?,'dd/mm/yyyy')
		                                            WHEN occ.datfine &lt; to_date(?,'dd/mm/yyyy')
		                                              THEN occ.datfine
		                                        END,'mm') 
		                              - to_char(CASE
		 						                  WHEN occ.datInizio &lt;= am_stato_occupaz.datcalcolomesisosp
		                                              THEN
		                                              	(CASE
			                                          		WHEN am_stato_occupaz.datcalcolomesisosp &lt;= to_date('31/12/2012', 'dd/mm/yyyy')
			                                          		THEN am_stato_occupaz.datcalcolomesisosp
			                                          		ELSE to_date('31/12/2012', 'dd/mm/yyyy')
			                                        	END)
													WHEN occ.datInizio &gt; am_stato_occupaz.datcalcolomesisosp
		                                              THEN occ.datInizio
		                                          END,'mm') + 1) &gt; 1
			  
			  				   then	  
	   						   		   -(case when
				   	 	  	  		  	 	 (30 - to_char(CASE
					 						                  WHEN occ.datInizio &lt;= am_stato_occupaz.datcalcolomesisosp
					                                              THEN
					                                              	(CASE
						                                          		WHEN am_stato_occupaz.datcalcolomesisosp &lt;= to_date('31/12/2012', 'dd/mm/yyyy')
						                                          		THEN am_stato_occupaz.datcalcolomesisosp
						                                          		ELSE to_date('31/12/2012', 'dd/mm/yyyy')
						                                        	END)
																WHEN occ.datInizio &gt; am_stato_occupaz.datcalcolomesisosp
					                                              THEN occ.datInizio
					                                          END,'dd') + 1) &lt; 16
						  				   	 then 1
						  				   	 when
				   	 	  	  			   	 (30 - to_char(CASE
					 						                  WHEN occ.datInizio &lt;= am_stato_occupaz.datcalcolomesisosp
					                                              THEN
					                                              	(CASE
						                                          		WHEN am_stato_occupaz.datcalcolomesisosp &lt;= to_date('31/12/2012', 'dd/mm/yyyy')
						                                          		THEN am_stato_occupaz.datcalcolomesisosp
						                                          		ELSE to_date('31/12/2012', 'dd/mm/yyyy')
						                                        	END)
																WHEN occ.datInizio &gt; am_stato_occupaz.datcalcolomesisosp
					                                              THEN occ.datInizio
					                                          END,'dd') + 1) &gt;= 15
						  				   	 then 0
					  				   end)
					  				   -(case when
				   	 	  	  			 	  to_char(CASE
										                WHEN NVL (occ.datfine, to_date(?,'dd/mm/yyyy')) &lt;= am_stato_occupaz.datcalcolomesisosp
					                                      THEN
					                                      	(CASE
				                                          		WHEN am_stato_occupaz.datcalcolomesisosp &lt;= to_date('31/12/2012', 'dd/mm/yyyy')
				                                          		THEN am_stato_occupaz.datcalcolomesisosp
				                                          		ELSE to_date('31/12/2012', 'dd/mm/yyyy')
				                                        	END)
														WHEN NVL (occ.datfine, to_date(?,'dd/mm/yyyy')) &gt;= to_date(?,'dd/mm/yyyy')
					                                      THEN to_date(?,'dd/mm/yyyy')
					                                    WHEN occ.datfine &lt; to_date(?,'dd/mm/yyyy')
					                                      THEN occ.datfine
					                                  END,'dd') &lt; 16
						  					  then 1
						  					  when
				   	 	  	  				  to_char(CASE
										                WHEN NVL (occ.datfine, to_date(?,'dd/mm/yyyy')) &lt;= am_stato_occupaz.datcalcolomesisosp
			                                              THEN
			                                              	(CASE
				                                          		WHEN am_stato_occupaz.datcalcolomesisosp &lt;= to_date('31/12/2012', 'dd/mm/yyyy')
				                                          		THEN am_stato_occupaz.datcalcolomesisosp
				                                          		ELSE to_date('31/12/2012', 'dd/mm/yyyy')
				                                        	END)
														WHEN NVL (occ.datfine, to_date(?,'dd/mm/yyyy')) &gt;= to_date(?,'dd/mm/yyyy')
			                                              THEN to_date(?,'dd/mm/yyyy')
			                                            WHEN occ.datfine &lt; to_date(?,'dd/mm/yyyy')
			                                              THEN occ.datfine
			                                          END,'dd') &gt;= 15
						  					  then 0
					  					end)
							  when
			 	  			  	  ((to_char(CASE
								 				WHEN NVL (occ.datfine, to_date(?,'dd/mm/yyyy')) &lt;= am_stato_occupaz.datcalcolomesisosp
	                                              THEN
	                                              	(CASE
		                                          		WHEN am_stato_occupaz.datcalcolomesisosp &lt;= to_date('31/12/2012', 'dd/mm/yyyy')
		                                          		THEN am_stato_occupaz.datcalcolomesisosp
		                                          		ELSE to_date('31/12/2012', 'dd/mm/yyyy')
		                                        	END)
												WHEN NVL (occ.datfine, to_date(?,'dd/mm/yyyy')) &gt;= to_date(?,'dd/mm/yyyy')
	                                              THEN to_date(?,'dd/mm/yyyy')
	                                            WHEN occ.datfine &lt; to_date(?,'dd/mm/yyyy')
	                                              THEN occ.datfine
	                                          END,'yyyy') 
	                                - to_char(CASE
	 						                  WHEN occ.datInizio &lt;= am_stato_occupaz.datcalcolomesisosp
	                                              THEN
	                                              	(CASE
		                                          		WHEN am_stato_occupaz.datcalcolomesisosp &lt;= to_date('31/12/2012', 'dd/mm/yyyy')
		                                          		THEN am_stato_occupaz.datcalcolomesisosp
		                                          		ELSE to_date('31/12/2012', 'dd/mm/yyyy')
		                                        	END)
												WHEN occ.datInizio &gt; am_stato_occupaz.datcalcolomesisosp
	                                              THEN occ.datInizio
	                                          END,'yyyy')) * 12
	   		  	  			  	  	+ to_char(CASE
								 				WHEN NVL (occ.datfine, to_date(?,'dd/mm/yyyy')) &lt;= am_stato_occupaz.datcalcolomesisosp
	                                              THEN
	                                              	(CASE
		                                          		WHEN am_stato_occupaz.datcalcolomesisosp &lt;= to_date('31/12/2012', 'dd/mm/yyyy')
		                                          		THEN am_stato_occupaz.datcalcolomesisosp
		                                          		ELSE to_date('31/12/2012', 'dd/mm/yyyy')
		                                        	END)
												WHEN NVL (occ.datfine, to_date(?,'dd/mm/yyyy')) &gt;= to_date(?,'dd/mm/yyyy')
	                                              THEN to_date(?,'dd/mm/yyyy')
	                                            WHEN occ.datfine &lt; to_date(?,'dd/mm/yyyy')
	                                              THEN occ.datfine
	                                          END,'mm') 
	                                - to_char(CASE
	 						                  WHEN occ.datInizio &lt;= am_stato_occupaz.datcalcolomesisosp
	                                              THEN
	                                              	(CASE
		                                          		WHEN am_stato_occupaz.datcalcolomesisosp &lt;= to_date('31/12/2012', 'dd/mm/yyyy')
		                                          		THEN am_stato_occupaz.datcalcolomesisosp
		                                          		ELSE to_date('31/12/2012', 'dd/mm/yyyy')
		                                        	END)
												WHEN occ.datInizio &gt; am_stato_occupaz.datcalcolomesisosp
	                                              THEN occ.datInizio
	                                          END,'mm') + 1) = 1
			 				  then
			 	 			  	  -(case when
			   	 	  	  		  		 (to_char(CASE
									                WHEN NVL (occ.datfine, to_date(?,'dd/mm/yyyy')) &lt;= am_stato_occupaz.datcalcolomesisosp
		                                              THEN
		                                              	(CASE
			                                          		WHEN am_stato_occupaz.datcalcolomesisosp &lt;= to_date('31/12/2012', 'dd/mm/yyyy')
			                                          		THEN am_stato_occupaz.datcalcolomesisosp
			                                          		ELSE to_date('31/12/2012', 'dd/mm/yyyy')
			                                        	END)
													WHEN NVL (occ.datfine, to_date(?,'dd/mm/yyyy')) &gt;= to_date(?,'dd/mm/yyyy')
		                                              THEN to_date(?,'dd/mm/yyyy')
		                                            WHEN occ.datfine &lt; to_date(?,'dd/mm/yyyy')
		                                              THEN occ.datfine
		                                          END,'dd') 
		                                 - to_char(CASE
			 						                  WHEN occ.datInizio &lt;= am_stato_occupaz.datcalcolomesisosp
			                                             THEN
			                                             	(CASE
				                                          		WHEN am_stato_occupaz.datcalcolomesisosp &lt;= to_date('31/12/2012', 'dd/mm/yyyy')
				                                          		THEN am_stato_occupaz.datcalcolomesisosp
				                                          		ELSE to_date('31/12/2012', 'dd/mm/yyyy')
				                                        	END)
													  WHEN occ.datInizio &gt; am_stato_occupaz.datcalcolomesisosp
			                                             THEN occ.datInizio
			                                       END,'dd') + 1) &lt; 16 
					  					 then 1 
					    		         when
			   	 	  	  	 			 (to_char(CASE
									                WHEN NVL (occ.datfine, to_date(?,'dd/mm/yyyy')) &lt;= am_stato_occupaz.datcalcolomesisosp
		                                              THEN
		                                              	(CASE
			                                          		WHEN am_stato_occupaz.datcalcolomesisosp &lt;= to_date('31/12/2012', 'dd/mm/yyyy')
			                                          		THEN am_stato_occupaz.datcalcolomesisosp
			                                          		ELSE to_date('31/12/2012', 'dd/mm/yyyy')
			                                        	END)
													WHEN NVL (occ.datfine, to_date(?,'dd/mm/yyyy')) &gt;= to_date(?,'dd/mm/yyyy')
		                                              THEN to_date(?,'dd/mm/yyyy')
		                                            WHEN occ.datfine &lt; to_date(?,'dd/mm/yyyy')
		                                              THEN occ.datfine
		                                          END,'dd') 
		                                 - to_char(CASE
		 						                     WHEN occ.datInizio &lt;= am_stato_occupaz.datcalcolomesisosp
		                                                THEN
		                                                	(CASE
				                                          		WHEN am_stato_occupaz.datcalcolomesisosp &lt;= to_date('31/12/2012', 'dd/mm/yyyy')
				                                          		THEN am_stato_occupaz.datcalcolomesisosp
				                                          		ELSE to_date('31/12/2012', 'dd/mm/yyyy')
				                                        	END)
													 WHEN occ.datInizio &gt; am_stato_occupaz.datcalcolomesisosp
		                                                THEN occ.datInizio
		                                           END,'dd') + 1) &gt;= 15
					    				 then 0
				  				    end)
			 				  end))))
				          	   NUMMESISOSP
                  FROM am_stato_occupaz occ
                 WHERE occ.cdnlavoratore = ?
                   AND occ.codstatooccupaz = 'B1'
                   AND (occ.datinizio &gt;= occ.datcalcolomesisosp or
                        (occ.datcalcolomesisosp &gt;= occ.datinizio and
                         occ.datcalcolomesisosp &lt;= nvl(occ.datfine,to_date(?,'dd/mm/yyyy'))))
                   AND trunc(occ.datinizio) &lt; (select trunc(datFornero) from ts_generale)
                )
            when de_stato_occupaz_ragg.CODSTATOOCCUPAZRAGG not in ('D','I') 
              then
                  0
         end
         NUMMESISOSP,
         case 
    		 	   when de_stato_occupaz_ragg.CODSTATOOCCUPAZRAGG in ('D','I')
        	   then
               (to_number(
							(to_char(to_date(?,'dd/mm/yyyy'),'yyyy')
                             - to_char(am_stato_occupaz.datcalcoloanzianita,'yyyy')) * 12
	  						 + to_char(to_date(?,'dd/mm/yyyy'),'mm')
		                    - to_char(am_stato_occupaz.datcalcoloanzianita,'mm') + 1
						+ (case 
	   	 	  				   when ((to_char(to_date(?,'dd/mm/yyyy'),'yyyy') 
	                                  - to_char(am_stato_occupaz.datcalcoloanzianita,'yyyy')) * 12
	   		  	   			   	      + to_char(to_date(?,'dd/mm/yyyy'),'mm') 
		                              - to_char(am_stato_occupaz.datcalcoloanzianita,'mm') + 1) &gt; 1
							   then
							   		  	-(case when
											 trunc(am_stato_occupaz.datcalcoloanzianita) &gt;= (select trunc(dat150) from ts_generale) 
												then 2 - (trunc( (
													(case 
													  when to_number(to_char(LAST_DAY(to_date('01/' || to_char(to_date(?,'dd/mm/yyyy'), 'mm') || '/' || to_char(to_date(?,'dd/mm/yyyy'), 'yyyy'), 'dd/mm/yyyy')), 'dd')) =
														   to_number(to_char(to_date(?,'dd/mm/yyyy'), 'dd'))
													  then 30
													  else to_number(to_char(to_date(?,'dd/mm/yyyy'), 'dd'))
													end) + (30 - 
															(case
															  when to_number(to_char(am_stato_occupaz.datcalcoloanzianita, 'dd')) &lt; 31 
															  then to_number(to_char(am_stato_occupaz.datcalcoloanzianita, 'dd'))
															  else 30
															end) + 1
														  )) /30))
											 when
											 (30 - to_char(am_stato_occupaz.datcalcoloanzianita,'dd') + 1) &lt; 16
											 then 1
											 when
											 (30 - to_char(am_stato_occupaz.datcalcoloanzianita,'dd') + 1) &gt;= 15
											 then 0
									   	 end)
									   	 -(case when
											  trunc(am_stato_occupaz.datcalcoloanzianita) &lt; (select trunc(dat150) from ts_generale) and to_char(to_date(?,'dd/mm/yyyy'),'dd') &lt; 16
											  then 1
											  when
											  trunc(am_stato_occupaz.datcalcoloanzianita) &lt; (select trunc(dat150) from ts_generale) and to_char(to_date(?,'dd/mm/yyyy'),'dd') &gt;= 15
											  then 0
											  else 0
										 end)					
			 				  when
			 	  			  	  ((to_char(to_date(?,'dd/mm/yyyy'),'yyyy') 
	                                - to_char(am_stato_occupaz.datcalcoloanzianita,'yyyy')) * 12
	   		  	  			  	  	+ to_char(to_date(?,'dd/mm/yyyy'),'mm') 
	                                - to_char(am_stato_occupaz.datcalcoloanzianita,'mm') + 1) = 1
			 				  then
			 				  	  -(case when
										trunc(am_stato_occupaz.datcalcoloanzianita) &gt;= (select trunc(dat150) from ts_generale) and 
										 (to_number(to_char(to_date(?,'dd/mm/yyyy'),'dd')) - to_number(to_char(am_stato_occupaz.datcalcoloanzianita,'dd')) + 1) =
										 to_number(to_char(LAST_DAY(to_date('01/' || to_char(to_date(?,'dd/mm/yyyy'), 'mm') || '/' || to_char(to_date(?,'dd/mm/yyyy'), 'yyyy'), 'dd/mm/yyyy')), 'dd'))
										 then 0
										 when
										 trunc(am_stato_occupaz.datcalcoloanzianita) &gt;= (select trunc(dat150) from ts_generale) and 
										 (to_number(to_char(to_date(?,'dd/mm/yyyy'),'dd')) - to_number(to_char(am_stato_occupaz.datcalcoloanzianita,'dd')) + 1) &lt;&gt;
										 to_number(to_char(LAST_DAY(to_date('01/' || to_char(to_date(?,'dd/mm/yyyy'), 'mm') || '/' || to_char(to_date(?,'dd/mm/yyyy'), 'yyyy'), 'dd/mm/yyyy')), 'dd'))
										 then 1
										 when trunc(am_stato_occupaz.datcalcoloanzianita) &lt; (select trunc(dat150) from ts_generale) and
										 (to_number(to_char(to_date(?,'dd/mm/yyyy'),'dd')) - to_number(to_char(am_stato_occupaz.datcalcoloanzianita,'dd')) + 1) &lt; 16 
										 then 1 
										 when trunc(am_stato_occupaz.datcalcoloanzianita) &lt; (select trunc(dat150) from ts_generale) and
										 (to_number(to_char(to_date(?,'dd/mm/yyyy'),'dd')) - to_number(to_char(am_stato_occupaz.datcalcoloanzianita,'dd')) + 1) &gt;= 15
										 then 0
							      end)
			 				  end)))	  	
             when de_stato_occupaz_ragg.CODSTATOOCCUPAZRAGG not in ('D','I')
             then
                  0
         end
         mesi_anz,
         (case 
			when de_stato_occupaz_ragg.CODSTATOOCCUPAZRAGG in ('D','I')
			   then
					(case 
						when ((to_char(to_date(?,'dd/mm/yyyy'),'yyyy') 
							  - to_char(am_stato_occupaz.datcalcoloanzianita,'yyyy')) * 12
							  + to_char(to_date(?,'dd/mm/yyyy'),'mm') 
							  - to_char(am_stato_occupaz.datcalcoloanzianita,'mm') + 1) &gt; 1
						then	  
							   (case when
								 trunc(am_stato_occupaz.datcalcoloanzianita) &gt;= (select trunc(dat150) from ts_generale) 
									then mod(
									((case 
										  when to_number(to_char(LAST_DAY(to_date('01/' || to_char(to_date(?,'dd/mm/yyyy'), 'mm') || '/' || to_char(to_date(?,'dd/mm/yyyy'), 'yyyy'), 'dd/mm/yyyy')), 'dd')) =
											   to_number(to_char(to_date(?,'dd/mm/yyyy'), 'dd'))
										  then 30
										  else to_number(to_char(to_date(?,'dd/mm/yyyy'), 'dd'))
										end) + 
										(30 - 
											(case
											  when to_number(to_char(am_stato_occupaz.datcalcoloanzianita, 'dd')) &lt; 31 
											  then to_number(to_char(am_stato_occupaz.datcalcoloanzianita, 'dd'))
											  else 30
											end) + 1
										  )
									), 30)
								  else 0
								end)
						when
						  ((to_char(to_date(?,'dd/mm/yyyy'),'yyyy') 
							- to_char(am_stato_occupaz.datcalcoloanzianita,'yyyy')) * 12
							+ to_char(to_date(?,'dd/mm/yyyy'),'mm') 
							- to_char(am_stato_occupaz.datcalcoloanzianita,'mm') + 1) = 1
							then
								(case when
									trunc(am_stato_occupaz.datcalcoloanzianita) &gt;= (select trunc(dat150) from ts_generale) 
									  and (to_number(to_char(to_date(?,'dd/mm/yyyy'),'dd')) - to_number(to_char(am_stato_occupaz.datcalcoloanzianita,'dd')) + 1) =
										   to_number(to_char(LAST_DAY(to_date('01/' || to_char(to_date(?,'dd/mm/yyyy'), 'mm') || '/' || to_char(to_date(?,'dd/mm/yyyy'), 'yyyy'), 'dd/mm/yyyy')), 'dd'))
									then 0
									when
									  trunc(am_stato_occupaz.datcalcoloanzianita) &gt;= (select trunc(dat150) from ts_generale) 
									  and (to_number(to_char(to_date(?,'dd/mm/yyyy'),'dd')) - to_number(to_char(am_stato_occupaz.datcalcoloanzianita,'dd')) + 1) &lt;&gt;
										   to_number(to_char(LAST_DAY(to_date('01/' || to_char(to_date(?,'dd/mm/yyyy'), 'mm') || '/' || to_char(to_date(?,'dd/mm/yyyy'), 'yyyy'), 'dd/mm/yyyy')), 'dd'))
									then (to_number(to_char(to_date(?,'dd/mm/yyyy'),'dd')) - to_number(to_char(am_stato_occupaz.datcalcoloanzianita,'dd')) + 1)
									else 0
								end)
						else 0
					end)			  	
			 when de_stato_occupaz_ragg.CODSTATOOCCUPAZRAGG not in ('D','I')
			 then 0
		end)
		giorni_anz,
         substr(PG_MOVIMENTI.MesiRischioDisoccupazione(am_stato_occupaz.cdnLavoratore, am_stato_occupaz.datcalcoloanzianita), 1,
			instr(PG_MOVIMENTI.MesiRischioDisoccupazione(am_stato_occupaz.cdnLavoratore, am_stato_occupaz.datcalcoloanzianita), '-', 1)-1) mesi_rischio_disocc,
         PG_MOVIMENTI.MesiRischioDisoccupazione(am_stato_occupaz.cdnLavoratore, am_stato_occupaz.datcalcoloanzianita) mesi_rischio_disocc_completo,
         to_number(am_stato_occupaz.NUMANZIANITAPREC297) mesi_anz_prec,
         to_number(am_stato_occupaz.NUMMESISOSP) NUMMESISOSPPREC,
         to_char(am_stato_occupaz.datcalcoloanzianita,'DD/MM/YYYY') datcalcoloanzianita, 
         to_char(am_stato_occupaz.datcalcolomesisosp,'DD/MM/YYYY') datcalcolomesisosp
    FROM am_stato_occupaz
         INNER JOIN de_stato_occupaz ON (am_stato_occupaz.codstatooccupaz = de_stato_occupaz.codstatooccupaz)
         INNER JOIN de_stato_occupaz_ragg ON (de_stato_occupaz.codstatooccupazragg = de_stato_occupaz_ragg.codstatooccupazragg)
   WHERE am_stato_occupaz.datfine IS NULL
         AND am_stato_occupaz.cdnlavoratore = ?
ORDER BY am_stato_occupaz.datinizio DESC
 "/>
 
<STATEMENT
        name ="GET_ANZIANITA_COLLOCAMENTO_MIRATO"
        query="
SELECT   de_stato_occupaz_ragg.codstatooccupazragg, 
		 am_stato_occupaz.codstatooccupaz,
         TO_CHAR (am_stato_occupaz.datinizio, 'DD/MM/YYYY') datinizio,
         TO_CHAR (am_stato_occupaz.datfine, 'DD/MM/YYYY') datfine,
         TO_CHAR (am_stato_occupaz.datanzianitadisoc, 'DD/MM/YYYY') datanzianitadisoc,
         case 
    		 	   when de_stato_occupaz_ragg.CODSTATOOCCUPAZRAGG in ('D','I')
        	   then
               (to_number(
							(to_char(to_date(?,'dd/mm/yyyy'),'yyyy')
                             - to_char(to_date(?,'dd/mm/yyyy'),'yyyy')) * 12
	  						 + to_char(to_date(?,'dd/mm/yyyy'),'mm')
		                    - to_char(to_date(?,'dd/mm/yyyy'),'mm') + 1
						+ (case 
	   	 	  				   when ((to_char(to_date(?,'dd/mm/yyyy'),'yyyy') 
	                                  - to_char(to_date(?,'dd/mm/yyyy'),'yyyy')) * 12
	   		  	   			   	      + to_char(to_date(?,'dd/mm/yyyy'),'mm') 
		                              - to_char(to_date(?,'dd/mm/yyyy'),'mm') + 1) &gt; 1
							   then	  
							   		   -(case when
											 to_date(?,'dd/mm/yyyy') &gt;= (select trunc(dat150) from ts_generale) 
												then 2 - (trunc( (
													(case 
													  when to_number(to_char(LAST_DAY(to_date('01/' || to_char(to_date(?,'dd/mm/yyyy'), 'mm') || '/' || to_char(to_date(?,'dd/mm/yyyy'), 'yyyy'), 'dd/mm/yyyy')), 'dd')) =
														   to_number(to_char(to_date(?,'dd/mm/yyyy'), 'dd'))
													  then 30
													  else to_number(to_char(to_date(?,'dd/mm/yyyy'), 'dd'))
													end) + (30 - 
															(case
															  when to_number(to_char(to_date(?,'dd/mm/yyyy'), 'dd')) &lt; 31 
															  then to_number(to_char(to_date(?,'dd/mm/yyyy'), 'dd'))
															  else 30
															end) + 1
														  )) /30))
											 when
											 (30 - to_char(to_date(?,'dd/mm/yyyy'),'dd') + 1) &lt; 16
											 then 1
											 when
											 (30 - to_char(to_date(?,'dd/mm/yyyy'),'dd') + 1) &gt;= 15
											 then 0
									   	 end)
									   	 -(case when
											  trunc(to_date(?,'dd/mm/yyyy')) &lt; (select trunc(dat150) from ts_generale) and to_char(to_date(?,'dd/mm/yyyy'),'dd') &lt; 16
											  then 1
											  when
											  trunc(to_date(?,'dd/mm/yyyy')) &lt; (select trunc(dat150) from ts_generale) and to_char(to_date(?,'dd/mm/yyyy'),'dd') &gt;= 15
											  then 0
											  else 0
										 end)
			 				  when
			 	  			  	  ((to_char(to_date(?,'dd/mm/yyyy'),'yyyy') 
	                                - to_char(to_date(?,'dd/mm/yyyy'),'yyyy')) * 12
	   		  	  			  	  	+ to_char(to_date(?,'dd/mm/yyyy'),'mm') 
	                                - to_char(to_date(?,'dd/mm/yyyy'),'mm') + 1) = 1
			 				  then
			 				  	-(case when
										to_date(?,'dd/mm/yyyy') &gt;= (select trunc(dat150) from ts_generale) and 
										 (to_number(to_char(to_date(?,'dd/mm/yyyy'),'dd')) - to_number(to_char(to_date(?,'dd/mm/yyyy'),'dd')) + 1) =
										 to_number(to_char(LAST_DAY(to_date('01/' || to_char(to_date(?,'dd/mm/yyyy'), 'mm') || '/' || to_char(to_date(?,'dd/mm/yyyy'), 'yyyy'), 'dd/mm/yyyy')), 'dd'))
										 then 0
										 when
										 to_date(?,'dd/mm/yyyy') &gt;= (select trunc(dat150) from ts_generale) and 
										 (to_number(to_char(to_date(?,'dd/mm/yyyy'),'dd')) - to_number(to_char(to_date(?,'dd/mm/yyyy'),'dd')) + 1) &lt;&gt;
										 to_number(to_char(LAST_DAY(to_date('01/' || to_char(to_date(?,'dd/mm/yyyy'), 'mm') || '/' || to_char(to_date(?,'dd/mm/yyyy'), 'yyyy'), 'dd/mm/yyyy')), 'dd'))
										 then 1
										 when to_date(?,'dd/mm/yyyy') &lt; (select trunc(dat150) from ts_generale) and
										 (to_number(to_char(to_date(?,'dd/mm/yyyy'),'dd')) - to_number(to_char(to_date(?,'dd/mm/yyyy'),'dd')) + 1) &lt; 16 
										 then 1 
										 when to_date(?,'dd/mm/yyyy') &lt; (select trunc(dat150) from ts_generale) and
										 (to_number(to_char(to_date(?,'dd/mm/yyyy'),'dd')) - to_number(to_char(to_date(?,'dd/mm/yyyy'),'dd')) + 1) &gt;= 15
										 then 0
							     end)
			 				  end)))	  	
             when de_stato_occupaz_ragg.CODSTATOOCCUPAZRAGG not in ('D','I')
             then
                  0
         end
         mesi_anz,
         substr(PG_MOVIMENTI.MesiRischioDisoccupazione(am_stato_occupaz.cdnLavoratore, to_date(?,'dd/mm/yyyy')), 1,
			instr(PG_MOVIMENTI.MesiRischioDisoccupazione(am_stato_occupaz.cdnLavoratore, to_date(?,'dd/mm/yyyy')), '-', 1)-1) mesi_rischio_disocc, 
		 PG_MOVIMENTI.MesiRischioDisoccupazione(am_stato_occupaz.cdnLavoratore, to_date(?,'dd/mm/yyyy')) mesi_rischio_disocc_completo,
         to_number(am_stato_occupaz.NUMANZIANITAPREC297) mesi_anz_prec,
         (case 
			when de_stato_occupaz_ragg.CODSTATOOCCUPAZRAGG in ('D','I')
			   then
					(case 
						when ((to_char(to_date(?,'dd/mm/yyyy'),'yyyy') 
							  - to_char(to_date(?,'dd/mm/yyyy'),'yyyy')) * 12
							  + to_char(to_date(?,'dd/mm/yyyy'),'mm') 
							  - to_char(to_date(?,'dd/mm/yyyy'),'mm') + 1) &gt; 1
						then	  
							   (case when
								 trunc(to_date(?,'dd/mm/yyyy')) &gt;= (select trunc(dat150) from ts_generale) 
									then mod(
									((case 
										  when to_number(to_char(LAST_DAY(to_date('01/' || to_char(to_date(?,'dd/mm/yyyy'), 'mm') || '/' || to_char(to_date(?,'dd/mm/yyyy'), 'yyyy'), 'dd/mm/yyyy')), 'dd')) =
											   to_number(to_char(to_date(?,'dd/mm/yyyy'), 'dd'))
										  then 30
										  else to_number(to_char(to_date(?,'dd/mm/yyyy'), 'dd'))
										end) + 
										(30 - 
											(case
											  when to_number(to_char(to_date(?,'dd/mm/yyyy'), 'dd')) &lt; 31 
											  then to_number(to_char(to_date(?,'dd/mm/yyyy'), 'dd'))
											  else 30
											end) + 1
										  )
									), 30)
								  else 0
								end)
						when
						  ((to_char(to_date(?,'dd/mm/yyyy'),'yyyy') 
							- to_char(to_date(?,'dd/mm/yyyy'),'yyyy')) * 12
							+ to_char(to_date(?,'dd/mm/yyyy'),'mm') 
							- to_char(to_date(?,'dd/mm/yyyy'),'mm') + 1) = 1
							then
								(case when
									trunc(to_date(?,'dd/mm/yyyy')) &gt;= (select trunc(dat150) from ts_generale) 
									  and (to_number(to_char(to_date(?,'dd/mm/yyyy'),'dd')) - to_number(to_char(to_date(?,'dd/mm/yyyy'),'dd')) + 1) =
										   to_number(to_char(LAST_DAY(to_date('01/' || to_char(to_date(?,'dd/mm/yyyy'), 'mm') || '/' || to_char(to_date(?,'dd/mm/yyyy'), 'yyyy'), 'dd/mm/yyyy')), 'dd'))
									then 0
									when
									  trunc(to_date(?,'dd/mm/yyyy')) &gt;= (select trunc(dat150) from ts_generale) 
									  and (to_number(to_char(to_date(?,'dd/mm/yyyy'),'dd')) - to_number(to_char(to_date(?,'dd/mm/yyyy'),'dd')) + 1) &lt;&gt;
										   to_number(to_char(LAST_DAY(to_date('01/' || to_char(to_date(?,'dd/mm/yyyy'), 'mm') || '/' || to_char(to_date(?,'dd/mm/yyyy'), 'yyyy'), 'dd/mm/yyyy')), 'dd'))
									then (to_number(to_char(to_date(?,'dd/mm/yyyy'),'dd')) - to_number(to_char(to_date(?,'dd/mm/yyyy'),'dd')) + 1)
									else 0
								end)
						else 0
					end)			  	
			 when de_stato_occupaz_ragg.CODSTATOOCCUPAZRAGG not in ('D','I')
			 then 0
		end)
		giorni_anz,
         to_char(am_stato_occupaz.datcalcoloanzianita,'DD/MM/YYYY') datcalcoloanzianita, 
         to_char(am_stato_occupaz.datcalcolomesisosp,'DD/MM/YYYY') datcalcolomesisosp
    FROM am_stato_occupaz
         INNER JOIN de_stato_occupaz ON (am_stato_occupaz.codstatooccupaz = de_stato_occupaz.codstatooccupaz)
         INNER JOIN de_stato_occupaz_ragg ON (de_stato_occupaz.codstatooccupazragg = de_stato_occupaz_ragg.codstatooccupazragg)		
   WHERE am_stato_occupaz.datfine IS NULL
         AND am_stato_occupaz.cdnlavoratore = ?
ORDER BY am_stato_occupaz.datinizio DESC
 "/>
 
<STATEMENT
        name ="GET_DATA_ANZIANITA_ORDINARIO_DALLA_DATA"
        query="
SELECT   de_stato_occupaz_ragg.codstatooccupazragg, 
		 am_stato_occupaz.codstatooccupaz,
         TO_CHAR (am_stato_occupaz.datinizio, 'DD/MM/YYYY') datinizio,
         TO_CHAR (am_stato_occupaz.datfine, 'DD/MM/YYYY') datfine,
         TO_CHAR (am_stato_occupaz.datanzianitadisoc, 'DD/MM/YYYY') datanzianitadisoc,
         case 
              when de_stato_occupaz_ragg.CODSTATOOCCUPAZRAGG in ('D','I')
              then
                   (SELECT SUM (
				          (to_number(
							(to_char(CASE
						 				WHEN NVL (occ.datfine, to_date(?,'dd/mm/yyyy')) &lt;= to_date(?,'dd/mm/yyyy')
                                          THEN to_date(?,'dd/mm/yyyy')
										WHEN NVL (occ.datfine, to_date(?,'dd/mm/yyyy')) &gt;= to_date(?,'dd/mm/yyyy')
                                          THEN to_date(?,'dd/mm/yyyy')
                                        WHEN occ.datfine &lt; to_date(?,'dd/mm/yyyy')
                                          THEN occ.datfine
                                     END,'yyyy')
                             - to_char(CASE
 						                  WHEN occ.datInizio &lt;= to_date(?,'dd/mm/yyyy')
                                              THEN to_date(?,'dd/mm/yyyy')
											WHEN occ.datInizio &gt; to_date(?,'dd/mm/yyyy')
                                              THEN occ.datInizio
                                       END,'yyyy')) * 12
	  						 + to_char(CASE
							 				WHEN NVL (occ.datfine, to_date(?,'dd/mm/yyyy')) &lt;= to_date(?,'dd/mm/yyyy')
		                                      THEN to_date(?,'dd/mm/yyyy')
											WHEN NVL (occ.datfine, to_date(?,'dd/mm/yyyy')) &gt;= to_date(?,'dd/mm/yyyy')
		                                      THEN to_date(?,'dd/mm/yyyy')
		                                    WHEN occ.datfine &lt; to_date(?,'dd/mm/yyyy')
		                                      THEN occ.datfine
		                               END,'mm')
		                    - to_char(CASE
 						                 	WHEN occ.datInizio &lt;= to_date(?,'dd/mm/yyyy')
                                              THEN to_date(?,'dd/mm/yyyy')
											WHEN occ.datInizio &gt; to_date(?,'dd/mm/yyyy')
                                              THEN occ.datInizio
                                      END,'mm') + 1
						+ (case 
	   	 	  				   when ((to_char(CASE
								 				WHEN NVL (occ.datfine, to_date(?,'dd/mm/yyyy')) &lt;= to_date(?,'dd/mm/yyyy')
	                                              THEN to_date(?,'dd/mm/yyyy')
												WHEN NVL (occ.datfine, to_date(?,'dd/mm/yyyy')) &gt;= to_date(?,'dd/mm/yyyy')
	                                              THEN to_date(?,'dd/mm/yyyy')
	                                            WHEN occ.datfine &lt; to_date(?,'dd/mm/yyyy')
	                                              THEN occ.datfine
	                                          END,'yyyy') 
	                                  - to_char(CASE
		 						                  WHEN occ.datInizio &lt;= to_date(?,'dd/mm/yyyy')
		                                              THEN to_date(?,'dd/mm/yyyy')
													WHEN occ.datInizio &gt; to_date(?,'dd/mm/yyyy')
		                                              THEN occ.datInizio
		                                         END,'yyyy')) * 12
	   		  	   			   	      + to_char(CASE
									 				WHEN NVL (occ.datfine, to_date(?,'dd/mm/yyyy')) &lt;= to_date(?,'dd/mm/yyyy')
		                                              THEN to_date(?,'dd/mm/yyyy')
													WHEN NVL (occ.datfine, to_date(?,'dd/mm/yyyy')) &gt;= to_date(?,'dd/mm/yyyy')
		                                              THEN to_date(?,'dd/mm/yyyy')
		                                            WHEN occ.datfine &lt; to_date(?,'dd/mm/yyyy')
		                                              THEN occ.datfine
		                                        END,'mm') 
		                              - to_char(CASE
		 						                  WHEN occ.datInizio &lt;= to_date(?,'dd/mm/yyyy')
		                                              THEN to_date(?,'dd/mm/yyyy')
													WHEN occ.datInizio &gt; to_date(?,'dd/mm/yyyy')
		                                              THEN occ.datInizio
		                                          END,'mm') + 1) &gt; 1
			  
			  				   then	  
	   						   		   -(case when
				   	 	  	  		  	 	 (30 - to_char(CASE
					 						                  WHEN occ.datInizio &lt;= to_date(?,'dd/mm/yyyy')
					                                              THEN to_date(?,'dd/mm/yyyy')
																WHEN occ.datInizio &gt; to_date(?,'dd/mm/yyyy')
					                                              THEN occ.datInizio
					                                          END,'dd') + 1) &lt; 16
						  				   	 then 1
						  				   	 when
				   	 	  	  			   	 (30 - to_char(CASE
					 						                  WHEN occ.datInizio &lt;= to_date(?,'dd/mm/yyyy')
					                                              THEN to_date(?,'dd/mm/yyyy')
																WHEN occ.datInizio &gt; to_date(?,'dd/mm/yyyy')
					                                              THEN occ.datInizio
					                                          END,'dd') + 1) &gt;= 15
						  				   	 then 0
					  				   end)
					  				   -(case when
				   	 	  	  			 	  to_char(CASE
										                WHEN NVL (occ.datfine, to_date(?,'dd/mm/yyyy')) &lt;= to_date(?,'dd/mm/yyyy')
					                                      THEN to_date(?,'dd/mm/yyyy')
														WHEN NVL (occ.datfine, to_date(?,'dd/mm/yyyy')) &gt;= to_date(?,'dd/mm/yyyy')
					                                      THEN to_date(?,'dd/mm/yyyy')
					                                    WHEN occ.datfine &lt; to_date(?,'dd/mm/yyyy')
					                                      THEN occ.datfine
					                                  END,'dd') &lt; 16
						  					  then 1
						  					  when
				   	 	  	  				  to_char(CASE
										                WHEN NVL (occ.datfine, to_date(?,'dd/mm/yyyy')) &lt;= to_date(?,'dd/mm/yyyy')
			                                              THEN to_date(?,'dd/mm/yyyy')
														WHEN NVL (occ.datfine, to_date(?,'dd/mm/yyyy')) &gt;= to_date(?,'dd/mm/yyyy')
			                                              THEN to_date(?,'dd/mm/yyyy')
			                                            WHEN occ.datfine &lt; to_date(?,'dd/mm/yyyy')
			                                              THEN occ.datfine
			                                          END,'dd') &gt;= 15
						  					  then 0
					  					end)
							  when
			 	  			  	  ((to_char(CASE
								 				WHEN NVL (occ.datfine, to_date(?,'dd/mm/yyyy')) &lt;= to_date(?,'dd/mm/yyyy')
	                                              THEN to_date(?,'dd/mm/yyyy')
												WHEN NVL (occ.datfine, to_date(?,'dd/mm/yyyy')) &gt;= to_date(?,'dd/mm/yyyy')
	                                              THEN to_date(?,'dd/mm/yyyy')
	                                            WHEN occ.datfine &lt; to_date(?,'dd/mm/yyyy')
	                                              THEN occ.datfine
	                                          END,'yyyy') 
	                                - to_char(CASE
	 						                  WHEN occ.datInizio &lt;= to_date(?,'dd/mm/yyyy')
	                                              THEN to_date(?,'dd/mm/yyyy')
												WHEN occ.datInizio &gt; to_date(?,'dd/mm/yyyy')
	                                              THEN occ.datInizio
	                                          END,'yyyy')) * 12
	   		  	  			  	  	+ to_char(CASE
								 				WHEN NVL (occ.datfine, to_date(?,'dd/mm/yyyy')) &lt;= to_date(?,'dd/mm/yyyy')
	                                              THEN to_date(?,'dd/mm/yyyy')
												WHEN NVL (occ.datfine, to_date(?,'dd/mm/yyyy')) &gt;= to_date(?,'dd/mm/yyyy')
	                                              THEN to_date(?,'dd/mm/yyyy')
	                                            WHEN occ.datfine &lt; to_date(?,'dd/mm/yyyy')
	                                              THEN occ.datfine
	                                          END,'mm') 
	                                - to_char(CASE
	 						                  WHEN occ.datInizio &lt;= to_date(?,'dd/mm/yyyy')
	                                              THEN to_date(?,'dd/mm/yyyy')
												WHEN occ.datInizio &gt; to_date(?,'dd/mm/yyyy')
	                                              THEN occ.datInizio
	                                          END,'mm') + 1) = 1
			 				  then
			 	 			  	  -(case when
			   	 	  	  		  		 (to_char(CASE
									                WHEN NVL (occ.datfine, to_date(?,'dd/mm/yyyy')) &lt;= to_date(?,'dd/mm/yyyy')
		                                              THEN to_date(?,'dd/mm/yyyy')
													WHEN NVL (occ.datfine, to_date(?,'dd/mm/yyyy')) &gt;= to_date(?,'dd/mm/yyyy')
		                                              THEN to_date(?,'dd/mm/yyyy')
		                                            WHEN occ.datfine &lt; to_date(?,'dd/mm/yyyy')
		                                              THEN occ.datfine
		                                          END,'dd') 
		                                 - to_char(CASE
			 						                  WHEN occ.datInizio &lt;= to_date(?,'dd/mm/yyyy')
			                                             THEN to_date(?,'dd/mm/yyyy')
													  WHEN occ.datInizio &gt; to_date(?,'dd/mm/yyyy')
			                                             THEN occ.datInizio
			                                       END,'dd') + 1) &lt; 16 
					  					 then 1 
					    		         when
			   	 	  	  	 			 (to_char(CASE
									                WHEN NVL (occ.datfine, to_date(?,'dd/mm/yyyy')) &lt;= to_date(?,'dd/mm/yyyy')
		                                              THEN to_date(?,'dd/mm/yyyy')
													WHEN NVL (occ.datfine, to_date(?,'dd/mm/yyyy')) &gt;= to_date(?,'dd/mm/yyyy')
		                                              THEN to_date(?,'dd/mm/yyyy')
		                                            WHEN occ.datfine &lt; to_date(?,'dd/mm/yyyy')
		                                              THEN occ.datfine
		                                          END,'dd') 
		                                 - to_char(CASE
		 						                     WHEN occ.datInizio &lt;= to_date(?,'dd/mm/yyyy')
		                                                THEN to_date(?,'dd/mm/yyyy')
													 WHEN occ.datInizio &gt; to_date(?,'dd/mm/yyyy')
		                                                THEN occ.datInizio
		                                           END,'dd') + 1) &gt;= 15
					    				 then 0
				  				    end)
			 				  end))))
				          	   NUMMESISOSP
                  FROM am_stato_occupaz occ
                 WHERE occ.cdnlavoratore = ?
                   AND occ.codstatooccupaz = 'B1'
                   AND (occ.datinizio &gt;= to_date(?,'dd/mm/yyyy') or
                        (to_date(?,'dd/mm/yyyy') &gt;= occ.datinizio and
                         to_date(?,'dd/mm/yyyy') &lt;= nvl(occ.datfine,to_date(?,'dd/mm/yyyy'))))
                   AND trunc(occ.datinizio) &lt; (select trunc(datFornero) from ts_generale)
                )
            when de_stato_occupaz_ragg.CODSTATOOCCUPAZRAGG not in ('D','I') 
              then
                  0
         end
         NUMMESISOSP,
         case 
    		 	   when de_stato_occupaz_ragg.CODSTATOOCCUPAZRAGG in ('D','I')
        	   then
               (to_number(
							(to_char(to_date(?,'dd/mm/yyyy'),'yyyy')
                             - to_char(to_date(?,'dd/mm/yyyy'),'yyyy')) * 12
	  						 + to_char(to_date(?,'dd/mm/yyyy'),'mm')
		                    - to_char(to_date(?,'dd/mm/yyyy'),'mm') + 1
						+ (case 
	   	 	  				   when ((to_char(to_date(?,'dd/mm/yyyy'),'yyyy') 
	                                  - to_char(to_date(?,'dd/mm/yyyy'),'yyyy')) * 12
	   		  	   			   	      + to_char(to_date(?,'dd/mm/yyyy'),'mm') 
		                              - to_char(to_date(?,'dd/mm/yyyy'),'mm') + 1) &gt; 1
							   then	  
							   		   -(case when
											 to_date(?,'dd/mm/yyyy') &gt;= (select trunc(dat150) from ts_generale) 
												then 2 - (trunc( (
													(case 
													  when to_number(to_char(LAST_DAY(to_date('01/' || to_char(to_date(?,'dd/mm/yyyy'), 'mm') || '/' || to_char(to_date(?,'dd/mm/yyyy'), 'yyyy'), 'dd/mm/yyyy')), 'dd')) =
														   to_number(to_char(to_date(?,'dd/mm/yyyy'), 'dd'))
													  then 30
													  else to_number(to_char(to_date(?,'dd/mm/yyyy'), 'dd'))
													end) + (30 - 
															(case
															  when to_number(to_char(to_date(?,'dd/mm/yyyy'), 'dd')) &lt; 31 
															  then to_number(to_char(to_date(?,'dd/mm/yyyy'), 'dd'))
															  else 30
															end) + 1
														  )) /30))
											 when
											 (30 - to_char(to_date(?,'dd/mm/yyyy'),'dd') + 1) &lt; 16
											 then 1
											 when
											 (30 - to_char(to_date(?,'dd/mm/yyyy'),'dd') + 1) &gt;= 15
											 then 0
									   	 end)
									   	 -(case when
											  trunc(to_date(?,'dd/mm/yyyy')) &lt; (select trunc(dat150) from ts_generale) and to_char(to_date(?,'dd/mm/yyyy'),'dd') &lt; 16
											  then 1
											  when
											  trunc(to_date(?,'dd/mm/yyyy')) &lt; (select trunc(dat150) from ts_generale) and to_char(to_date(?,'dd/mm/yyyy'),'dd') &gt;= 15
											  then 0
											  else 0
										 end)
			 				  when
			 	  			  	  ((to_char(to_date(?,'dd/mm/yyyy'),'yyyy') 
	                                - to_char(to_date(?,'dd/mm/yyyy'),'yyyy')) * 12
	   		  	  			  	  	+ to_char(to_date(?,'dd/mm/yyyy'),'mm') 
	                                - to_char(to_date(?,'dd/mm/yyyy'),'mm') + 1) = 1
			 				  then
			 				  	-(case when
										to_date(?,'dd/mm/yyyy') &gt;= (select trunc(dat150) from ts_generale) and 
										 (to_number(to_char(to_date(?,'dd/mm/yyyy'),'dd')) - to_number(to_char(to_date(?,'dd/mm/yyyy'),'dd')) + 1) =
										 to_number(to_char(LAST_DAY(to_date('01/' || to_char(to_date(?,'dd/mm/yyyy'), 'mm') || '/' || to_char(to_date(?,'dd/mm/yyyy'), 'yyyy'), 'dd/mm/yyyy')), 'dd'))
										 then 0
										 when
										 to_date(?,'dd/mm/yyyy') &gt;= (select trunc(dat150) from ts_generale) and 
										 (to_number(to_char(to_date(?,'dd/mm/yyyy'),'dd')) - to_number(to_char(to_date(?,'dd/mm/yyyy'),'dd')) + 1) &lt;&gt;
										 to_number(to_char(LAST_DAY(to_date('01/' || to_char(to_date(?,'dd/mm/yyyy'), 'mm') || '/' || to_char(to_date(?,'dd/mm/yyyy'), 'yyyy'), 'dd/mm/yyyy')), 'dd'))
										 then 1
										 when to_date(?,'dd/mm/yyyy') &lt; (select trunc(dat150) from ts_generale) and
										 (to_number(to_char(to_date(?,'dd/mm/yyyy'),'dd')) - to_number(to_char(to_date(?,'dd/mm/yyyy'),'dd')) + 1) &lt; 16 
										 then 1 
										 when to_date(?,'dd/mm/yyyy') &lt; (select trunc(dat150) from ts_generale) and
										 (to_number(to_char(to_date(?,'dd/mm/yyyy'),'dd')) - to_number(to_char(to_date(?,'dd/mm/yyyy'),'dd')) + 1) &gt;= 15
										 then 0
							      end)
			 				  end)))	  	
             when de_stato_occupaz_ragg.CODSTATOOCCUPAZRAGG not in ('D','I')
             then
                  0
         end
         mesi_anz,
         substr(PG_MOVIMENTI.MesiRischioDisoccupazione(am_stato_occupaz.cdnLavoratore, to_date(?,'dd/mm/yyyy')), 1,
			instr(PG_MOVIMENTI.MesiRischioDisoccupazione(am_stato_occupaz.cdnLavoratore, to_date(?,'dd/mm/yyyy')), '-', 1)-1) mesi_rischio_disocc,
		 PG_MOVIMENTI.MesiRischioDisoccupazione(am_stato_occupaz.cdnLavoratore, to_date(?,'dd/mm/yyyy')) mesi_rischio_disocc_completo,
         to_number(am_stato_occupaz.NUMANZIANITAPREC297) mesi_anz_prec,
          (case 
			when de_stato_occupaz_ragg.CODSTATOOCCUPAZRAGG in ('D','I')
			   then
					(case 
						when ((to_char(to_date(?,'dd/mm/yyyy'),'yyyy') 
							  - to_char(to_date(?,'dd/mm/yyyy'),'yyyy')) * 12
							  + to_char(to_date(?,'dd/mm/yyyy'),'mm') 
							  - to_char(to_date(?,'dd/mm/yyyy'),'mm') + 1) &gt; 1
						then	  
							   (case when
								 trunc(to_date(?,'dd/mm/yyyy')) &gt;= (select trunc(dat150) from ts_generale) 
									then mod(
									((case 
										  when to_number(to_char(LAST_DAY(to_date('01/' || to_char(to_date(?,'dd/mm/yyyy'), 'mm') || '/' || to_char(to_date(?,'dd/mm/yyyy'), 'yyyy'), 'dd/mm/yyyy')), 'dd')) =
											   to_number(to_char(to_date(?,'dd/mm/yyyy'), 'dd'))
										  then 30
										  else to_number(to_char(to_date(?,'dd/mm/yyyy'), 'dd'))
										end) + 
										(30 - 
											(case
											  when to_number(to_char(to_date(?,'dd/mm/yyyy'), 'dd')) &lt; 31 
											  then to_number(to_char(to_date(?,'dd/mm/yyyy'), 'dd'))
											  else 30
											end) + 1
										  )
									), 30)
								  else 0
								end)
						when
						  ((to_char(to_date(?,'dd/mm/yyyy'),'yyyy') 
							- to_char(to_date(?,'dd/mm/yyyy'),'yyyy')) * 12
							+ to_char(to_date(?,'dd/mm/yyyy'),'mm') 
							- to_char(to_date(?,'dd/mm/yyyy'),'mm') + 1) = 1
							then
								(case when
									trunc(to_date(?,'dd/mm/yyyy')) &gt;= (select trunc(dat150) from ts_generale) 
									  and (to_number(to_char(to_date(?,'dd/mm/yyyy'),'dd')) - to_number(to_char(to_date(?,'dd/mm/yyyy'),'dd')) + 1) =
										   to_number(to_char(LAST_DAY(to_date('01/' || to_char(to_date(?,'dd/mm/yyyy'), 'mm') || '/' || to_char(to_date(?,'dd/mm/yyyy'), 'yyyy'), 'dd/mm/yyyy')), 'dd'))
									then 0
									when
									  trunc(to_date(?,'dd/mm/yyyy')) &gt;= (select trunc(dat150) from ts_generale) 
									  and (to_number(to_char(to_date(?,'dd/mm/yyyy'),'dd')) - to_number(to_char(to_date(?,'dd/mm/yyyy'),'dd')) + 1) &lt;&gt;
										   to_number(to_char(LAST_DAY(to_date('01/' || to_char(to_date(?,'dd/mm/yyyy'), 'mm') || '/' || to_char(to_date(?,'dd/mm/yyyy'), 'yyyy'), 'dd/mm/yyyy')), 'dd'))
									then (to_number(to_char(to_date(?,'dd/mm/yyyy'),'dd')) - to_number(to_char(to_date(?,'dd/mm/yyyy'),'dd')) + 1)
									else 0
								end)
						else 0
					end)			  	
			 when de_stato_occupaz_ragg.CODSTATOOCCUPAZRAGG not in ('D','I')
			 then 0
		end)
		giorni_anz,
         to_number(am_stato_occupaz.NUMMESISOSP) NUMMESISOSPPREC,
         to_char(am_stato_occupaz.datcalcoloanzianita,'DD/MM/YYYY') datcalcoloanzianita, 
         to_char(am_stato_occupaz.datcalcolomesisosp,'DD/MM/YYYY') datcalcolomesisosp
    FROM am_stato_occupaz
         INNER JOIN de_stato_occupaz ON (am_stato_occupaz.codstatooccupaz = de_stato_occupaz.codstatooccupaz)
         INNER JOIN de_stato_occupaz_ragg ON (de_stato_occupaz.codstatooccupazragg = de_stato_occupaz_ragg.codstatooccupazragg)		
   WHERE am_stato_occupaz.datfine IS NULL
         AND am_stato_occupaz.cdnlavoratore = ?
ORDER BY am_stato_occupaz.datinizio DESC
 "/>
 
<STATEMENT name="ADD_AM_MOVIMENTO_APPOGGIO_DOPPI" query="{ call ? := PG_MOVIMENTI_DOPPI.INS_MOVIMENTI_DOPPI(?,?,?) }" />

<STATEMENT name="GET_CODCPI"  
		  query="select de_cpi.STRDESCRIZIONE || ' - ' || de_cpi.CODCPI as DESCRIZIONE
		  		 from de_cpi 
		  		 where de_cpi.CODCPI=? "/>
		  		 
<STATEMENT name="GET_CODTIPODOCEX"  
		  query="SELECT STRDESCRIZIONE || 
		  				DECODE(SYSDATE, GREATEST(SYSDATE, DATFINEVAL),' (scaduto)',
                        LEAST(SYSDATE, DATINIZIOVAL), ' (scaduto)', '') AS STRDESCRTIPODOC
				FROM DE_STATUS_STRANIERO
				WHERE CODSTATUS = ?"/>
		  		 
<STATEMENT name="GET_CODMOTIVOPERMSOGGEX"  
		  query="SELECT STRDESCRIZIONE || 
		  				DECODE(SYSDATE, GREATEST(SYSDATE, DATFINEVAL),' (scaduto)',
                        LEAST(SYSDATE, DATINIZIOVAL), ' (scaduto)', '') AS STRDESCRMOTIVOPERM
				FROM DE_EX_MOTIVO_RIL
				WHERE CODMOTIVORIL = ?"/>
		  		 
		  		 
<STATEMENT name="GET_MONO_MOBILITA"  
		  query="SELECT CODMONOATTIVA FROM DE_MB_TIPO WHERE CODMBTIPO = ?" />

<STATEMENT name="GET_ISCRIZIONE_MOB_X_XML" query="SELECT to_char(mob.datfine, 'yyyy-mm-dd') dataFineIscrMbo,
							  to_char(mob.datinizio, 'yyyy-mm-dd') dataInizioIscrMbo,
							  mob.CODTIPOMOB tipoIscrMbo,
							  mob.prgmobilitaiscr,
							  az.strcodicefiscale codiceFiscale,
							  'NT' qualificazione,
							  az.strragionesociale ragioneSociale,
							  az.codtipoazienda tipologiaAzienda,
							  aua.codccnl ccnlApplicato,
							  aua.codazstato codAzStato,
							  aua.strdenominazione denominazioneSede,
							  aua.strnumeroinps matricolaINPS,
							  aua.codateco settore,
							  aua.strindirizzo indirizzo,
							  aua.codcom comune,
							  aua.strcap cap,
							  aua.strtel telefono,
							  aua.strfax fax,
							  aua.stremail email,
							  lav.codcittadinanza cittadinanza,
							  lav.strcodicefiscale codiceFiscaleLav,
							  lav.strcognome cognome,
							  lav.codcomnas comuneNascita,
							  to_char(lav.datnasc, 'yyyy-mm-dd') dataNascita,
							  lav.strnome nome,
							  lav.strsesso sesso,
							  lav.strindirizzodom indirizzoDom,
							  lav.codcomdom comuneDom,
							  com1.strcap capDom,
							  lav.strindirizzores indirizzoRes,
							  lav.codcomres comuneRes,
							  com2.strcap capRes,
							  lav.strcell cellulare,
							  lav.strteldom telefonoLav,
							  to_char(mob.datfinemov, 'yyyy-mm-dd') dataLicenziamento,
							  'NT' categoria,
							  to_char(mob.datiniziomov, 'yyyy-mm-dd') dataAssunzione,
							  mob.codmansione qualifica,
							  'NT' tipoContratto,
							  mob.codccnl ccnl,
  							  to_char(sysdate, 'yyyy-mm-dd') dataInvio,
  							  to_char(mob.datmaxdiff, 'yyyy-mm-dd') dataMaxDiffIscrMbo,
  							  mt.CODMONOATTIVA,
  							  mob.CDNMBSTATORICH,
  							  mob.FLGNONIMPRENDITORE, mob.flgcasodubbio casoDubbio,
  							  mob.strDescCasoDubbio,
  							  mob.numklomobiscr
							FROM AM_MOBILITA_ISCR mob
							LEFT JOIN DE_PROVINCIA pr
							ON mob.codprovincia = pr.codprovincia
							LEFT JOIN DE_MB_TIPO mt
							ON mob.CODTIPOMOB = mt.CODMBTIPO
							LEFT JOIN AN_AZIENDA az
							ON az.PRGAZIENDA = MOB.PRGAZIENDA
							LEFT JOIN AN_UNITA_AZIENDA aua
							ON AUA.PRGAZIENDA = MOB.PRGAZIENDA
							AND AUA.PRGUNITA  = MOB.PRGUNITA
							LEFT JOIN AN_LAVORATORE lav
							ON lav.cdnlavoratore = mob.cdnlavoratore
							INNER JOIN DE_COMUNE com1
							ON lav.codcomdom = com1.codcom
							INNER JOIN DE_COMUNE com2
							ON lav.codcomres = com2.codcom
					where mob.prgmobilitaiscr = ?"/>		 
					
<STATEMENT name="GET_CODICE_COMUNICAZIONE_PROG" query="SELECT lpad(codcomunicazione + 1, 8, '0') AS CODCOM
										FROM ts_progressivo
										WHERE TIPOCOMUNICAZIONE = 30
										AND numanno             = ?"/>
										
<STATEMENT name="GET_CODICE_COMUNICAZIONE_INSERT" query="SELECT codcomunicazione + 1 AS CODCOM
										FROM ts_progressivo
										WHERE TIPOCOMUNICAZIONE = 30
										AND numanno             = ?"/>										
 					
<STATEMENT name="UPDATE_TS_PROGRESSIVO" query="UPDATE ts_progressivo
							SET CODCOMUNICAZIONE    = ?
							WHERE TIPOCOMUNICAZIONE = 30
							AND NUMANNO             = ?"/> 			
							
<STATEMENT name="UPDATE_AM_MOBILITA_STATO" 
			query="UPDATE AM_MOBILITA_ISCR 
				   SET CDNMBSTATORICH = ?, 
				       CDNUTMOD = ?,
					   DTMMOD = sysdate , 
					   CODDOMANDA = ?,
					   NUMKLOMOBISCR = ?
				   WHERE PRGMOBILITAISCR = ?" />
			
<STATEMENT name="GET_CODMIN_PROVINCIA" query="select codmin from de_provincia where codprovincia = ?"/>			

<STATEMENT name="GET_COD_ATECO_DOT" query="SELECT codatecodot FROM de_attivita WHERE codateco = ?"/>

<STATEMENT name="GET_GRADO_OCCUPABILITA" query="SELECT codgradoocc AS codice, strdescrizione as descrizione FROM de_grado_occ"/>

<STATEMENT name="GET_QUESTURAPERMSOGGEX"  
		  query="SELECT STRDESCRIZIONE || 
		  				DECODE(SYSDATE, GREATEST(SYSDATE, DATFINEVAL),' (scaduto)',
                        LEAST(SYSDATE, DATINIZIOVAL), ' (scaduto)', '') AS STRDESCRQUESTURA
				FROM DE_QUESTURA
				WHERE CODQUESTURA = ?"/>

<STATEMENT name="GET_INFO_MOV_APP_PERM_SOGGEX"  
		  query="SELECT MOT.STRDESCRIZIONE || 
		  				DECODE(SYSDATE, GREATEST(SYSDATE, MOT.DATFINEVAL),' (scaduto)',
                        LEAST(SYSDATE, MOT.DATINIZIOVAL), ' (scaduto)', '') AS STRDESCRMOTRIL,
		                DE_STATUS_STRANIERO.STRDESCRIZIONE || 
				  				DECODE(SYSDATE, GREATEST(SYSDATE, DE_STATUS_STRANIERO.DATFINEVAL),' (scaduto)',
		                        LEAST(SYSDATE, DE_STATUS_STRANIERO.DATINIZIOVAL), ' (scaduto)', '') AS STRDESCRTIPODOCEX,
		                DE_QUESTURA.STRDESCRIZIONE || 
		  				DECODE(SYSDATE, GREATEST(SYSDATE, DE_QUESTURA.DATFINEVAL),' (scaduto)',
                        LEAST(SYSDATE, DE_QUESTURA.DATINIZIOVAL), ' (scaduto)', '') AS STRDESCRQUESTURA,
                        APP.STRCOGNOMELEGRAPP, APP.STRNOMELEGRAPP, 
                        TO_CHAR(APP.DATSCADENZALEGRAPP, 'DD/MM/YYYY') DATSCADENZALEGRAPP,
                        TO_CHAR(APP.STRNUMDOCEXLEGRAPP) STRNUMDOCEXLEGRAPP,
                        APP.FLGSOGGINITALIA AS FLGSOGGINITALIA
				FROM AM_MOVIMENTO_APPOGGIO APP
				LEFT JOIN DE_EX_MOTIVO_RIL MOT ON (APP.CODMOTIVOPERMSOGGEXLEGRAPP = MOT.CODMOTIVORIL)
				LEFT JOIN DE_STATUS_STRANIERO ON (APP.CODTIPODOCEXLEGRAPP = DE_STATUS_STRANIERO.CODSTATUS)
				LEFT JOIN DE_QUESTURA ON (APP.CODQUESTURALEGRAPP = DE_QUESTURA.CODQUESTURA)
				WHERE APP.PRGMOVIMENTOAPP = ?"/>

<STATEMENT name="GET_INFO_MOV_PERM_SOGGEX"  
		  query="SELECT MOT.STRDESCRIZIONE || 
		  				DECODE(SYSDATE, GREATEST(SYSDATE, MOT.DATFINEVAL),' (scaduto)',
                        LEAST(SYSDATE, MOT.DATINIZIOVAL), ' (scaduto)', '') AS STRDESCRMOTRIL,
		                DE_STATUS_STRANIERO.STRDESCRIZIONE || 
				  				DECODE(SYSDATE, GREATEST(SYSDATE, DE_STATUS_STRANIERO.DATFINEVAL),' (scaduto)',
		                        LEAST(SYSDATE, DE_STATUS_STRANIERO.DATINIZIOVAL), ' (scaduto)', '') AS STRDESCRTIPODOCEX,
		                DE_QUESTURA.STRDESCRIZIONE || 
		  				DECODE(SYSDATE, GREATEST(SYSDATE, DE_QUESTURA.DATFINEVAL),' (scaduto)',
                        LEAST(SYSDATE, DE_QUESTURA.DATINIZIOVAL), ' (scaduto)', '') AS STRDESCRQUESTURA,
                        MOV.STRCOGNOMELEGRAPP, MOV.STRNOMELEGRAPP, 
                        TO_CHAR(MOV.DATSCADENZALEGRAPP, 'DD/MM/YYYY') DATSCADENZALEGRAPP,
                        TO_CHAR(MOV.STRNUMDOCEXLEGRAPP) STRNUMDOCEXLEGRAPP,
                        MOV.FLGSOGGINITALIA AS FLGSOGGINITALIA
				FROM AM_MOVIMENTO MOV
				LEFT JOIN DE_EX_MOTIVO_RIL MOT ON (MOV.CODMOTIVOPERMSOGGEXLEGRAPP = MOT.CODMOTIVORIL)
				LEFT JOIN DE_STATUS_STRANIERO ON (MOV.CODTIPODOCEXLEGRAPP = DE_STATUS_STRANIERO.CODSTATUS)
				LEFT JOIN DE_QUESTURA ON (MOV.CODQUESTURALEGRAPP = DE_QUESTURA.CODQUESTURA)
				WHERE MOV.PRGMOVIMENTO = ?"/>
				
<STATEMENT name="GET_INFO_GENERALI_STATO_OCC_APERTO" 
		query="SELECT de_stato_occupaz_ragg.codstatooccupazragg
			FROM am_stato_occupaz
	         INNER JOIN de_stato_occupaz ON (am_stato_occupaz.codstatooccupaz = de_stato_occupaz.codstatooccupaz)
	         INNER JOIN de_stato_occupaz_ragg ON (de_stato_occupaz.codstatooccupazragg = de_stato_occupaz_ragg.codstatooccupazragg)		
		   WHERE am_stato_occupaz.cdnlavoratore = ? and am_stato_occupaz.datfine IS NULL"/>
		   
<STATEMENT
  name="AMSTR_STATO_OCC_MANUALE_IN_MOBILITA"
  query="SELECT count(socc.prgStatooccupaz) numStatiOccManuali
		 FROM AM_STATO_OCCUPAZ socc
		 inner join de_stato_occupaz desocc on (socc.codstatooccupaz = desocc.codstatooccupaz)
		WHERE (socc.CDNLAVORATORE=?) and (socc.codMonoProvenienza in ('N', 'G', 'O')) and (desocc.codstatooccupazragg in ('A', 'O')) and
		( (trunc(datinizio) between to_date(?,'dd/mm/yyyy') and to_date(?,'dd/mm/yyyy')) or 
		  (trunc(nvl(datfine, sysdate)) between to_date(?,'dd/mm/yyyy') and to_date(?,'dd/mm/yyyy')) )"/>
		  
<STATEMENT name="GET_LISTA_BATCH_PROGRAMMATI"
	query="select de_tipo_batch.strdescrizione descTipo, to_char(ts_programma_batch.datultimaelab, 'dd/mm/yyyy') datUltimaElab,
			ts_programma_batch.flgAttivo, ts_programma_batch.prgprogrammabatch,
			case 
			  when length(ts_programma_batch.strNote) > 30 then substr(ts_programma_batch.strNote,1,30)
			  else ts_programma_batch.strNote
			end strNote, de_servizio.strdescrizione descServizio, de_azione.strdescrizione descAzione,
			de_motivo_fine_atto.strdescrizione motChiusuraDid, ts_programma_batch.codmotivofineattodid,
			to_char(ts_programma_batch.numggperiodoprog) ggProgr, ts_programma_batch.flgCmIscr, ts_programma_batch.numggrangefinedid,
			to_char(ts_programma_batch.numggperiododate) ggScadenza,
			ts_programma_batch.codtipobatch, ts_programma_batch.prgmotcontatto, ts_programma_batch.numggprecavviso,
			ts_programma_batch.codservizio, ts_programma_batch.codstatoappuntamento, ts_programma_batch.numggperiododate,
			ts_programma_batch.prgazioni, ts_programma_batch.codesito, ts_programma_batch.codCpi, de_cpi.strdescrizione descCpi 
			from ts_programma_batch
			inner join de_tipo_batch on (ts_programma_batch.codtipobatch = de_tipo_batch.codtipobatch)
			left join de_servizio on (ts_programma_batch.codservizio = de_servizio.codservizio)
			left join de_azione on (ts_programma_batch.prgazioni = de_azione.prgazioni)
			left join de_motivo_fine_atto on (ts_programma_batch.codmotivofineattodid = de_motivo_fine_atto.codmotivofineatto)
			left join de_cpi on (ts_programma_batch.codCpi = de_cpi.codCpi)
			order by decode(de_tipo_batch.codtipobatch,'APPUNSMS', 0, 'AZIONSMS', 1, 'DIDSMS', 2, 'PERDISMS', 3, 4), ts_programma_batch.datultimaelab desc"/>
			
<STATEMENT
  name ="DELETE_PROGRAMMAZIONE_BATCH"
  query="DELETE FROM TS_PROGRAMMA_BATCH WHERE PRGPROGRAMMABATCH = ?"/>
  
<STATEMENT name="GET_TIPO_BATCH_PROGRAMMAZIONE"  
		  query="SELECT CODTIPOBATCH AS CODICE,
		  			STRDESCRIZIONE || 
		  				DECODE(SYSDATE, GREATEST(SYSDATE, DATFINEVAL),' (scaduto)',
                        LEAST(SYSDATE, DATINIZIOVAL), ' (scaduto)', '') AS DESCRIZIONE
				FROM DE_TIPO_BATCH ORDER BY STRDESCRIZIONE"/>
				
<STATEMENT name="SEL_TUTTI_MOTIVO_CONTATTO_AG"  
		  query="SELECT PRGMOTCONTATTO AS CODICE,
		  			STRDESCRIZIONE || 
		  				DECODE(SYSDATE, GREATEST(SYSDATE, DATFINEVAL),' (scaduto)',
                        LEAST(SYSDATE, DATINIZIOVAL), ' (scaduto)', '') AS DESCRIZIONE
				FROM DE_MOTIVO_CONTATTOAG ORDER BY STRDESCRIZIONE"/>
				
<STATEMENT name="SEL_TUTTI_SERVIZI_APPUNTAMENTO_AG"  
		  query="SELECT CODSERVIZIO AS CODICE,
		  			STRDESCRIZIONE || 
		  				DECODE(SYSDATE, GREATEST(SYSDATE, DATFINEVAL),' (scaduto)',
                        LEAST(SYSDATE, DATINIZIOVAL), ' (scaduto)', '') AS DESCRIZIONE
				FROM DE_SERVIZIO ORDER BY STRDESCRIZIONE"/>
				
<STATEMENT name="SEL_TUTTI_STATI_APPUNTAMENTO_AG"  
		  query="SELECT CODSTATOAPPUNTAMENTO AS CODICE,
		  			STRDESCRIZIONE || 
		  				DECODE(SYSDATE, GREATEST(SYSDATE, DATFINEVAL),' (scaduto)',
                        LEAST(SYSDATE, DATINIZIOVAL), ' (scaduto)', '') AS DESCRIZIONE
				FROM DE_STATO_APPUNTAMENTO ORDER BY STRDESCRIZIONE"/>
				
<STATEMENT name="QUERY_NEXTVAL_PROGRAMMAZIONE_STATEMENT"
	query="SELECT s_ts_programma_batch.nextval as DO_NEXTVAL from dual" />
	
<STATEMENT name="INSERT_PROGRAMMAZIONE_BATCH_APP"
	query="INSERT INTO TS_PROGRAMMA_BATCH
                       (prgProgrammaBatch,
                        codTipoBatch,
                        codServizio,
                        codstatoappuntamento,
                        prgmotcontatto,
                        numggprecavviso, numggperiododate, numggperiodoprog,
                        cdnUtIns, dtmIns,
                        cdnUtmod, dtmmod,
                        datinizioval, datfineval, codtiposms, prgtipoevidenza, flgAttivo,codCpi)
                VALUES( to_number(?),
                        ?,                    
                        ?, 
                        ?, 
                        to_number(?), 
                        to_number(?), to_number(?), to_number(?),
                        ?,SYSDATE, 
                        ?,SYSDATE,
                       	to_date(?, 'dd/mm/yyyy'), to_date(?, 'dd/mm/yyyy'), ?, to_number(?), 'N',?           
                       )
" />

<STATEMENT name="INSERT_PROGRAMMAZIONE_BATCH_AZIONE"
	query="INSERT INTO TS_PROGRAMMA_BATCH
                       (prgProgrammaBatch,
                        codTipoBatch,
                        codServizio,
                        prgmotcontatto,
                        prgazioni, codesito,
                        numggprecavviso, numggperiododate, numggperiodoprog,
                        cdnUtIns, dtmIns,
                        cdnUtmod, dtmmod,
                        datinizioval, datfineval, codtiposms, prgtipoevidenza, flgAttivo, codCpi)
                VALUES( to_number(?),
                        ?,                    
                        ?,
                        to_number(?),
                        to_number(?), ?,
                        to_number(?), to_number(?), to_number(?),
                        ?,SYSDATE, 
                        ?,SYSDATE,
                       	to_date(?, 'dd/mm/yyyy'), to_date(?, 'dd/mm/yyyy'), ?, to_number(?), 'N',?           
                       )
" />

<STATEMENT name="INSERT_PROGRAMMAZIONE_BATCH_DID"
	query="INSERT INTO TS_PROGRAMMA_BATCH
                       (prgProgrammaBatch,
                        codTipoBatch,
                        prgmotcontatto,
                        numggprecavviso, numggperiodoprog,
                        cdnUtIns, dtmIns,
                        cdnUtmod, dtmmod,
                        datinizioval, datfineval, codtiposms, prgtipoevidenza, flgAttivo,codCpi)
                VALUES( to_number(?),
                        ?,
                        to_number(?),
                        to_number(?), to_number(?),
                        ?,SYSDATE, 
                        ?,SYSDATE,
                       	to_date(?, 'dd/mm/yyyy'), to_date(?, 'dd/mm/yyyy'), ?, to_number(?), 'N', ?           
                       )
" />

<STATEMENT name="INSERT_PROGRAMMAZIONE_BATCH_PERDDISOCC"
	query="INSERT INTO TS_PROGRAMMA_BATCH
                       (prgProgrammaBatch,
                        codTipoBatch,
                        prgmotcontatto, codMotivoFineAttoDid, flgCmIscr,
                        numggperiododate, numggrangefinedid, numggperiodoprog,
                        cdnUtIns, dtmIns,
                        cdnUtmod, dtmmod,
                        datinizioval, datfineval, codtiposms, prgtipoevidenza, flgAttivo,codCpi)
                VALUES( to_number(?),
                        ?,
                        to_number(?), ?, ?,
                        to_number(?), to_number(?), to_number(?),
                        ?,SYSDATE, 
                        ?,SYSDATE,
                       	to_date(?, 'dd/mm/yyyy'), to_date(?, 'dd/mm/yyyy'), ?, to_number(?), 'N',?           
                       )
" />

<STATEMENT name="GET_DETTAGLIO_PROGRAMMAZIONE_BATCH"
	query="select prgProgrammaBatch, codTipoBatch, flgAttivo,
				codServizio, codstatoappuntamento, prgmotcontatto, numggprecavviso, numggperiododate, numggperiodoprog,
				prgazioni, codesito, numkloprogrammabatch, codtiposms, prgtipoevidenza,
				to_char(datinizioval, 'dd/mm/yyyy') datinizioval, to_char(datfineval, 'dd/mm/yyyy') datfineval,
				to_char(datultimaelab, 'dd/mm/yyyy') datUltimaElab,
				to_char(cdnutins) cdnutins, to_char(cdnutmod) cdnutmod, 
                to_char(dtmins, 'dd/mm/yyyy') dtmins, to_char(dtmmod, 'dd/mm/yyyy') dtmmod, strnote,
                codMotivoFineAttoDid, flgCmIscr, numggrangefinedid,
				case 
              		when TRUNC(SYSDATE) BETWEEN TRUNC(DATINIZIOVAL) AND TRUNC(DATFINEVAL)
              			then 'true'
              		else 'false'
         		end	prograttivavalidita, codCpi
			from ts_programma_batch
			where prgprogrammabatch = ?"/>
			
<STATEMENT name="AGGIORNA_DETTAGLIO_PROGRAMMAZIONE_BATCH_APP"
	query="update ts_programma_batch
				set codServizio = ?,
				codstatoappuntamento = ?,
				prgmotcontatto = to_number(?),
				numggprecavviso = to_number(?),
				numggperiododate = to_number(?),
				numggperiodoprog = to_number(?), flgattivo = ?,
				datinizioval = to_date(?, 'dd/mm/yyyy'),
				datfineval = to_date(?, 'dd/mm/yyyy'),
				codtiposms = ?, prgtipoevidenza = to_number(?),
				numkloprogrammabatch = to_number(?) + 1,
				cdnutmod = ?,
				dtmmod = sysdate,
				codCpi = ?
			where prgprogrammabatch = to_number(?)"/>
			
<STATEMENT name="AGGIORNA_DETTAGLIO_PROGRAMMAZIONE_BATCH_AZIONE"
	query="update ts_programma_batch
				set codServizio = ?,
				prgmotcontatto = to_number(?),
				numggprecavviso = to_number(?),
				numggperiododate = to_number(?),
				numggperiodoprog = to_number(?), flgattivo = ?,
				datinizioval = to_date(?, 'dd/mm/yyyy'),
				datfineval = to_date(?, 'dd/mm/yyyy'),
				prgazioni = to_number(?),
				codesito = ?,
				codtiposms = ?, prgtipoevidenza = to_number(?),
				numkloprogrammabatch = to_number(?) + 1,
				cdnutmod = ?,
				dtmmod = sysdate,
				codCpi = ?
			where prgprogrammabatch = to_number(?)"/>
			
<STATEMENT name="AGGIORNA_DETTAGLIO_PROGRAMMAZIONE_BATCH_DID"
	query="update ts_programma_batch
				set prgmotcontatto = to_number(?),
				numggprecavviso = to_number(?),
				numggperiodoprog = to_number(?), flgattivo = ?,
				datinizioval = to_date(?, 'dd/mm/yyyy'),
				datfineval = to_date(?, 'dd/mm/yyyy'),
				codtiposms = ?, prgtipoevidenza = to_number(?),
				numkloprogrammabatch = to_number(?) + 1,
				cdnutmod = ?,
				dtmmod = sysdate,
				codCpi = ?
			where prgprogrammabatch = to_number(?)"/>
			
<STATEMENT name="AGGIORNA_DETTAGLIO_PROGRAMMAZIONE_BATCH_PERDDISOCC"
	query="update ts_programma_batch
				set prgmotcontatto = to_number(?),
				codMotivoFineAttoDid = ?,
				flgCmIscr = ?,
                numggperiododate = to_number(?),
                numggrangefinedid = to_number(?),
                numggperiodoprog = to_number(?),
                flgattivo = ?,
				datinizioval = to_date(?, 'dd/mm/yyyy'),
				datfineval = to_date(?, 'dd/mm/yyyy'),
				codtiposms = ?, prgtipoevidenza = to_number(?),
				numkloprogrammabatch = to_number(?) + 1,
				cdnutmod = ?,
				dtmmod = sysdate,
				codCpi = ?
			where prgprogrammabatch = to_number(?)"/>

<STATEMENT name="COMBO_TIPO_SMS_PROGRAMMAZIONE"
		   query="select TAB.CODTIPOSMS as CODICE, 
                  TAB.STRDESCRIZIONE AS DESCRIZIONE, REL.CODTIPOBATCH
                  from DE_REL_BATCH_SMS REL 
                  inner join DE_TIPO_SMS TAB ON (REL.CODTIPOSMS = TAB.CODTIPOSMS)
                  order by TAB.STRDESCRIZIONE"/>
			
<STATEMENT name="COMBO_TIPO_EVIDENZA_PROGRAMMAZIONE"
		   query="select E.PRGTIPOEVIDENZA as CODICE, 
                  E.STRDESCRIZIONE AS DESCRIZIONE, REL.CODTIPOBATCH
                  from DE_REL_BATCH_EVID REL 
                  inner join DE_TIPO_EVIDENZA E ON (REL.PRGTIPOEVIDENZA = E.PRGTIPOEVIDENZA)
                  order by E.STRDESCRIZIONE"/>
                  
<STATEMENT name="GET_MAX_PROGRAMMAZIONE_BATCH_ATTIVE"
		   query="SELECT NUMMAXPROGR
                  FROM DE_TIPO_BATCH
                  WHERE CODTIPOBATCH = ?"/>
                  
<STATEMENT name="GET_PROGRAMMAZIONE_BATCH_ATTIVE"
		   query="SELECT COUNT(*) AS NUMPROGRAMMAZIONIATTIVE
                  FROM TS_PROGRAMMA_BATCH
                  WHERE CODTIPOBATCH = ? AND FLGATTIVO = 'S'
                  AND PRGPROGRAMMABATCH != TO_NUMBER(?)"/>
                  
                  
<STATEMENT name="GET_PROGRAMMAZIONE_APP_SERVIZIO_ATTIVO"
		   query="SELECT COUNT(*) AS NUMPROGRAMMAZIONIATTIVE
                  FROM TS_PROGRAMMA_BATCH
                  WHERE CODTIPOBATCH = ? AND CODSERVIZIO = ? AND FLGATTIVO = 'S' 
                  AND PRGPROGRAMMABATCH != TO_NUMBER(?)"/>
 
 <STATEMENT name="GET_PROGRAMMAZIONE_APP_SERVIZIO_ATTIVO_CPI"
		   query="SELECT COUNT(*) AS NUMPROGRAMMAZIONIATTIVE 
                  FROM TS_PROGRAMMA_BATCH 
                  WHERE CODTIPOBATCH = ? AND CODSERVIZIO = ? AND FLGATTIVO = 'S' 
                  AND ((LENGTH(TRIM (CODCPI)) = 0 OR CODCPI IS NULL) OR (LENGTH(TRIM (CODCPI)) > 0 AND CODCPI = ?)) 
                  AND PRGPROGRAMMABATCH != TO_NUMBER(?)"/>
                                   
<STATEMENT name="GET_PROGRAMMAZIONE_AZIONEPROGRAMMATA_AZIONE_ATTIVO"
		   query="SELECT COUNT(*) AS NUMPROGRAMMAZIONIATTIVE
                  FROM TS_PROGRAMMA_BATCH
                  WHERE CODTIPOBATCH = ? AND PRGAZIONI = TO_NUMBER(?) AND FLGATTIVO = 'S' 
                  AND PRGPROGRAMMABATCH != TO_NUMBER(?)"/>
                  
<STATEMENT name="GET_PROGRAMMAZIONE_AZIONEPROGRAMMATA_AZIONE_ATTIVO_CPI"
		   query="SELECT COUNT(*) AS NUMPROGRAMMAZIONIATTIVE
                  FROM TS_PROGRAMMA_BATCH
                  WHERE CODTIPOBATCH = ? AND PRGAZIONI = TO_NUMBER(?) AND FLGATTIVO = 'S'
                  AND ((LENGTH(TRIM (CODCPI)) = 0 OR CODCPI IS NULL) OR (LENGTH(TRIM (CODCPI)) > 0 AND CODCPI = ?)) 
                  AND PRGPROGRAMMABATCH != TO_NUMBER(?)"/>
                  
<STATEMENT name="GET_PROGRAMMAZIONE_DID_ATTIVO"
		   query="SELECT COUNT(*) AS NUMPROGRAMMAZIONIATTIVE
                  FROM TS_PROGRAMMA_BATCH
                  WHERE CODTIPOBATCH = ? AND FLGATTIVO = 'S'
                  AND PRGPROGRAMMABATCH != TO_NUMBER(?)"/>
                                    
<STATEMENT name="GET_PROGRAMMAZIONE_DID_ATTIVO_CPI"
		   query="SELECT COUNT(*) AS NUMPROGRAMMAZIONIATTIVE
                  FROM TS_PROGRAMMA_BATCH
                  WHERE CODTIPOBATCH = ? AND FLGATTIVO = 'S'
                  AND ((LENGTH(TRIM (CODCPI)) = 0 OR CODCPI IS NULL) OR (LENGTH(TRIM (CODCPI)) > 0 AND CODCPI = ?)) 
                  AND PRGPROGRAMMABATCH != TO_NUMBER(?)"/>
                  
<STATEMENT name="GET_PROGRAMMAZIONE_PERDDISOCC_MOTIVO_ATTIVO"
		   query="SELECT COUNT(*) AS NUMPROGRAMMAZIONIATTIVE
                  FROM TS_PROGRAMMA_BATCH
                  WHERE CODTIPOBATCH = ? AND CODMOTIVOFINEATTODID = ? AND FLGATTIVO = 'S'
                  AND PRGPROGRAMMABATCH != TO_NUMBER(?)"/>
                  
<STATEMENT name="GET_PROGRAMMAZIONE_PERDDISOCC_MOTIVO_NULL_ATTIVO"
		   query="SELECT COUNT(*) AS NUMPROGRAMMAZIONIATTIVE
                  FROM TS_PROGRAMMA_BATCH
                  WHERE CODTIPOBATCH = ? AND CODMOTIVOFINEATTODID IS NULL AND FLGATTIVO = 'S'
                  AND PRGPROGRAMMABATCH != TO_NUMBER(?)"/>
                  
<STATEMENT name="GET_PROGRAMMAZIONE_PERDDISOCC_CPI"
		   query="SELECT COUNT(*) AS NUMPROGRAMMAZIONIATTIVE
                  FROM TS_PROGRAMMA_BATCH
                  WHERE CODTIPOBATCH = ? AND FLGATTIVO = 'S'
                  AND ((LENGTH(TRIM (CODCPI)) = 0 OR CODCPI IS NULL) OR (LENGTH(TRIM (CODCPI)) > 0 AND CODCPI = ?))  
                  AND PRGPROGRAMMABATCH != TO_NUMBER(?)"/>

<STATEMENT name="CERCA_PERIODI_LAVORATIVI_MOVIMENTO"
	query="select periodo.PRGPERIODOLAV,
				periodo.PRGMOVIMENTO,
				to_char(periodo.DATINIZIO, 'dd/mm/yyyy') DATAINIZIO,
				to_char(periodo.DATAFINE, 'dd/mm/yyyy') DATAFINE,
				to_char(mov.DATINIZIOMOV, 'dd/mm/yyyy') DATINIZIOMOVINTERM,
				to_char(periodo.NUMGGINTERMITTENTE) GIORNI,
				NVL(periodo.FLAGPERIODOLAV, 'N') VALIDO,
				periodo.CODCONTRATTO,
				periodo.NUMKLOPERIODOLAV, periodo.CDNUTINS, periodo.CDNUTMOD,
				TO_CHAR(periodo.DTMINS, 'DD/MM/YYYY HH24:MI') DTMINS,
				TO_CHAR(periodo.DTMMOD, 'DD/MM/YYYY HH24:MI') DTMMOD
			from am_periodo_lavorativo periodo
			inner join am_movimento mov on (periodo.PRGMOVIMENTO = mov.PRGMOVIMENTO)
			WHERE periodo.PRGMOVIMENTO = ?
			order by periodo.DATINIZIO asc"/>
			
<STATEMENT name="INSERT_PERIODO_LAVORATIVO_MOVIMENTO"	
	query="INSERT INTO AM_PERIODO_LAVORATIVO (PRGPERIODOLAV, PRGMOVIMENTO, DATINIZIO, DATAFINE,
					NUMGGINTERMITTENTE, FLAGPERIODOLAV, CODCONTRATTO, CDNUTINS, CDNUTMOD, DTMINS, DTMMOD)
		   VALUES (S_AM_PERIODO_LAVORATIVO.NEXTVAL, TO_NUMBER(?), TO_DATE(?,'DD/MM/YYYY'), TO_DATE(?,'DD/MM/YYYY'),
		   		   ?, ?, ?, ?, ?, SYSDATE, SYSDATE)
"/>

<STATEMENT name="CANCELLA_PERIODO_LAVORATIVO_MOVIMENTO"
	query="DELETE FROM AM_PERIODO_LAVORATIVO WHERE PRGPERIODOLAV = ?
"/>

<STATEMENT name="AGGIORNA_PERIODI_LAVORATIVI_MOVIMENTO_VALIDI"
	query="UPDATE AM_PERIODO_LAVORATIVO SET FLAGPERIODOLAV = 'S', 
				NUMKLOPERIODOLAV = NUMKLOPERIODOLAV + 1, CDNUTMOD = ?, DTMMOD = SYSDATE
		   WHERE PRGMOVIMENTO = ?
"/>

<STATEMENT name="CERCA_PERIODI_LAVORATIVI_MOVIMENTO_INIZIALE"
	query="select per.PRGPERIODOLAV,
				per.PRGMOVIMENTO,
				to_char(per.DATINIZIO, 'dd/mm/yyyy') DATAINIZIO,
				to_char(per.DATAFINE, 'dd/mm/yyyy') DATAFINE,
				to_char(per.NUMGGINTERMITTENTE) GIORNI,
				NVL(per.FLAGPERIODOLAV, 'N') VALIDO,
				per.CODCONTRATTO,
				per.NUMKLOPERIODOLAV, per.CDNUTINS, per.CDNUTMOD,
				TO_CHAR(per.DTMINS, 'DD/MM/YYYY HH24:MI') DTMINS,
				TO_CHAR(per.DTMMOD, 'DD/MM/YYYY HH24:MI') DTMMOD
			from am_periodo_lavorativo per
			WHERE per.PRGMOVIMENTO = RECUPERA_PRGMOV_INIZIALE(?)
			order by per.DATINIZIO desc"/>
			
<STATEMENT name="AGGIORNA_DATE_PERIODI_LAVORATIVI"
	query="UPDATE AM_PERIODO_LAVORATIVO SET DATINIZIO = TO_DATE(?,'DD/MM/YYYY'), DATAFINE = TO_DATE(?,'DD/MM/YYYY'), 
				NUMKLOPERIODOLAV = ?, CDNUTMOD = ?, DTMMOD = SYSDATE, 
				NUMGGINTERMITTENTE = ?
		   WHERE PRGPERIODOLAV = ?
"/>

<STATEMENT name="CANCELLA_PERIODO_LAVORATIVO"
	query="DELETE FROM AM_PERIODO_LAVORATIVO WHERE PRGPERIODOLAV = ?
"/>

<STATEMENT name="AGGIORNA_PERIODI_LAVORATIVI_MOVIMENTO_RETTIFICATO"
	query="UPDATE AM_PERIODO_LAVORATIVO SET PRGMOVIMENTO = ?, 
				NUMKLOPERIODOLAV = NUMKLOPERIODOLAV + 1, CDNUTMOD = ?, DTMMOD = SYSDATE
		   WHERE PRGMOVIMENTO = ?
"/>