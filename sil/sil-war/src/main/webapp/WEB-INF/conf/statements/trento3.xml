<!-- Gestione Nuovo Reddito Attivazione -->
<STATEMENT name="COOP_INS_DOMANDA_REDDITO_ATTIVAZIONE"
            query="INSERT INTO AM_NUOVO_RA (
                     	PRGNUOVORA,
						IDDOMANDAWEB,
						IDDOMANDAINTRANET,
						CDNLAVORATORE,
						NOME,
						COGNOME,
						CODICEFISCALE,
						DATANASCITA,
						CODICECATASTONASCITA,
						INDIRIZZO,
						CAP,
						CODICECOMUNE,
						CODICEPROVINCIA,
						DATAPRESENTAZIONEASDINRA,
						DATAINIZIOPRESTAZIONEASDINRA,
						DATAFINEPRESTAZIONEASDINRA,
						IMPORTOGIORNALIERONRA,
						IMPORTOCOMPLESSIVONRA,
						IMPORTOGIORNALIEROASDI,
						IMPORTOCOMPLESSIVOASDI,
						NOTEDIFFERENZE,
						IDCOMUNICAZIONEMINLAV,
						CODICEINTERMEDIARIO,
						DATACOMUNICAZIONE,
						TIPOPRESTAZIONE,
						DATACREAZIONECOMUNICAZIONE,
						IDENTIFICATIVOCOMUNICAZIONE,
						CODICEOPERATORE,
						CODMONOTIPODOMANDA,
						CODICEREIEZIONE, CODSTATODOMANDA,
						CDNUTINS,
						CDNUTMOD,
						DTMINS,
						DTMMOD)
                	VALUES (S_AM_NUOVO_RA.NEXTVAL, 
                			?, ?, ?, ?, ?, ?, TO_DATE(?,'DD/MM/YYYY'), ?, ?, ?, ?, ?, TO_DATE(?,'DD/MM/YYYY'), TO_DATE(?,'DD/MM/YYYY'),
                			TO_DATE(?,'DD/MM/YYYY'), ?, ?, ?, ?, ?, ?, ?, TO_DATE(?,'DD/MM/YYYY'), ?, TO_DATE(?,'DD/MM/YYYY'), ?, ?, ?, ?, ?, ?, ?,
                			SYSDATE, SYSDATE)"/>

          		
<STATEMENT name="COOP_INS_EVENTO_SUCC_REDDITO_ATTIVAZIONE"
            query="INSERT INTO AM_NUOVO_RA (
                     	PRGNUOVORA,
						IDDOMANDAWEB,
						IDDOMANDAINTRANET,
						CDNLAVORATORE,
						NOME,
						COGNOME,
						CODICEFISCALE,
						DATANASCITA,
						CODICECATASTONASCITA,
						CODICEINTERMEDIARIO,
						CODMOTIVOCOMUNICAZIONE, CODTIPOCOMUNICAZIONE, CODTIPOEVENTO,
						CODMOTIVOSANZIONE, IDCOMUNICAZIONEANNULLATA, 
						MOTIVOEVENTO, DESCRIZIONEEVENTO, NOTAEVENTO,
						DATACREAZIONECOMUNICAZIONE, IDENTIFICATIVOCOMUNICAZIONE, CODICEOPERATORE,
						IMPORTOCOMPLESSIVONRADEC, IMPORTOCOMPLESSIVOASDIDEC, 
						CODMONOTIPODOMANDA, DATAEVENTO, CODSTATODOMANDA,
						CDNUTINS,
						CDNUTMOD,
						DTMINS,
						DTMMOD)
                	VALUES (S_AM_NUOVO_RA.NEXTVAL, 
                			?, ?, ?, ?, ?, ?, TO_DATE(?,'DD/MM/YYYY'), ?, ?, ?, ?, ?,
                			?, ?, ?, ?, ?, TO_DATE(?,'DD/MM/YYYY'), ?, ?,
                			?, ?, ?, TO_DATE(?,'DD/MM/YYYY'), ?,
                			?, ?, SYSDATE, SYSDATE)"/>
                			
<STATEMENT name="COOP_GET_DOMANDA_REDDITO_ATTIVAZIONE"
	query="SELECT  
		   RA.PRGNUOVORA ,RA.IDDOMANDAWEB ,RA.IDDOMANDAINTRANET, RA.CDNLAVORATORE, RA.NOME, RA.COGNOME,
			RA.CODICEFISCALE, TO_CHAR(RA.DATANASCITA,'DD/MM/YYYY') DATANASCITA, RA.CODICECATASTONASCITA,
			RA.INDIRIZZO, RA.CAP, RA.CODICECOMUNE, RA.CODICEPROVINCIA,
			TO_CHAR(RA.DATAPRESENTAZIONEASDINRA,'DD/MM/YYYY') DATAPRESENTAZIONEASDINRA,
			TO_CHAR(RA.DATAINIZIOPRESTAZIONEASDINRA,'DD/MM/YYYY') DATAINIZIOPRESTAZIONEASDINRA,
			TO_CHAR(RA.DATAFINEPRESTAZIONEASDINRA,'DD/MM/YYYY') DATAFINEPRESTAZIONEASDINRA,
			RA.IMPORTOGIORNALIERONRA, RA.IMPORTOCOMPLESSIVONRA, RA.IMPORTOGIORNALIEROASDI, RA.IMPORTOCOMPLESSIVOASDI,
			RA.NOTEDIFFERENZE, RA.IDCOMUNICAZIONEMINLAV, RA.CODICEINTERMEDIARIO,
			TO_CHAR(RA.DATACOMUNICAZIONE,'DD/MM/YYYY') DATACOMUNICAZIONE,
			RA.TIPOPRESTAZIONE,
			TO_CHAR(RA.DATACREAZIONECOMUNICAZIONE,'DD/MM/YYYY') DATACREAZIONECOMUNICAZIONE,
			RA.IDENTIFICATIVOCOMUNICAZIONE, RA.CODICEOPERATORE,
			RA.NUMEROPROVVEDIMENTO,
			TO_CHAR(RA.DATAPROVVEDIMENTO,'DD/MM/YYYY') DATAPROVVEDIMENTO,
			RA.ESITOELABORAZIONE, RA.CODICEREIEZIONE, RA.IDCOMUNICAZIONERICHIESTA,
			RA.CODMOTIVOCOMUNICAZIONE, RA.CODTIPOCOMUNICAZIONE,
			RA.CODTIPOEVENTO, RA.CODMOTIVOSANZIONE, RA.IDCOMUNICAZIONEANNULLATA,
			RA.MOTIVOEVENTO, RA.DESCRIZIONEEVENTO, RA.NOTAEVENTO,
			RA.IMPORTOCOMPLESSIVONRADEC, RA.IMPORTOCOMPLESSIVOASDIDEC,
			RA.CODMONOTIPODOMANDA, RA.CODSTATODOMANDA,
			RA.NUMKLONUOVORA,
			RA.CDNUTINS, RA.CDNUTMOD,
			TO_CHAR(RA.DTMINS,'DD/MM/YYYY HH24:MI') DTMINS, TO_CHAR(RA.DTMMOD,'DD/MM/YYYY HH24:MI') DTMMOD,
			TO_CHAR(RA.DATACREAZIONECOMUNICAZVALIDATA,'DD/MM/YYYY') DATACREAZIONECOMUNICAZVALIDATA,
			RA.IDCOMUNICAZIONEVALIDATA, RA.CODICEOPERATOREVALIDATA, RA.FLGINVIATA, RA.CODTIPOPROV,
			TO_CHAR(RA.DATVARIAZIONERES,'DD/MM/YYYY') DATVARIAZIONERES
		   FROM AM_NUOVO_RA RA
		   WHERE RA.PRGNUOVORA = ?" />
<STATEMENT name="COMBO_STATO_PROFILO"
	query="select 'I' as codice, 'In compilazione' as descrizione from dual 
			union 
			select 'C' as codice, 'Chiuso/Calcolato' as descrizione from dual 
			order by descrizione desc "/>
<STATEMENT name="STMT_PROFILI_LAVORATORE"
	query="SELECT PROFILO.PRGLAVORATOREPROFILO, LAV.STRCODICEFISCALE strcodicefiscalelav, 
			TO_CHAR(PROFILO.DATCREAZIONEPROFILO,'DD/MM/YYYY') datcreazioneprofilo,  PROFILO.CDNLAVORATORE,
			case  when PROFILO.CODMONOSTATOPROF = 'I' then 'In compilazione'
				  when PROFILO.CODMONOSTATOPROF = 'C'  then  'Calcolato' 
				  else ''  
	        end STRSTATOPROF, PROFILO.NUMVALOREPROFILO, cpiComp.Strdescrizione STRCPICOMP, cpiProf.Strdescrizione STRCPIPROF,
	        De_Vch_Profiling.Strdescrizione indiceProfilo 
		   FROM AM_LAVORATORE_PROFILO PROFILO
		   INNER JOIN AN_LAVORATORE LAV ON (PROFILO.CDNLAVORATORE = LAV.CDNLAVORATORE) 
		   INNER JOIN de_cpi cpiProf ON (PROFILO.CODCPI = cpiProf.codcpi)
		   LEFT JOIN AN_LAV_STORIA_INF INF ON (LAV.CDNLAVORATORE = INF.CDNLAVORATORE AND INF.DATFINE IS NULL)
		   LEFT JOIN de_cpi cpiComp ON (INF.codcpitit = cpiComp.codcpi) 
		   LEFT JOIN De_Vch_Profiling ON (PROFILO.CODVCHPROFILING = De_Vch_Profiling.Codvchprofiling) 
		   WHERE PROFILO.CDNLAVORATORE = ?" />
<STATEMENT name="GET_PROFILO_DOMANDA_LAVORATORE"
	query="SELECT  DE_RISPOSTA_PROFILO.CODDOMANDAPROF,  DE_DOMANDA_PROFILO.STRDESCRIZIONE testoDomanda, DE_DOMANDA_PROFILO.codDomandaProfRagg,
			      DE_DOMANDA_PROFILO.STRTIPOINPUT, DE_RISPOSTA_PROFILO.CODRISPOSTAPROF codiceRisposta,
			      DE_RISPOSTA_PROFILO.Strdescrizione testoDescrRisposta,  DE_RISPOSTA_PROFILO.numvalorerisposta, 
			      DE_RISPOSTA_PROFILO.strvalorerisposta, RISPOSTE.CODRISPOSTAPROF codRispostaLav, 
			      RISPOSTE.STRRISPOSTA strRispostaLav,RISPOSTE.STROSSERVAZIONE,  dm.CODMANSIONE,  p_dm.strDescrizione as desTipoMansione,
     			 dm.STRDESCRIZIONE ||DECODE(SYSDATE, GREATEST(SYSDATE, dm.DATINIZIOVAL, dm.DATFINEVAL),' (scaduto)',
           			LEAST(SYSDATE, dm.DATINIZIOVAL, dm.DATFINEVAL),' (scaduto)', '') AS DESC_MANSIONE,
           			DE_RISPOSTA_PROFILO.numposizione posizioneRisposta
		   FROM DE_RISPOSTA_PROFILO
      			 INNER JOIN DE_DOMANDA_PROFILO ON (DE_RISPOSTA_PROFILO.CODDOMANDAPROF = DE_DOMANDA_PROFILO.CODDOMANDAPROF )
       			LEFT JOIN AM_LAVORATORE_PROFILO_RISPOSTE RISPOSTE ON (DE_RISPOSTA_PROFILO.CODRISPOSTAPROF = RISPOSTE.CODRISPOSTAPROF and RISPOSTE.PRGLAVORATOREPROFILO = ?)
       			LEFT JOIN  AM_LAVORATORE_PROFILO PROFILO ON (PROFILO.PRGLAVORATOREPROFILO = RISPOSTE.PRGLAVORATOREPROFILO )
		  		LEFT JOIN  DE_MANSIONE dm ON (dm.codmansione = RISPOSTE.STRRISPOSTA)
  				LEFT JOIN de_mansione p_dm ON (dm.codpadre = p_dm.codmansione)
		   WHERE   DE_DOMANDA_PROFILO.STRNUMPOSIZIONE LIKE TO_CHAR(?) || '.%'
		   AND trunc(nvl(Profilo.Datcreazioneprofilo, (select prof.Datcreazioneprofilo from AM_LAVORATORE_PROFILO prof where prof.PRGLAVORATOREPROFILO = ? ))) 
		   		between trunc(DE_DOMANDA_PROFILO.datinizioval) and trunc(DE_DOMANDA_PROFILO.datfineval)
		   ORDER BY   CAST(  substr(DE_DOMANDA_PROFILO.strnumposizione,  INSTR(DE_DOMANDA_PROFILO.strnumposizione,'.')+1, LENGTH(DE_DOMANDA_PROFILO.strnumposizione)) AS INT), 
		   DE_RISPOSTA_PROFILO.numposizione" /> 
		   
<STATEMENT name="LOAD_DOMANDE_RISPOSTE_LINGUETTA"
	query="SELECT domanda.codDomandaProf, domanda.strDescrizione testoDomanda, domanda.codDomandaProfRagg, domanda.strTipoInput, 
				risposta.Codrispostaprof codiceRisposta, risposta.Strdescrizione testoDescrRisposta, 
				risposta.numvalorerisposta, risposta.strvalorerisposta,risposta.numposizione posizioneRisposta
		   FROM de_domanda_profilo domanda, de_risposta_profilo risposta
		    WHERE domanda.strNumPosizione like to_char(?) || '.%'
		   and trunc(sysdate) between trunc(domanda.datinizioval) and trunc(domanda.datfineval)
       and domanda.Coddomandaprof = risposta.Coddomandaprof 
       order by  CAST(  substr(domanda.strnumposizione,  INSTR(domanda.strnumposizione,'.')+1, LENGTH(domanda.strnumposizione)) AS INT), risposta.numposizione
" />
       
<STATEMENT name="QUERY_NEXTVAL_PROFILO_LAVORATORE"
	query="SELECT S_AM_LAVORATORE_PROFILO.NEXTVAL AS DO_NEXTVAL FROM DUAL" />

<STATEMENT name="QUERY_NEXTVAL_RISPOSTA_PROFILO_LAVORATORE"
	query="SELECT S_AM_LAVORATORE_PROFILO_RISPOS.NEXTVAL AS DO_NEXTVAL FROM DUAL" />
	
<STATEMENT name="INS_NEW_PROFILO_LAVORATORE"
            query="INSERT INTO AM_LAVORATORE_PROFILO (
                     	PRGLAVORATOREPROFILO, CDNLAVORATORE, DATCREAZIONEPROFILO, NUMVALOREPROFILO, CODVCHPROFILING,
                     	CODMONOSTATOPROF, CODCPI, CDNUTINS, DTMINS, CDNUTMOD, DTMMOD, FLGCONOSCENZAITA)
                	VALUES (?, ?, SYSDATE, ?, ?, 
                			?, ?, ?, SYSDATE, ?, SYSDATE, ?)"/>
   			
<STATEMENT name="INS_RISPOSTA_PROFILO_LAVORATORE"
            query="INSERT INTO AM_LAVORATORE_PROFILO_RISPOSTE (
                     	PRGLAVORATOREPROFILORIS, PRGLAVORATOREPROFILO, STRRISPOSTA, CODRISPOSTAPROF,
                     	STROSSERVAZIONE, CDNUTINS, DTMINS, CDNUTMOD, DTMMOD)
                	VALUES (S_AM_LAVORATORE_PROFILO_RISPOS.NEXTVAL, ?, ?, ?, 
                			?, ?, SYSDATE, ?, SYSDATE)"/>
                			
<STATEMENT name="GET_PROFILO_DOMANDA_LAVORATORE_LINGUETTA"
	query="SELECT PROFILO.PRGLAVORATOREPROFILO, PROFILO.CDNLAVORATORE, TO_CHAR(PROFILO.DATCREAZIONEPROFILO, 'DD/MM/YYYY HH24:MI') DATCREAZIONEPROFILO,
				PROFILO.NUMVALOREPROFILO, PROFILO.CODVCHPROFILING, PROFILO.CODMONOSTATOPROF, PROFILO.CODCPI,
				PROFILO.CDNUTINS, PROFILO.CDNUTMOD, PROFILO.NUMKLOLAVPROFILO, 
				RISPOSTE.PRGLAVORATOREPROFILORIS, RISPOSTE.STRRISPOSTA, RISPOSTE.CODRISPOSTAPROF,
				RISPOSTE.STROSSERVAZIONE, RISPOSTE.NUMKLOLAVPROFRISPOSTE,
				DE_RISPOSTA_PROFILO.CODDOMANDAPROF, DE_DOMANDA_PROFILO.STRNUMPOSIZIONE, DE_DOMANDA_PROFILO.STRTIPOINPUT,
				DE_DOMANDA_PROFILO.STRDESCRIZIONE DESCDOMANDA, DE_RISPOSTA_PROFILO.STRDESCRIZIONE DESCRISPOSTA
		   FROM AM_LAVORATORE_PROFILO PROFILO
		   		INNER JOIN AM_LAVORATORE_PROFILO_RISPOSTE RISPOSTE ON (PROFILO.PRGLAVORATOREPROFILO = RISPOSTE.PRGLAVORATOREPROFILO)
		   		INNER JOIN DE_RISPOSTA_PROFILO ON (DE_RISPOSTA_PROFILO.CODRISPOSTAPROF = RISPOSTE.CODRISPOSTAPROF)
		   		INNER JOIN DE_DOMANDA_PROFILO ON (DE_RISPOSTA_PROFILO.CODDOMANDAPROF = DE_DOMANDA_PROFILO.CODDOMANDAPROF)
		   WHERE PROFILO.PRGLAVORATOREPROFILO = ? AND DE_DOMANDA_PROFILO.STRNUMPOSIZIONE LIKE TO_CHAR(?) || '.%'
		   ORDER BY DE_DOMANDA_PROFILO.STRNUMPOSIZIONE ASC" />
		   
<STATEMENT name="DELETE_RISPOSTA_PROFILO_LAVORATORE"
            query="DELETE FROM AM_LAVORATORE_PROFILO_RISPOSTE 
            		WHERE PRGLAVORATOREPROFILORIS = ?"/>
            		
<STATEMENT name="LOAD_DOMANDE_LINGUETTA"
	query="SELECT codDomandaProf, strDescrizione testoDomanda, codDomandaProfRagg, strTipoInput
		   FROM de_domanda_profilo
		    WHERE strNumPosizione like to_char(?) || '.%'
		   and trunc(sysdate) between trunc(datinizioval) and trunc(datfineval) " />
		   
<STATEMENT name="GET_INFO_DETTAGLIO_PROFILO_LAVORATORE"
	query="SELECT PROFILO.PRGLAVORATOREPROFILO, PROFILO.CDNLAVORATORE, PROFILO.Flgconoscenzaita,  
				TO_CHAR(PROFILO.DATCREAZIONEPROFILO, 'DD/MM/YYYY') DATCREAZIONEPROFILO,
				TO_CHAR(PROFILO.NUMVALOREPROFILO) NUMVALOREPROFILO, PROFILO.CODVCHPROFILING, De_Vch_Profiling.Strdescrizione indiceProfilo, 
				PROFILO.CODMONOSTATOPROF, PROFILO.CODCPI, PROFILO.CDNUTINS, PROFILO.CDNUTMOD, PROFILO.NUMKLOLAVPROFILO,
        		TO_CHAR(Profilo.Numdim01) Numdim01, TO_CHAR(Profilo.Numdim02) Numdim02,TO_CHAR(Profilo.Numdim03) Numdim03,TO_CHAR(Profilo.Numdim04) Numdim04,
        		TO_CHAR(Profilo.Numdim05) Numdim05, TO_CHAR(Profilo.Numdim06) Numdim06,TO_CHAR(Profilo.Numdim07) Numdim07       
		   FROM AM_LAVORATORE_PROFILO PROFILO 
		   LEFT JOIN De_Vch_Profiling ON (profilo.CODVCHPROFILING = De_Vch_Profiling.Codvchprofiling) 
		   WHERE PROFILO.PRGLAVORATOREPROFILO = ?" />
		   
<STATEMENT name="UPD_INFO_PROFILO_LAVORATORE"
            query="UPDATE AM_LAVORATORE_PROFILO
                SET NUMKLOLAVPROFILO = ?,
                CDNUTMOD = ?,
                DTMMOD = SYSDATE
                WHERE PRGLAVORATOREPROFILO = ?" />
                
<STATEMENT name="UPD_INFO_PROFILO_LAVORATORE_FLG_LINGUA"
            query="UPDATE AM_LAVORATORE_PROFILO
                SET NUMKLOLAVPROFILO = ?,
                FLGCONOSCENZAITA = ?, 
                NUMVALOREPROFILO = ?,
                CODVCHPROFILING = ?, 
                CDNUTMOD = ?,
                DTMMOD = SYSDATE
                WHERE PRGLAVORATOREPROFILO = ?" />
     
<STATEMENT name="GET_INFO_PRECOMPILATE_PROFILO_LAV"
		query="SELECT distinct An_.Strsesso sessoLav, trunc(months_between(sysdate, an_.DATNASC)/12) etaLav,
	   				De.Codstatooccupazragg statoOccupazLav,  TRUNC (MONTHS_BETWEEN (SYSDATE, am.datanzianitadisoc)) mesiDisoccLav, 
              		( select count(*) from Pr_Mobil_Geogr 
            			inner join pr_mansione ON  (pr_mansione.prgmansione  = Pr_Mobil_Geogr.prgmansione)
            			where pr_mansione.cdnlavoratore = an_.cdnlavoratore and nvl(flgdispauto, 'NULL') = 'S'
            		) numeroAutoSi
				FROM an_lavoratore an_
					LEFT JOIN am_stato_occupaz am ON  (an_.cdnlavoratore  = am.cdnlavoratore  and am.datfine is null)
    				LEFT JOIN de_stato_occupaz de ON (de.codstatooccupaz = am.codstatooccupaz)
				WHERE  an_.cdnLavoratore =?" />
<STATEMENT name="GET_DIM_NON_ATTIVE"
	query ="select Coddomandaprofragg from De_Ragg_Domanda_Prof where Flgattivo = 'N'  
			AND trunc(sysdate) between trunc(datinizioval) and trunc(datfineval)" />
			

<STATEMENT name="SELECT_COMBO_OBBIETTIVO_MISURA_YEI_FROM_CODSERVIZIO"
		query="select PRGAZIONIRAGG as CODICE, 
                  STRDESCRIZIONE || DECODE(SYSDATE,    
                                    GREATEST(SYSDATE, DATINIZIOVAL, DATFINEVAL),' (scaduto)',
                                    LEAST(SYSDATE, DATINIZIOVAL, DATFINEVAL),' (scaduto)', 
                                    '') AS DESCRIZIONE,
                                    DECODE(SYSDATE,GREATEST(SYSDATE, DATINIZIOVAL, DATFINEVAL),' (scaduto)',
                               LEAST(SYSDATE, DATINIZIOVAL, DATFINEVAL),' (scaduto)', 
                               '') AS STRSCADUTO   
                  from DE_AZIONE_RAGG
                  where CODSERVIZIO = nvl(?,'')
                  order by DECODE(STRSCADUTO,'',0,1),DESCRIZIONE" />

<STATEMENT name="INSERT_DE_CORSO"
            query="INSERT INTO DE_CORSO (CODCORSO, STRDESCRIZIONE, NUMANNO, DATINIZIOVAL, DATFINEVAL)
						SELECT ?, ?, ?, TO_DATE(?, 'dd/mm/yyyy'), TO_DATE(?, 'dd/mm/yyyy') FROM DUAL
						WHERE NOT EXISTS (
						    SELECT CODCORSO FROM DE_CORSO WHERE CODCORSO = ?
						)"/>
			
						  
<!-- Nuova Forzatura Movimenti -->
<STATEMENT name="INSERT_FORZATURA_MOV_MASTER"
	query="insert into AM_FORZATURA(
						NUMRECORD
						,CDNUTINS
						,DTMINS
						,PRGFORZATURA
						) values (
						?
						,?
						,sysdate
						,?
						)
"	 />
<STATEMENT name="INSERT_FORZATURA_MOV_DETAIL"
	query="insert into AM_FORZA_MOV(
		 DATINIZIO
		,DATFINEMOVEFFETTIVA
		,PRGSUCC
		,CODSTATOATTO
		,PRGPREC
		,PRGMOVIMENTO	
		,PRGFORZATURA
		,PRGFORZAMOV
		) values (
		 to_date(?, 'dd/mm/yyyy')
		,to_date(?, 'dd/mm/yyyy')
		,?
		,?
		,?
		,?
		,?
		,?
)"	 />
<STATEMENT name="UPDATE_ESITO_FORZATURA_MASTER"
	query="UPDATE AM_FORZATURA SET NUMESITO = ? WHERE PRGFORZATURA = ?"
/>
<STATEMENT name="GET_DATE_AM_MOVIMENTO"
	query="
		SELECT to_char(mov.datiniziomov, 'dd/mm/yyyy') datamov,
			   to_char(mov.datfinemoveffettiva, 'dd/mm/yyyy') datfineeffettiva
		FROM AM_MOVIMENTO
		WHERE PRGMOVIMENTO = ?		
	"
/>
<STATEMENT name="GET_LISTA_ERRORI_FORZATURA"
	query="
	SELECT
	  AM_FORZA_MOV.PRGMOVIMENTO, ES.PRGFORZAMOVESITO, ES.PRGFORZAMOV, ES.NUMESITO
	FROM
	    AM_FORZAMOV_ESITO ES
	INNER JOIN AM_FORZA_MOV ON (AM_FORZA_MOV.PRGFORZAMOV = ES.PRGFORZAMOV)
	WHERE AM_FORZA_MOV.PRGFORZATURA = ?
	"
/>
<STATEMENT name="GET_CATENE_MOV_LAV"
	query="
select 'C1. catena circolare' as TIPO_ERR,

lav.cdnlavoratore, lav.strcodicefiscale ,

mov.prgmovimentoprec AS PREC, mov.prgmovimento AS PRG, mov.prgmovimentosucc AS SUCC,

mov.codtipomov, mov.codstatoatto,

mov.codmonotempo, mov.codtipocontratto,

mov.prgazienda, mov.prgunita, az.strragionesociale as ragSocAzienda,
az.strcodicefiscale as cfAzienda,
uaz.strindirizzo   || ', ' || com.strdenominazione  as indAzienda,
mov.datiniziomov, mov.datfinemov, mov.datfinemoveffettiva,
to_char(mov.datiniziomov, 'dd/mm/yyyy') as str_datiniziomov,
to_char(mov.datfinemov, 'dd/mm/yyyy') as str_datfinemov,
to_char(mov.datfinemoveffettiva, 'dd/mm/yyyy') as str_datfinemoveffettiva,
mov.codmonotipofine, mov.codcomunicazione 

from am_movimento mov

inner join an_lavoratore lav on (lav.cdnlavoratore=mov.cdnlavoratore )

inner join an_azienda az on (mov.prgazienda=az.prgazienda)

inner join An_Unita_Azienda uaz on (mov.prgunita = uaz.prgunita and mov.prgazienda=uaz.prgazienda)

inner join de_comune com on (uaz.codcom = com.codcom)

where mov.codstatoatto = 'PR'

and

 (mov.prgmovimento = mov.prgmovimentoprec

    or

  mov.prgmovimento = mov.prgmovimentosucc

    or

  mov.prgmovimentoprec = mov.prgmovimentosucc

  )

and lav.strcodicefiscale = ?

union

select 'C2. mov successivo a più di un movimento' as TIPO_ERR,

lav.cdnlavoratore, lav.strcodicefiscale ,

mov.prgmovimentoprec AS PREC, mov.prgmovimento AS PRG, mov.prgmovimentosucc AS SUCC,

mov.codtipomov, mov.codstatoatto,

mov.codmonotempo, mov.codtipocontratto,

mov.prgazienda, mov.prgunita, az.strragionesociale as ragSocAzienda,
az.strcodicefiscale as cfAzienda,
uaz.strindirizzo   || ', ' || com.strdenominazione  as indAzienda,
mov.datiniziomov, mov.datfinemov, mov.datfinemoveffettiva,
to_char(mov.datiniziomov, 'dd/mm/yyyy') as str_datiniziomov,
to_char(mov.datfinemov, 'dd/mm/yyyy') as str_datfinemov,
to_char(mov.datfinemoveffettiva, 'dd/mm/yyyy') as str_datfinemoveffettiva,

mov.codmonotipofine, mov.codcomunicazione 

from am_movimento mov

inner join an_lavoratore lav on (lav.cdnlavoratore=mov.cdnlavoratore )

inner join an_azienda az on (mov.prgazienda=az.prgazienda)
inner join An_Unita_Azienda uaz on (mov.prgunita = uaz.prgunita and mov.prgazienda=uaz.prgazienda)

inner join de_comune com on (uaz.codcom = com.codcom)

 where mov.codstatoatto = 'PR'

and exists

  (select mov1.prgmovimento, count(*)

    from am_movimento mov1

    where mov1.prgmovimentosucc = mov.prgmovimento 

    and mov1.codstatoatto = 'PR'

    having COUNT(*) > 1

    group by mov1.prgmovimento

   )

and lav.strcodicefiscale = ?

UNION

select 'C3. mov precedente a più di un movimento' as TIPO_ERR,

lav.cdnlavoratore, lav.strcodicefiscale ,

mov.prgmovimentoprec AS PREC, mov.prgmovimento AS PRG, mov.prgmovimentosucc AS SUCC,

mov.codtipomov, mov.codstatoatto,

mov.codmonotempo, mov.codtipocontratto,

mov.prgazienda, mov.prgunita, az.strragionesociale as ragSocAzienda,
az.strcodicefiscale as cfAzienda,
uaz.strindirizzo   || ', ' || com.strdenominazione  as indAzienda,
mov.datiniziomov, mov.datfinemov, mov.datfinemoveffettiva,
to_char(mov.datiniziomov, 'dd/mm/yyyy') as str_datiniziomov,
to_char(mov.datfinemov, 'dd/mm/yyyy') as str_datfinemov,
to_char(mov.datfinemoveffettiva, 'dd/mm/yyyy') as str_datfinemoveffettiva,
mov.codmonotipofine, mov.codcomunicazione 

from am_movimento mov

inner join an_lavoratore lav on (lav.cdnlavoratore=mov.cdnlavoratore )

inner join an_azienda az on (mov.prgazienda=az.prgazienda)
inner join An_Unita_Azienda uaz on (mov.prgunita = uaz.prgunita and mov.prgazienda=uaz.prgazienda)

inner join de_comune com on (uaz.codcom = com.codcom)

where mov.codstatoatto = 'PR'

and exists

  (select mov1.prgmovimento, count(*)

    from am_movimento mov1

    where mov1.prgmovimentoprec = mov.prgmovimento 

    and mov1.codstatoatto = 'PR'

    having COUNT(*) > 1

    group by mov1.prgmovimento

   )

and lav.strcodicefiscale = ?   

UNION

select 'C4. mov precedente non punta a questo' as TIPO_ERR,

lav.cdnlavoratore, lav.strcodicefiscale ,

mov.prgmovimentoprec AS PREC, mov.prgmovimento AS PRG, mov.prgmovimentosucc AS SUCC,

mov.codtipomov, mov.codstatoatto,

mov.codmonotempo, mov.codtipocontratto,

mov.prgazienda, mov.prgunita, az.strragionesociale as ragSocAzienda,
az.strcodicefiscale as cfAzienda,
uaz.strindirizzo   || ', ' || com.strdenominazione  as indAzienda,
mov.datiniziomov, mov.datfinemov, mov.datfinemoveffettiva,
to_char(mov.datiniziomov, 'dd/mm/yyyy') as str_datiniziomov,
to_char(mov.datfinemov, 'dd/mm/yyyy') as str_datfinemov,
to_char(mov.datfinemoveffettiva, 'dd/mm/yyyy') as str_datfinemoveffettiva,
mov.codmonotipofine, mov.codcomunicazione 

from am_movimento mov

inner join an_lavoratore lav on (lav.cdnlavoratore=mov.cdnlavoratore )

inner join an_azienda az on (mov.prgazienda=az.prgazienda)
inner join An_Unita_Azienda uaz on (mov.prgunita = uaz.prgunita and mov.prgazienda=uaz.prgazienda)

inner join de_comune com on (uaz.codcom = com.codcom)

 where mov.codstatoatto = 'PR'

AND MOV.PRGMOVIMENTOPREC IS NOT NULL

 and exists

  (select mov1.prgmovimento

    from am_movimento mov1

    where mov1.prgmovimento = mov.prgmovimentoPREC  

    and mov1.codstatoatto = 'PR'

    AND

    ( MOV1.PRGMOVIMENTOPREC = MOV.PRGMOVIMENTO OR

      NVL(MOV1.PRGMOVIMENTOSUCC, MOV.PRGMOVIMENTO) &lt;&gt; MOV.PRGMOVIMENTO)

   )

and lav.strcodicefiscale = ?

UNION

select 'C5. mov successivo non punta a questo' as TIPO_ERR,

lav.cdnlavoratore, lav.strcodicefiscale ,

mov.prgmovimentoprec AS PREC, mov.prgmovimento AS PRG, mov.prgmovimentosucc AS SUCC,

mov.codtipomov, mov.codstatoatto,

mov.codmonotempo, mov.codtipocontratto,

mov.prgazienda, mov.prgunita, az.strragionesociale as ragSocAzienda,
az.strcodicefiscale as cfAzienda,
uaz.strindirizzo   || ', ' || com.strdenominazione  as indAzienda,
mov.datiniziomov, mov.datfinemov, mov.datfinemoveffettiva,
to_char(mov.datiniziomov, 'dd/mm/yyyy') as str_datiniziomov,
to_char(mov.datfinemov, 'dd/mm/yyyy') as str_datfinemov,
to_char(mov.datfinemoveffettiva, 'dd/mm/yyyy') as str_datfinemoveffettiva,

mov.codmonotipofine, mov.codcomunicazione 

from am_movimento mov

inner join an_lavoratore lav on (lav.cdnlavoratore=mov.cdnlavoratore )

inner join an_azienda az on (mov.prgazienda=az.prgazienda)  
inner join An_Unita_Azienda uaz on (mov.prgunita = uaz.prgunita and mov.prgazienda=uaz.prgazienda)

inner join de_comune com on (uaz.codcom = com.codcom)   

where mov.codstatoatto = 'PR'

AND MOV.PRGMOVIMENTOsucc IS NOT NULL

 and exists

  (select mov1.prgmovimento

    from am_movimento mov1

    where mov1.prgmovimento = mov.prgmovimentoSUCC  

    and mov1.codstatoatto = 'PR'

    AND

    ( MOV1.PRGMOVIMENTOsucc = MOV.PRGMOVIMENTO OR

      MOV1.PRGMOVIMENTOsucc = MOV.PRGMOVIMENTOprec OR

      NVL(MOV1.PRGMOVIMENTOPREC, MOV.PRGMOVIMENTO) &lt;&gt; MOV.PRGMOVIMENTO)

   )

and lav.strcodicefiscale = ?

UNION

select 'C6. mov non collegato al succ che punta a questo' as TIPO_ERR,

lav.cdnlavoratore, lav.strcodicefiscale ,

mov.prgmovimentoprec AS PREC, mov.prgmovimento AS PRG, mov.prgmovimentosucc AS SUCC,

mov.codtipomov, mov.codstatoatto,

mov.codmonotempo, mov.codtipocontratto,

mov.prgazienda, mov.prgunita, az.strragionesociale as ragSocAzienda,
az.strcodicefiscale as cfAzienda,
uaz.strindirizzo   || ', ' || com.strdenominazione  as indAzienda,
mov.datiniziomov, mov.datfinemov, mov.datfinemoveffettiva,
to_char(mov.datiniziomov, 'dd/mm/yyyy') as str_datiniziomov,
to_char(mov.datfinemov, 'dd/mm/yyyy') as str_datfinemov,
to_char(mov.datfinemoveffettiva, 'dd/mm/yyyy') as str_datfinemoveffettiva,

mov.codmonotipofine, mov.codcomunicazione 

from am_movimento mov

inner join an_lavoratore lav on (lav.cdnlavoratore=mov.cdnlavoratore )

inner join an_azienda az on (mov.prgazienda=az.prgazienda)  
inner join An_Unita_Azienda uaz on (mov.prgunita = uaz.prgunita and mov.prgazienda=uaz.prgazienda)

inner join de_comune com on (uaz.codcom = com.codcom)

where mov.codstatoatto = 'PR'

AND MOV.PRGMOVIMENTOSUCC IS NULL

 and exists

  (select mov1.prgmovimento

    from am_movimento mov1

    where mov1.prgmovimentoprec = mov.prgmovimento

    and mov1.codstatoatto = 'PR'

    and mov1.prgmovimento&lt;&gt;mov.prgmovimento

   )

and lav.strcodicefiscale = ?  

UNION

select 'C7. mov non collegato al prec che punta a questo' as TIPO_ERR,

lav.cdnlavoratore, lav.strcodicefiscale ,

mov.prgmovimentoprec AS PREC, mov.prgmovimento AS PRG, mov.prgmovimentosucc AS SUCC,

mov.codtipomov, mov.codstatoatto,

mov.codmonotempo, mov.codtipocontratto,

mov.prgazienda, mov.prgunita, az.strragionesociale as ragSocAzienda,
az.strcodicefiscale as cfAzienda,
uaz.strindirizzo   || ', ' || com.strdenominazione  as indAzienda,
mov.datiniziomov, mov.datfinemov, mov.datfinemoveffettiva,
to_char(mov.datiniziomov, 'dd/mm/yyyy') as str_datiniziomov,
to_char(mov.datfinemov, 'dd/mm/yyyy') as str_datfinemov,
to_char(mov.datfinemoveffettiva, 'dd/mm/yyyy') as str_datfinemoveffettiva,
mov.codmonotipofine, mov.codcomunicazione 

from am_movimento mov

inner join an_lavoratore lav on (lav.cdnlavoratore=mov.cdnlavoratore )

inner join an_azienda az on (mov.prgazienda=az.prgazienda) 
inner join An_Unita_Azienda uaz on (mov.prgunita = uaz.prgunita and mov.prgazienda=uaz.prgazienda)

inner join de_comune com on (uaz.codcom = com.codcom)

where mov.codstatoatto = 'PR'

AND MOV.PRGMOVIMENTOPREC IS NULL

 and exists

  (select mov1.prgmovimento

    from am_movimento mov1

    where mov1.prgmovimentosucc = mov.prgmovimento

    and mov1.codstatoatto = 'PR'

   )

and lav.strcodicefiscale = ?   

"
/>
<STATEMENT name="GET_FORZATURE_ERRATE_CON_AM_MOVIMENTO"
	query="
SELECT
    forz.prgforzatura,
    forz.prgforzamov,
    mov.prgmovimento,
    mov.numklomov,
    mov.prgmovimentoprec,
    forz.prgprec           precmod,
    mov.prgmovimentosucc,
    forz.prgsucc           succmod,
    lav.cdnlavoratore,
    az.prgazienda          prgaz,
    uaz.prgunita           prguaz,
    to_char(mov.datfinemov, 'dd/mm/yyyy') datfinemov,
    to_char(mov.datiniziomov, 'DD/MM/YYYY') datamov,
    to_char(forz.datinizio, 'DD/MM/YYYY') datiniziomod,
    mov.codtipomov,
    mov.codtipocontratto   codtipoass,
    mov.codmonotipofine    codmonotipofine,
    mov.codmonotempo       codmonotempo,
    mov.codstatoatto,
    forz.codstatoatto      statomod,
    mov.codmotannullamento,
    mov.datiniziomov,
    to_char(mov.datfinemoveffettiva, 'DD/MM/YYYY') datfineeffettiva,
    to_char(forz.datfinemoveffettiva, 'DD/MM/YYYY') datfineffmod,
    lav.strcognome
    || ' '
    || lav.strnome cognomenomelav,
    lav.strcodicefiscale   codfisclav,
    az.strragionesociale   ragsocaz
FROM
    am_forza_mov       forz,
    am_movimento       mov,
    de_mv_tipo_mov     tmov,
    an_unita_azienda   uaz,
    an_azienda         az,
    an_lavoratore      lav,
    de_comune          com,
    de_provincia       prov
WHERE
    forz.prgmovimento = mov.prgmovimento
    AND mov.codtipomov = tmov.codtipomov
    AND mov.cdnlavoratore = lav.cdnlavoratore
    AND mov.prgazienda = az.prgazienda
    AND mov.prgazienda = uaz.prgazienda
    AND mov.prgunita = uaz.prgunita
    AND uaz.codcom = com.codcom
    AND com.codprovincia = prov.codprovincia (+)
    AND forz.prgforzatura = ?
ORDER BY
    mov.datiniziomov ASC	
	"
/>
<STATEMENT name="DELETE_AMFORZAMOV_ESITO"
	query="delete  from am_forzamov_esito
		where prgforzamov in (select prgforzamov
		from am_forza_mov  
		where prgforzatura  =?);
" />
<STATEMENT name="DELETE_AMFORZAMOV"
	query="DELETE FROM am_forza_mov WHERE PRGFORZATURA=?
" />
<STATEMENT name="DELETE_AM_FORZATURA"
	query="DELETE FROM am_forzatura WHERE PRGFORZATURA=?
" />
                