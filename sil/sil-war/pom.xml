<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<artifactId>sil-war</artifactId>
	<groupId>it.eng.sil.war</groupId>
	<packaging>war</packaging>

	<name>Sil-war</name>
	<version>4.1.0</version>
	<description>Applicazione web Sil</description>

	<properties>
		<javaee-api.version>8.0</javaee-api.version>
		<maven.compiler.target>11</maven.compiler.target>
		<maven.compiler.source>11</maven.compiler.source>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<sil-core.version>4.1.0</sil-core.version>
		<commons-logging-version>1.2</commons-logging-version>
		<log4j.version>1.2.14</log4j.version>
		<commons-discovery.version>0.5</commons-discovery.version>
		<jamon.version>2.78</jamon.version>
		<slf4j.version>1.5.8</slf4j.version>
		<bcprov.version>1.66</bcprov.version>
		<maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
		<maven-war-plugin.version>3.2.3</maven-war-plugin.version>
		<git-commit-id-plugin.version>2.2.4</git-commit-id-plugin.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-api</artifactId>
			<version>${javaee-api.version}</version>
			<scope>provided</scope>
		</dependency>
	
		<dependency>
			<groupId>it.eng.sil.core</groupId>
			<artifactId>sil-core</artifactId>
			<version>${sil-core.version}</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/commons-logging/commons-logging -->
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>${commons-logging-version}</version>
			<scope>provided</scope>
		</dependency>
		
		<!-- Note: This artifact was moved to: org.apache.logging.log4j >> log4j-core -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>${log4j.version}</version>
			<scope>provided</scope>
		</dependency>
		
		<!-- Necessaria a runtime per log4j -->
		<dependency>
			<groupId>commons-discovery</groupId>
			<artifactId>commons-discovery</artifactId>
			<version>${commons-discovery.version}</version>
			<scope>compile</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.jamonapi/jamon -->
		<dependency>
			<groupId>com.jamonapi</groupId>
			<artifactId>jamon</artifactId>
			<version>${jamon.version}</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-api -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-simple -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>${slf4j.version}</version>
			<!-- <scope>test</scope> -->
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/org.bouncycastle/bcprov-jdk15on -->
		<dependency>
    		<groupId>org.bouncycastle</groupId>
    		<artifactId>bcprov-jdk15on</artifactId>
    		<version>${bcprov.version}</version>
		</dependency>	
	</dependencies>

	<build>
		<finalName>sil-war</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
					<finalName>sil-war</finalName>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>${maven-war-plugin.version}</version>
				<configuration>
					<destfile>sil-war</destfile>
					<!-- Java EE 6 doesn't require web.xml, Maven needs to catch up! -->
					<failOnMissingWebXml>false</failOnMissingWebXml>
					<warSourceDirectory>${project.basedir}/src/main/webapp</warSourceDirectory>
					<encoding>${project.build.sourceEncoding}</encoding>
					<archive>
						<manifestFile>${project.basedir}/src/main/webapp/META-INF/MANIFEST.MF</manifestFile>
					</archive>
				</configuration>
			</plugin>
			
			<plugin>
				<groupId>pl.project13.maven</groupId>
				<artifactId>git-commit-id-plugin</artifactId>
				<version>${git-commit-id-plugin.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>revision</goal>
						</goals>
					</execution>
				</executions>

				<configuration>
					<!-- that's the default value, you don't have to set it -->
					<prefix>git</prefix>

					<!-- that's the default value -->
					<dateFormat>dd/MM/yyyy '@' HH:mm:ss</dateFormat>

					<!-- true is default here, it prints some more information during the build -->
					<verbose>false</verbose>

					<!-- If you'd like to tell the plugin where your .git directory is, use this setting, otherwise we'll perform a search 
						trying to figure out the right directory. It's better to add it explicite IMHO. -->
					<dotGitDirectory>${project.basedir}/../.git</dotGitDirectory>

					<skipPoms>true</skipPoms>

					<!-- this is false by default, forces the plugin to generate the git.properties file -->
					<generateGitPropertiesFile>true</generateGitPropertiesFile>

					<!-- The path for the to be generated properties file, it's relative to ${project.basedir} -->
					<generateGitPropertiesFilename>src/main/resources/git_autogen.properties</generateGitPropertiesFilename>

					<!-- true by default, controls whether the plugin will fail when no .git directory is found, when set to false the plugin 
						will just skip execution -->
					<!-- @since 2.0.4 -->
					<failOnNoGitDirectory>true</failOnNoGitDirectory>

					<!-- @since 2.1.0 -->
					<!-- read up about git-describe on the in man, or it's homepage - it's a really powerful versioning helper and the recommended 
						way to use git-commit-id-plugin. The configuration bellow is optional, by default describe will run "just like git-describe 
						on the command line", even though it's a JGit reimplementation. -->
					<gitDescribe>

						<!-- don't generate the describe property -->
						<skip>false</skip>

						<!-- if no tag was found "near" this commit, just print the commit's id instead, helpful when you always expect this 
							field to be not-empty -->
						<always>false</always>
						<!-- how many chars should be displayed as the commit object id? 7 is git's default, 0 has a special meaning (see end 
							of this README.md), and 40 is the maximum value here -->
						<abbrev>7</abbrev>

						<!-- when the build is triggered while the repo is in "dirty state", append this suffix -->
						<dirty>-dirty</dirty>

						<!-- always print using the "tag-commits_from_tag-g_commit_id-maybe_dirty" format, even if "on" a tag. The distance 
							will always be 0 if you're "on" the tag. -->
						<forceLongFormat>false</forceLongFormat>
					</gitDescribe>
				</configuration>

			</plugin>
		</plugins>
	</build>

	<repositories>
		<repository>
			<id>sil-internal-repository</id>
			<name>GruppoSIL repository</name>
			<url>http://giunone.bo.eng.it/content/repositories/sil-internal-repository</url>
		</repository>
		<repository>
			<id>redhat</id>
			<name>redhat repository</name>
			<url>https://maven.repository.redhat.com/ga</url>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<name>oss.sonatype.org</name>
			<id>oss.sonatype.org</id>
			<url>http://oss.sonatype.org/content/groups/public</url>
		</pluginRepository>
	</pluginRepositories>
</project>
