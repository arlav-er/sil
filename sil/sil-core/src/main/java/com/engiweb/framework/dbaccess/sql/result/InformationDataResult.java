/* Generated by Together */

package com.engiweb.framework.dbaccess.sql.result;

import java.util.List;

import com.engiweb.framework.base.SourceBean;
import com.engiweb.framework.base.SourceBeanException;
import com.engiweb.framework.dbaccess.sql.SQLCommand;
import com.engiweb.framework.error.EMFErrorSeverity;
import com.engiweb.framework.error.EMFInternalError;

/**
 * Questa classe rappresenta un InformationDataResult, cioè un DataResult che contiene informazioni quali:
 * 
 * <li>il numero di righe coinvolte nell'esecuzione del comando
 * <li>un messaggio di esecuzione
 * <li>lo stato di correttezza o meno dell'esecuzione del comando
 * 
 * @author Andrea Zoppello - andrea.zoppello@engiweb.com
 * @version 1.0
 */
public class InformationDataResult implements DataResultInterface {
	private String _executionMessage;
	private boolean _correctExecution;
	private int _affectedRows;
	private SQLCommand _sqlCommand = null;
	public static boolean CORRECT_EXECUTION = true;
	public static boolean ERROR_EXECUTION = false;
	public static final String TAG = "INFORMATION_DATA_RESULT";

	/**
	 * Costruttore
	 * 
	 * @param <B>SQLCommand
	 *            </B> command - Il comando che ha generato come risultato l'oggetto InformationDataResult che verrà
	 *            creato da questa funzione
	 * @param <B>List
	 *            </B> inputParameters - La lista dei parametri di input del comando che ha generato come risultato
	 *            l'oggetto InformationDataResult che verrà creato da questa funzione
	 * @param boolean
	 *            correctExecution - true se l'esecuzione del comando è avvenuta correttamente
	 * @param int
	 *            int affectedRows - il numero di righe coinvolte nll'esecuzione del comando
	 * @param String
	 *            executionMessage - eventuale messaggio dell'InformationDataResult da creare
	 * @throws <B>EMFInternalError
	 *             </B> - Se qualche errore si verifica nella creazione dell'oggetto fi tipo InformationDataResult
	 */
	public InformationDataResult(SQLCommand sqlCommand, List inputParameters, boolean correctExecution,
			int affectedRows, String executionMessage) {
		_sqlCommand = sqlCommand;
		_affectedRows = affectedRows;
		_executionMessage = executionMessage;
		_correctExecution = correctExecution;
	} // public InformationDataResult(SQLCommand sqlCommand, List

	// inputParameters, boolean correctExecution, int affectedRows, String
	// executionMessage)

	/**
	 * Metodo getter per il parametro _executionMessage
	 * 
	 * @return un oggetto di tipo <B>String</B> con il valore di _executionMessage
	 */
	public String getExecutionMessage() {
		return _executionMessage;
	} // public String getExecutionMessage()

	/**
	 * Metodo getter per il parametro _correctExecution
	 * 
	 * @return true se l'esecuzione è avvenuta in maniera corretta
	 */
	public boolean correctExecution() {
		return _correctExecution;
	} // public boolean correctExecution()

	/**
	 * Metodo getter per il parametro _affectedRows
	 * 
	 * @return il numero di righe coinvolte nell'esecuzione del comando
	 */
	public int getAffectedRows() {
		return _affectedRows;
	} // public int getAffectedRows()

	/**
	 * Metodo setter per il parametro connectionPoolFactory
	 * 
	 * @param int
	 *            affectedRows - il nuemro di righe coinvolte nell'esecuzione di un comando
	 */
	public void setAffectedRows(int affectedRows) {
		_affectedRows = affectedRows;
	} // public void setAffectedRows(int affectedRows)

	/**
	 * Ritorna come valore la costante return DataResultInterface.INFORMATION_DATA_RESULT;
	 * 
	 * @return DataResultInterface.INFORMATION_DATA_RESULT
	 */
	public String getDataResultType() {
		return DataResultInterface.INFORMATION_DATA_RESULT;
	} // public String getDataResultType()

	/**
	 * Ritorna un oggetto sourcebean rappresentante l'oggetto
	 * 
	 * @return la rappresentazione dell'oggetto fi tipo <B>DataResultInterface</B> come <B>SourceBean</B>
	 */
	public SourceBean getSourceBean() throws EMFInternalError {
		try {
			SourceBean sourceBean = new SourceBean(InformationDataResult.TAG);
			sourceBean.setAttribute("CORRECT_EXECUTION", String.valueOf(_correctExecution));
			sourceBean.setAttribute("AFFECTED_ROWS", String.valueOf(this.getAffectedRows()));
			return sourceBean;
		} catch (SourceBeanException sbe) {
			throw new EMFInternalError(EMFErrorSeverity.ERROR,
					"InformationDataResul  :: getSourceBean() ::  " + sbe.getMessage());
		}
	} // public SourceBean getSourceBean()
} //
