/* Generated by Together */

package com.engiweb.framework.dbaccess.sql.result;

import java.util.List;

import com.engiweb.framework.base.SourceBean;
import com.engiweb.framework.base.SourceBeanException;
import com.engiweb.framework.dbaccess.sql.DataField;
import com.engiweb.framework.dbaccess.sql.SQLCommand;
import com.engiweb.framework.error.EMFErrorSeverity;
import com.engiweb.framework.error.EMFInternalError;

/**
 * Questa classe rappresenta un PucntulaDataResult, cioè un DataResult che contiene un DataField
 * 
 * Tipicamente un oggetto di questo tipo viene utilizzato per memorizzare i valori dei paremetri di ritorno o di output
 * di una stored procedure che non sono di tipo ResultSet.
 * 
 * @author Andrea Zoppello - andrea.zoppello@engiweb.com
 * @version 1.0
 */
public class PunctualDataResult implements DataResultInterface {
	private DataField _punctualDataField = null;
	private SQLCommand _sqlCommand = null;
	public static final String TAG = "PUNCTUAL_DATA_RESULT";

	/**
	 * Crea un oggetto DataResultInterface di tipo PunctualDataResult.
	 * 
	 * @param <B>SQLCommand
	 *            </B> command - Il comando che ha generato come risultato l'oggetto PunctualDataResult che verrà creato
	 *            da questa funzione
	 * @param <B>List
	 *            </B> inputParameters - La lista dei parametri di input del comando che ha generato come risultato
	 *            l'oggetto PunctualDataResult che verrà creato da questa funzione
	 * @param <B>DataField
	 *            </B> punctualData - Il dataField che costituice il dato puntuale alla base dell'oggetto
	 *            PunctualDataResult creato da questa funzione
	 * @throws <B>EMFInternalError
	 *             </B> - Se qualche errore si verifica nella creazione dell'oggetto fi tipo PunctualDataResult
	 */
	public PunctualDataResult(SQLCommand sqlCommand, List inputParameters, DataField punctualDataField)
			throws EMFInternalError {
		_sqlCommand = sqlCommand;
		_punctualDataField = punctualDataField;
	} // public PunctualDataResult(SQLCommand sqlCommand, List
		// inputParameters,

	// DataField punctualDataField) throws EMFInternalError

	/**
	 * Ritorna l'oggetto DataField contenuto nell'oggetto.
	 * 
	 * @return l'oggetto <B>DataField</B> contenuto nell'oggetto
	 */
	public DataField getPunctualDatafield() {
		return _punctualDataField;
	} // public DataField getPunctualDatafield()

	/**
	 * Ritorna come valore la costante DataResultInterface.PUNCTUAL_DATA_RESULT.
	 * 
	 * @return DataResultInterface.PUNCTUAL_DATA_RESULT
	 */
	public String getDataResultType() {
		return DataResultInterface.PUNCTUAL_DATA_RESULT;
	} // public String getDataResultType()

	/**
	 * Ritorna un oggetto <code>Sourcebean</code> rappresentante l'oggetto.
	 * 
	 * @return la rappresentazione dell'oggetto di tipo <B>DataResultInterface</B> come <B>SourceBean</B>
	 */
	public SourceBean getSourceBean() throws EMFInternalError {
		try {
			SourceBean sourceBean = new SourceBean(PunctualDataResult.TAG);
			sourceBean.setAttribute("PUNCTUAL_DATA_FIELD", _punctualDataField);
			return sourceBean;
		} catch (SourceBeanException sbe) {
			throw new EMFInternalError(EMFErrorSeverity.ERROR,
					"InformationDataResul  :: getSourceBean() ::  " + sbe.getMessage());
		}
	} // public SourceBean getSourceBean()
} // end Class PunctualDataResult
