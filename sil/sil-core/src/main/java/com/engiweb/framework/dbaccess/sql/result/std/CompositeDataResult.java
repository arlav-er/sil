/* Generated by Together */

package com.engiweb.framework.dbaccess.sql.result.std;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import com.engiweb.framework.base.SourceBean;
import com.engiweb.framework.base.SourceBeanException;
import com.engiweb.framework.dbaccess.sql.SQLCommand;
import com.engiweb.framework.dbaccess.sql.result.DataResultInterface;
import com.engiweb.framework.error.EMFErrorSeverity;
import com.engiweb.framework.error.EMFInternalError;
import com.jamonapi.Monitor;
import com.jamonapi.MonitorFactory;

/**
 * Questa Classe rappresenta il risultato di un'esecuzione di un comando che abbia più risultati di output Per esempio
 * una stored procedure con un valore di ritorno e due parametri di output
 * 
 * @author Andrea Zoppello - andrea.zoppello@engiweb.com
 * @version 1.0
 */
public class CompositeDataResult implements DataResultInterface {
	private List containedDataResult = null;
	// DataResultInterface object contained
	private SQLCommand sqlCommand = null;
	public static final String TAG = "COMPOSITE_DATA_RESULT";

	public CompositeDataResult(SQLCommand command, List inputParameters) {
		containedDataResult = new ArrayList();
	}

	/**
	 * Permette di aggiungere un oggetto dataResult al contenitore.
	 * 
	 * @param <code>dataResult</code>
	 *            oggetto che rappresenta un valore di ritorno.
	 */
	public void add(DataResultInterface dataResult) {
		containedDataResult.add(dataResult);
	}

	/**
	 * Permette di recuperare la lista degli oggetti .
	 * 
	 * @return <code>List</code> la lista degli oggetti.
	 */
	public List getContainedDataResult() {
		return containedDataResult;
	}

	/**
	 * Ad ogni oggetto della lista viene chiesto di ritornare un'istanza di SourceBean contenente lo stato
	 * dell'oggetto;tutte le nuove istanze vengono ritornare incapsulate in un altro oggetto SourceBean.
	 * 
	 * @return <code>SourceBean</code> contenente la lista delle istanze SourceBean .
	 * @exception EMFInternalError
	 *                viene lanciata se non è possibile popolare un'istanza di SourceBean.
	 */
	public SourceBean getSourceBean() throws EMFInternalError {
		Monitor monitor = MonitorFactory.start("model.data-access.composite-data-result.get-source-bean");
		try {
			SourceBean sourceBean = new SourceBean(CompositeDataResult.TAG);
			Iterator it = containedDataResult.iterator();
			while (it.hasNext()) {
				sourceBean.setAttribute(((DataResultInterface) it.next()).getSourceBean());
			}
			return sourceBean;
		} catch (SourceBeanException sbe) {
			throw new EMFInternalError(EMFErrorSeverity.ERROR,
					"CompositeDataResult  :: getSourceBean() ::  " + sbe.getMessage());
		} finally {
			monitor.stop();
		}
	}
}
