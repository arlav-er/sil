<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>it.eng.sil.myauthservice</groupId>
	<artifactId>MyAuthService</artifactId>
	<version>2.5.1.${mycas-common-ejb.version}</version>
	<packaging>war</packaging>

	<name>MyAuthService (web application)</name>
	<description>MyAuthService</description>


	<properties>
		<mycas-common-ejb.version>307</mycas-common-ejb.version>
		<endorsed.dir>${project.build.directory}/endorsed</endorsed.dir>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.build.timestamp.format>yyyyMMdd'T'HHmmss</maven.build.timestamp.format>
		<jboss.home>${env.JBOSS_HOME}</jboss.home>
		<cxf.version>2.4.6</cxf.version>
	</properties>

	<dependencies>

		<!-- javaee-api -->
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-api</artifactId>
			<version>6.0</version>
			<scope>provided</scope>
		</dependency>

		<!-- FV -->
		<dependency>
			<groupId>it.eng.sil</groupId>
			<artifactId>mycas-common-ejb</artifactId>
			<version>${mycas-common-ejb.version}</version>
		</dependency>

		<dependency>
			<groupId>org.hibernate.common</groupId>
			<artifactId>hibernate-commons-annotations</artifactId>
			<version>4.0.5.Final</version>
		</dependency>

		<!-- JSON API -->
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20131018</version>
		</dependency>

		<dependency>
			<groupId>com.jamonapi</groupId>
			<artifactId>jamon</artifactId>
			<version>2.78</version>
		</dependency>


	</dependencies>

	<build>
		<!-- Maven will append the version to the finalName (which is the name 
			given to the generated war, and hence the context root) -->
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<plugin>
				<groupId>com.google.code.maven-replacer-plugin</groupId>
				<artifactId>replacer</artifactId>
				<version>1.5.3</version>
				<executions>
					<execution>
						<phase>generate-resources</phase>
						<goals>
							<goal>replace</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<includes>
						<include>${project.basedir}/src/main/resources/META-INF/persistence.xml</include>
						<include>${project.basedir}/src/test/resources/persistence.xml</include>
					</includes>

					<replacements>
						<replacement>
							<token>lib/mycas-common-ejb.+\.jar</token>
							<value>lib/mycas-common-ejb-${mycas-common-ejb.version}.jar</value>
						</replacement>
					</replacements>
					<regexFlags>
						<regexFlag>CASE_INSENSITIVE</regexFlag>
						<regexFlag>MULTILINE</regexFlag>
					</regexFlags>
				</configuration>
			</plugin>



			<plugin>
				<groupId>org.bsc.maven</groupId>
				<artifactId>maven-processor-plugin</artifactId>
				<version>2.0.5</version>
				<extensions>false</extensions>
				<executions>
					<execution>
						<id>process</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>process</goal>
						</goals>
						<configuration>
							<processors>
								<processor>org.hibernate.jpamodelgen.JPAMetaModelEntityProcessor</processor>
							</processors>
						</configuration>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>org.hibernate</groupId>
						<artifactId>hibernate-jpamodelgen</artifactId>
						<version>1.2.0.Final</version>
					</dependency>
				</dependencies>
			</plugin>



			<!-- Compiler plugin enforces Java 1.6 compatibility and activates annotation 
				processors -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
					<compilerArgument>-proc:none</compilerArgument>
				</configuration>
			</plugin>


			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<!-- Java EE 6 doesn't require web.xml, Maven needs to catch up! -->
					<failOnMissingWebXml>false</failOnMissingWebXml>
					<archive>
						<manifestFile>src/main/webapp/META-INF/MANIFEST.MF</manifestFile>
					</archive>
				</configuration>
			</plugin>
			<!-- The JBoss AS plugin deploys your war to a local JBoss AS container -->
			<!-- To use, set the JBOSS_HOME environment variable and run: mvn package 
				jboss-as:deploy -->
			<plugin>
				<groupId>org.jboss.as.plugins</groupId>
				<artifactId>jboss-as-maven-plugin</artifactId>
				<version>7.1.3.Final</version>
			</plugin>
		</plugins>

		<!-- FILTERING per aggiungere versione SOLO su common.props per non sputtanare 
			encoding -->
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
			</resource>
			<resource>
				<!-- SOVRASCRIVE -->
				<directory>src/main/resources/</directory>
				<filtering>true</filtering>
				<includes>
					<include>it/eng/sil/myauthservice/resources/common.properties</include>
				</includes>
			</resource>
		</resources>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.google.code.maven-replacer-plugin</groupId>
										<artifactId>replacer</artifactId>
										<versionRange>[1.5.3,)</versionRange>
										<goals>
											<goal>replace</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>

			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<profile>


			<!-- The default profile skips all tests, though you can tune it to run 
				just unit tests based on a custom pattern -->
			<!-- Seperate profiles are provided for running all tests, including Arquillian 
				tests that execute in the specified container -->
			<id>default</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>2.4.3</version>
						<configuration>
							<skip>true</skip>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<!-- We add the JBoss repository as we need the JBoss AS connectors for 
				Arquillian -->
			<repositories>
				<!-- The JBoss Community public repository is a composite repository 
					of several major repositories -->
				<!-- see http://community.jboss.org/wiki/MavenGettingStarted-Users -->
				<repository>
					<id>jboss-public-repository</id>
					<name>JBoss Repository</name>
					<url>http://repository.jboss.org/nexus/content/groups/public</url>
					<!-- These optional flags are designed to speed up your builds by reducing 
						remote server calls -->
					<releases>
					</releases>
					<snapshots>
						<enabled>false</enabled>
					</snapshots>
				</repository>
			</repositories>
			<pluginRepositories>
				<pluginRepository>
					<id>jboss-public-repository</id>
					<name>JBoss Repository</name>
					<url>http://repository.jboss.org/nexus/content/groups/public</url>
					<releases>
					</releases>
					<snapshots>
						<enabled>false</enabled>
					</snapshots>
				</pluginRepository>
			</pluginRepositories>

			<!-- An optional Arquillian testing profile that executes tests in your 
				JBoss AS instance -->
			<!-- This profile will start a new JBoss AS instance, and execute the 
				test, shutting it down when done -->
			<!-- Run with: mvn clean test -Parq-jbossas-managed -->
			<id>arq-jbossas-managed</id>
			<dependencies>
				<dependency>
					<groupId>org.jboss.as</groupId>
					<artifactId>jboss-as-arquillian-container-managed</artifactId>
					<version>7.1.3.Final</version>
					<scope>test</scope>
				</dependency>
			</dependencies>
		</profile>

		<profile>
			<!-- We add the JBoss repository as we need the JBoss AS connectors for 
				Arquillian -->
			<repositories>
				<!-- The JBoss Community public repository is a composite repository 
					of several major repositories -->
				<!-- see http://community.jboss.org/wiki/MavenGettingStarted-Users -->
				<repository>
					<id>jboss-public-repository</id>
					<name>JBoss Repository</name>
					<url>http://repository.jboss.org/nexus/content/groups/public</url>
					<!-- These optional flags are designed to speed up your builds by reducing 
						remote server calls -->
					<releases>
					</releases>
					<snapshots>
						<enabled>false</enabled>
					</snapshots>
				</repository>
			</repositories>

			<pluginRepositories>
				<pluginRepository>
					<id>jboss-public-repository</id>
					<name>JBoss Repository</name>
					<url>http://repository.jboss.org/nexus/content/groups/public</url>
					<releases>
					</releases>
					<snapshots>
						<enabled>false</enabled>
					</snapshots>
				</pluginRepository>
			</pluginRepositories>

			<!-- An optional Arquillian testing profile that executes tests in a remote 
				JBoss AS instance -->
			<!-- Run with: mvn clean test -Parq-jbossas-remote -->
			<id>arq-jbossas-remote</id>
			<dependencies>
				<dependency>
					<groupId>org.jboss.as</groupId>
					<artifactId>jboss-as-arquillian-container-remote</artifactId>
					<version>7.1.3.Final</version>
					<scope>test</scope>
				</dependency>
			</dependencies>
		</profile>
	</profiles>
</project>