package it.eng.sil.myauthservice.rest.client.sms.soap;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.1.7
 * 2020-07-09T15:03:29.787+02:00
 * Generated source version: 3.1.7
 * 
 */
@WebServiceClient(name = "SMSService.serviceagent", 
                  wsdlLocation = "tn_sms_v4.1.wsdl",
                  targetNamespace = "http://www.tndigit.it/SMS/service") 
public class SMSServiceServiceagent extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://www.tndigit.it/SMS/service", "SMSService.serviceagent");
    public final static QName Endpoint1 = new QName("http://www.tndigit.it/SMS/service", "Endpoint1");
    public final static QName Endpoint2 = new QName("http://www.tndigit.it/SMS/service", "Endpoint2");
    static {
        URL url = null;
        try {
            url = new URL("file:tn.wsdl");
            url = SMSServiceServiceagent.class.getClassLoader().getResource("wsdl/tn_sms_v4.1.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(SMSServiceServiceagent.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:tn.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public SMSServiceServiceagent(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public SMSServiceServiceagent(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SMSServiceServiceagent() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public SMSServiceServiceagent(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public SMSServiceServiceagent(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public SMSServiceServiceagent(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns InvioSMSPortType
     */
    @WebEndpoint(name = "Endpoint1")
    public InvioSMSPortType getEndpoint1() {
        return super.getPort(Endpoint1, InvioSMSPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns InvioSMSPortType
     */
    @WebEndpoint(name = "Endpoint1")
    public InvioSMSPortType getEndpoint1(WebServiceFeature... features) {
        return super.getPort(Endpoint1, InvioSMSPortType.class, features);
    }


    /**
     *
     * @return
     *     returns InvioSMSPortType
     */
    @WebEndpoint(name = "Endpoint2")
    public InvioSMSPortType getEndpoint2() {
        return super.getPort(Endpoint2, InvioSMSPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns InvioSMSPortType
     */
    @WebEndpoint(name = "Endpoint2")
    public InvioSMSPortType getEndpoint2(WebServiceFeature... features) {
        return super.getPort(Endpoint2, InvioSMSPortType.class, features);
    }

}
